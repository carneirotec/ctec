/**
 * This file has no copyright assigned and is placed in the Public Domain.
 * This file is part of the w64 mingw-runtime package.
 * No warranty is given; refer to the file DISCLAIMER within this package.
 */
#SenãoDefinido _WINUSER_
#Defina _WINUSER_

#Defina WINUSERAPI DECLSPEC_IMPORT

#SeDefinido __cplusplus
Externo "C" {
#FimSe

#SenãoDefinido WINVER
#Defina WINVER 0x0502
#FimSe

#Inclua <stdarg.h>

#SenãoDefinido NOUSER
  Tipo HANDLE HDWP;
  Tipo VOID MENUTEMPLATEA;
  Tipo VOID MENUTEMPLATEW;
  Tipo PVOID LPMENUTEMPLATEA;
  Tipo PVOID LPMENUTEMPLATEW;

#SeDefinido UNICODE
  Tipo MENUTEMPLATEW MENUTEMPLATE;
  Tipo LPMENUTEMPLATEW LPMENUTEMPLATE;
#Senão
  Tipo MENUTEMPLATEA MENUTEMPLATE;
  Tipo LPMENUTEMPLATEA LPMENUTEMPLATE;
#FimSe

  Tipo LRESULT (CALLBACK *WNDPROC)(HWND,UINT,WPARAM,LPARAM);
  Tipo INT_PTR (CALLBACK *DLGPROC)(HWND,UINT,WPARAM,LPARAM);
  Tipo VOID (CALLBACK *TIMERPROC)(HWND,UINT,UINT_PTR,DWORD);
  Tipo WINBOOL (CALLBACK *GRAYSTRINGPROC)(HDC,LPARAM,Inteiro);
  Tipo WINBOOL (CALLBACK *WNDENUMPROC)(HWND,LPARAM);
  Tipo LRESULT (CALLBACK *HOOKPROC)(Inteiro code,WPARAM wParam,LPARAM lParam);
  Tipo VOID (CALLBACK *SENDASYNCPROC)(HWND,UINT,ULONG_PTR,LRESULT);
  Tipo WINBOOL (CALLBACK *PROPENUMPROCA)(HWND,LPCSTR,HANDLE);
  Tipo WINBOOL (CALLBACK *PROPENUMPROCW)(HWND,LPCWSTR,HANDLE);
  Tipo WINBOOL (CALLBACK *PROPENUMPROCEXA)(HWND,LPSTR,HANDLE,ULONG_PTR);
  Tipo WINBOOL (CALLBACK *PROPENUMPROCEXW)(HWND,LPWSTR,HANDLE,ULONG_PTR);
  Tipo Inteiro (CALLBACK *EDITWORDBREAKPROCA)(LPSTR lpch,Inteiro ichCurrent,Inteiro cch,Inteiro code);
  Tipo Inteiro (CALLBACK *EDITWORDBREAKPROCW)(LPWSTR lpch,Inteiro ichCurrent,Inteiro cch,Inteiro code);
  Tipo WINBOOL (CALLBACK *DRAWSTATEPROC)(HDC hdc,LPARAM lData,WPARAM wData,Inteiro cx,Inteiro cy);

#SeDefinido UNICODE
  Tipo PROPENUMPROCW PROPENUMPROC;
  Tipo PROPENUMPROCEXW PROPENUMPROCEX;
  Tipo EDITWORDBREAKPROCW EDITWORDBREAKPROC;
#Senão
  Tipo PROPENUMPROCA PROPENUMPROC;
  Tipo PROPENUMPROCEXA PROPENUMPROCEX;
  Tipo EDITWORDBREAKPROCA EDITWORDBREAKPROC;
#FimSe

  Tipo WINBOOL (CALLBACK *NAMEENUMPROCA)(LPSTR,LPARAM);
  Tipo WINBOOL (CALLBACK *NAMEENUMPROCW)(LPWSTR,LPARAM);
  Tipo NAMEENUMPROCA WINSTAENUMPROCA;
  Tipo NAMEENUMPROCA DESKTOPENUMPROCA;
  Tipo NAMEENUMPROCW WINSTAENUMPROCW;
  Tipo NAMEENUMPROCW DESKTOPENUMPROCW;

#SeDefinido UNICODE
  Tipo WINSTAENUMPROCW WINSTAENUMPROC;
  Tipo DESKTOPENUMPROCW DESKTOPENUMPROC;
#Senão
  Tipo WINSTAENUMPROCA WINSTAENUMPROC;
  Tipo DESKTOPENUMPROCA DESKTOPENUMPROC;
#FimSe

#Defina IS_INTRESOURCE(_r) ((((ULONG_PTR)(_r)) >> 16)==0)
#Defina MAKEINTRESOURCEA(i) ((LPSTR)((ULONG_PTR)((WORD)(i))))
#Defina MAKEINTRESOURCEW(i) ((LPWSTR)((ULONG_PTR)((WORD)(i))))
#SeDefinido UNICODE
#Defina MAKEINTRESOURCE MAKEINTRESOURCEW
#Senão
#Defina MAKEINTRESOURCE MAKEINTRESOURCEA
#FimSe

#SenãoDefinido NORESOURCE

#Defina RT_CURSOR MAKEINTRESOURCE(1)
#Defina RT_BITMAP MAKEINTRESOURCE(2)
#Defina RT_ICON MAKEINTRESOURCE(3)
#Defina RT_MENU MAKEINTRESOURCE(4)
#Defina RT_DIALOG MAKEINTRESOURCE(5)
#Defina RT_STRING MAKEINTRESOURCE(6)
#Defina RT_FONTDIR MAKEINTRESOURCE(7)
#Defina RT_FONT MAKEINTRESOURCE(8)
#Defina RT_ACCELERATOR MAKEINTRESOURCE(9)
#Defina RT_RCDATA MAKEINTRESOURCE(10)
#Defina RT_MESSAGETABLE MAKEINTRESOURCE(11)

#Defina DIFFERENCE 11
#Defina RT_GROUP_CURSOR MAKEINTRESOURCE((ULONG_PTR)RT_CURSOR + DIFFERENCE)
#Defina RT_GROUP_ICON MAKEINTRESOURCE((ULONG_PTR)RT_ICON + DIFFERENCE)
#Defina RT_VERSION MAKEINTRESOURCE(16)
#Defina RT_DLGINCLUDE MAKEINTRESOURCE(17)
#Defina RT_PLUGPLAY MAKEINTRESOURCE(19)
#Defina RT_VXD MAKEINTRESOURCE(20)
#Defina RT_ANICURSOR MAKEINTRESOURCE(21)
#Defina RT_ANIICON MAKEINTRESOURCE(22)
#Defina RT_HTML MAKEINTRESOURCE(23)
#SeDefinido RC_INVOKED
#Defina RT_MANIFEST 24
#Defina CREATEPROCESS_MANIFEST_RESOURCE_ID 1
#Defina ISOLATIONAWARE_MANIFEST_RESOURCE_ID 2
#Defina ISOLATIONAWARE_NOSTATICIMPORT_MANIFEST_RESOURCE_ID 3
#Defina MINIMUM_RESERVED_MANIFEST_RESOURCE_ID 1
#Defina MAXIMUM_RESERVED_MANIFEST_RESOURCE_ID 16
#Senão
#Defina RT_MANIFEST MAKEINTRESOURCE(24)
#Defina CREATEPROCESS_MANIFEST_RESOURCE_ID MAKEINTRESOURCE(1)
#Defina ISOLATIONAWARE_MANIFEST_RESOURCE_ID MAKEINTRESOURCE(2)
#Defina ISOLATIONAWARE_NOSTATICIMPORT_MANIFEST_RESOURCE_ID MAKEINTRESOURCE(3)
#Defina MINIMUM_RESERVED_MANIFEST_RESOURCE_ID MAKEINTRESOURCE(1)
#Defina MAXIMUM_RESERVED_MANIFEST_RESOURCE_ID MAKEINTRESOURCE(16)
#FimSe
#FimSe

#SeDefinido UNICODE
#Defina wvsprintf wvsprintfW
#Defina wsprintf wsprintfW
#Senão
#Defina wvsprintf wvsprintfA
#Defina wsprintf wsprintfA
#FimSe

  WINUSERAPI Inteiro WINAPI wvsprintfA(LPSTR,LPCSTR,va_list arglist);
  WINUSERAPI Inteiro WINAPI wvsprintfW(LPWSTR,LPCWSTR,va_list arglist);
  WINUSERAPI Inteiro WINAPIV wsprintfA(LPSTR,LPCSTR,...);
  WINUSERAPI Inteiro WINAPIV wsprintfW(LPWSTR,LPCWSTR,...);

#Defina SETWALLPAPER_DEFAULT ((LPWSTR)-1)

#SenãoDefinido NOSCROLL
#Defina SB_HORZ 0
#Defina SB_VERT 1
#Defina SB_CTL 2
#Defina SB_BOTH 3

#Defina SB_LINEUP 0
#Defina SB_LINELEFT 0
#Defina SB_LINEDOWN 1
#Defina SB_LINERIGHT 1
#Defina SB_PAGEUP 2
#Defina SB_PAGELEFT 2
#Defina SB_PAGEDOWN 3
#Defina SB_PAGERIGHT 3
#Defina SB_THUMBPOSITION 4
#Defina SB_THUMBTRACK 5
#Defina SB_TOP 6
#Defina SB_LEFT 6
#Defina SB_BOTTOM 7
#Defina SB_RIGHT 7
#Defina SB_ENDSCROLL 8
#FimSe

#SenãoDefinido NOSHOWWINDOW
#Defina SW_HIDE 0
#Defina SW_SHOWNORMAL 1
#Defina SW_NORMAL 1
#Defina SW_SHOWMINIMIZED 2
#Defina SW_SHOWMAXIMIZED 3
#Defina SW_MAXIMIZE 3
#Defina SW_SHOWNOACTIVATE 4
#Defina SW_SHOW 5
#Defina SW_MINIMIZE 6
#Defina SW_SHOWMINNOACTIVE 7
#Defina SW_SHOWNA 8
#Defina SW_RESTORE 9
#Defina SW_SHOWDEFAULT 10
#Defina SW_FORCEMINIMIZE 11
#Defina SW_MAX 11

#Defina HIDE_WINDOW 0
#Defina SHOW_OPENWINDOW 1
#Defina SHOW_ICONWINDOW 2
#Defina SHOW_FULLSCREEN 3
#Defina SHOW_OPENNOACTIVATE 4

#Defina SW_PARENTCLOSING 1
#Defina SW_OTHERZOOM 2
#Defina SW_PARENTOPENING 3
#Defina SW_OTHERUNZOOM 4
#FimSe

#Defina AW_HOR_POSITIVE 0x00000001
#Defina AW_HOR_NEGATIVE 0x00000002
#Defina AW_VER_POSITIVE 0x00000004
#Defina AW_VER_NEGATIVE 0x00000008
#Defina AW_CENTER 0x00000010
#Defina AW_HIDE 0x00010000
#Defina AW_ACTIVATE 0x00020000
#Defina AW_SLIDE 0x00040000
#Defina AW_BLEND 0x00080000

#Defina KF_EXTENDED 0x0100
#Defina KF_DLGMODE 0x0800
#Defina KF_MENUMODE 0x1000
#Defina KF_ALTDOWN 0x2000
#Defina KF_REPEAT 0x4000
#Defina KF_UP 0x8000

#SenãoDefinido NOVIRTUALKEYCODES

#Defina VK_LBUTTON 0x01
#Defina VK_RBUTTON 0x02
#Defina VK_CANCEL 0x03
#Defina VK_MBUTTON 0x04
#Defina VK_XBUTTON1 0x05
#Defina VK_XBUTTON2 0x06
#Defina VK_BACK 0x08
#Defina VK_TAB 0x09
#Defina VK_CLEAR 0x0C
#Defina VK_RETURN 0x0D
#Defina VK_SHIFT 0x10
#Defina VK_CONTROL 0x11
#Defina VK_MENU 0x12
#Defina VK_PAUSE 0x13
#Defina VK_CAPITAL 0x14
#Defina VK_KANA 0x15
#Defina VK_HANGEUL 0x15
#Defina VK_HANGUL 0x15
#Defina VK_JUNJA 0x17
#Defina VK_FINAL 0x18
#Defina VK_HANJA 0x19
#Defina VK_KANJI 0x19
#Defina VK_ESCAPE 0x1B
#Defina VK_CONVERT 0x1C
#Defina VK_NONCONVERT 0x1D
#Defina VK_ACCEPT 0x1E
#Defina VK_MODECHANGE 0x1F
#Defina VK_SPACE 0x20
#Defina VK_PRIOR 0x21
#Defina VK_NEXT 0x22
#Defina VK_END 0x23
#Defina VK_HOME 0x24
#Defina VK_LEFT 0x25
#Defina VK_UP 0x26
#Defina VK_RIGHT 0x27
#Defina VK_DOWN 0x28
#Defina VK_SELECT 0x29
#Defina VK_PRINT 0x2A
#Defina VK_EXECUTE 0x2B
#Defina VK_SNAPSHOT 0x2C
#Defina VK_INSERT 0x2D
#Defina VK_DELETE 0x2E
#Defina VK_HELP 0x2F

#Defina VK_LWIN 0x5B
#Defina VK_RWIN 0x5C
#Defina VK_APPS 0x5D
#Defina VK_SLEEP 0x5F
#Defina VK_NUMPAD0 0x60
#Defina VK_NUMPAD1 0x61
#Defina VK_NUMPAD2 0x62
#Defina VK_NUMPAD3 0x63
#Defina VK_NUMPAD4 0x64
#Defina VK_NUMPAD5 0x65
#Defina VK_NUMPAD6 0x66
#Defina VK_NUMPAD7 0x67
#Defina VK_NUMPAD8 0x68
#Defina VK_NUMPAD9 0x69
#Defina VK_MULTIPLY 0x6A
#Defina VK_ADD 0x6B
#Defina VK_SEPARATOR 0x6C
#Defina VK_SUBTRACT 0x6D
#Defina VK_DECIMAL 0x6E
#Defina VK_DIVIDE 0x6F
#Defina VK_F1 0x70
#Defina VK_F2 0x71
#Defina VK_F3 0x72
#Defina VK_F4 0x73
#Defina VK_F5 0x74
#Defina VK_F6 0x75
#Defina VK_F7 0x76
#Defina VK_F8 0x77
#Defina VK_F9 0x78
#Defina VK_F10 0x79
#Defina VK_F11 0x7A
#Defina VK_F12 0x7B
#Defina VK_F13 0x7C
#Defina VK_F14 0x7D
#Defina VK_F15 0x7E
#Defina VK_F16 0x7F
#Defina VK_F17 0x80
#Defina VK_F18 0x81
#Defina VK_F19 0x82
#Defina VK_F20 0x83
#Defina VK_F21 0x84
#Defina VK_F22 0x85
#Defina VK_F23 0x86
#Defina VK_F24 0x87
#Defina VK_NUMLOCK 0x90
#Defina VK_SCROLL 0x91
#Defina VK_OEM_NEC_EQUAL 0x92
#Defina VK_OEM_FJ_JISHO 0x92
#Defina VK_OEM_FJ_MASSHOU 0x93
#Defina VK_OEM_FJ_TOUROKU 0x94
#Defina VK_OEM_FJ_LOYA 0x95
#Defina VK_OEM_FJ_ROYA 0x96
#Defina VK_LSHIFT 0xA0
#Defina VK_RSHIFT 0xA1
#Defina VK_LCONTROL 0xA2
#Defina VK_RCONTROL 0xA3
#Defina VK_LMENU 0xA4
#Defina VK_RMENU 0xA5
#Defina VK_BROWSER_BACK 0xA6
#Defina VK_BROWSER_FORWARD 0xA7
#Defina VK_BROWSER_REFRESH 0xA8
#Defina VK_BROWSER_STOP 0xA9
#Defina VK_BROWSER_SEARCH 0xAA
#Defina VK_BROWSER_FAVORITES 0xAB
#Defina VK_BROWSER_HOME 0xAC
#Defina VK_VOLUME_MUTE 0xAD
#Defina VK_VOLUME_DOWN 0xAE
#Defina VK_VOLUME_UP 0xAF
#Defina VK_MEDIA_NEXT_TRACK 0xB0
#Defina VK_MEDIA_PREV_TRACK 0xB1
#Defina VK_MEDIA_STOP 0xB2
#Defina VK_MEDIA_PLAY_PAUSE 0xB3
#Defina VK_LAUNCH_MAIL 0xB4
#Defina VK_LAUNCH_MEDIA_SELECT 0xB5
#Defina VK_LAUNCH_APP1 0xB6
#Defina VK_LAUNCH_APP2 0xB7
#Defina VK_OEM_1 0xBA
#Defina VK_OEM_PLUS 0xBB
#Defina VK_OEM_COMMA 0xBC
#Defina VK_OEM_MINUS 0xBD
#Defina VK_OEM_PERIOD 0xBE
#Defina VK_OEM_2 0xBF
#Defina VK_OEM_3 0xC0
#Defina VK_OEM_4 0xDB
#Defina VK_OEM_5 0xDC
#Defina VK_OEM_6 0xDD
#Defina VK_OEM_7 0xDE
#Defina VK_OEM_8 0xDF
#Defina VK_OEM_AX 0xE1
#Defina VK_OEM_102 0xE2
#Defina VK_ICO_HELP 0xE3
#Defina VK_ICO_00 0xE4
#Defina VK_PROCESSKEY 0xE5
#Defina VK_ICO_CLEAR 0xE6
#Defina VK_PACKET 0xE7
#Defina VK_OEM_RESET 0xE9
#Defina VK_OEM_JUMP 0xEA
#Defina VK_OEM_PA1 0xEB
#Defina VK_OEM_PA2 0xEC
#Defina VK_OEM_PA3 0xED
#Defina VK_OEM_WSCTRL 0xEE
#Defina VK_OEM_CUSEL 0xEF
#Defina VK_OEM_ATTN 0xF0
#Defina VK_OEM_FINISH 0xF1
#Defina VK_OEM_COPY 0xF2
#Defina VK_OEM_AUTO 0xF3
#Defina VK_OEM_ENLW 0xF4
#Defina VK_OEM_BACKTAB 0xF5
#Defina VK_ATTN 0xF6
#Defina VK_CRSEL 0xF7
#Defina VK_EXSEL 0xF8
#Defina VK_EREOF 0xF9
#Defina VK_PLAY 0xFA
#Defina VK_ZOOM 0xFB
#Defina VK_NONAME 0xFC
#Defina VK_PA1 0xFD
#Defina VK_OEM_CLEAR 0xFE
#FimSe

#SenãoDefinido NOWH

#Defina WH_MIN (-1)
#Defina WH_MSGFILTER (-1)
#Defina WH_JOURNALRECORD 0
#Defina WH_JOURNALPLAYBACK 1
#Defina WH_KEYBOARD 2
#Defina WH_GETMESSAGE 3
#Defina WH_CALLWNDPROC 4
#Defina WH_CBT 5
#Defina WH_SYSMSGFILTER 6
#Defina WH_MOUSE 7
#Defina WH_HARDWARE 8
#Defina WH_DEBUG 9
#Defina WH_SHELL 10
#Defina WH_FOREGROUNDIDLE 11
#Defina WH_CALLWNDPROCRET 12

#Defina WH_KEYBOARD_LL 13
#Defina WH_MOUSE_LL 14

#Defina WH_MAX 14

#Defina WH_MINHOOK WH_MIN
#Defina WH_MAXHOOK WH_MAX

#Defina HC_ACTION 0
#Defina HC_GETNEXT 1
#Defina HC_SKIP 2
#Defina HC_NOREMOVE 3
#Defina HC_NOREM HC_NOREMOVE
#Defina HC_SYSMODALON 4
#Defina HC_SYSMODALOFF 5

#Defina HCBT_MOVESIZE 0
#Defina HCBT_MINMAX 1
#Defina HCBT_QS 2
#Defina HCBT_CREATEWND 3
#Defina HCBT_DESTROYWND 4
#Defina HCBT_ACTIVATE 5
#Defina HCBT_CLICKSKIPPED 6
#Defina HCBT_KEYSKIPPED 7
#Defina HCBT_SYSCOMMAND 8
#Defina HCBT_SETFOCUS 9

  Tipo Estrutura tagCBT_CREATEWNDA {
    Estrutura tagCREATESTRUCTA *lpcs;
    HWND hwndInsertAfter;
  } CBT_CREATEWNDA,*LPCBT_CREATEWNDA;

  Tipo Estrutura tagCBT_CREATEWNDW {
    Estrutura tagCREATESTRUCTW *lpcs;
    HWND hwndInsertAfter;
  } CBT_CREATEWNDW,*LPCBT_CREATEWNDW;
#SeDefinido UNICODE
  Tipo CBT_CREATEWNDW CBT_CREATEWND;
  Tipo LPCBT_CREATEWNDW LPCBT_CREATEWND;
#Senão
  Tipo CBT_CREATEWNDA CBT_CREATEWND;
  Tipo LPCBT_CREATEWNDA LPCBT_CREATEWND;
#FimSe

  Tipo Estrutura tagCBTACTIVATESTRUCT
  {
    WINBOOL fMouse;
    HWND hWndActive;
  } CBTACTIVATESTRUCT,*LPCBTACTIVATESTRUCT;

  Tipo Estrutura tagWTSSESSION_NOTIFICATION {
    DWORD cbSize;
    DWORD dwSessionId;

  } WTSSESSION_NOTIFICATION,*PWTSSESSION_NOTIFICATION;

#Defina WTS_CONSOLE_CONNECT 0x1
#Defina WTS_CONSOLE_DISCONNECT 0x2
#Defina WTS_REMOTE_CONNECT 0x3
#Defina WTS_REMOTE_DISCONNECT 0x4
#Defina WTS_SESSION_LOGON 0x5
#Defina WTS_SESSION_LOGOFF 0x6
#Defina WTS_SESSION_LOCK 0x7
#Defina WTS_SESSION_UNLOCK 0x8
#Defina WTS_SESSION_REMOTE_CONTROL 0x9

#Defina MSGF_DIALOGBOX 0
#Defina MSGF_MESSAGEBOX 1
#Defina MSGF_MENU 2
#Defina MSGF_SCROLLBAR 5
#Defina MSGF_NEXTWINDOW 6
#Defina MSGF_MAX 8
#Defina MSGF_USER 4096

#Defina HSHELL_WINDOWCREATED 1
#Defina HSHELL_WINDOWDESTROYED 2
#Defina HSHELL_ACTIVATESHELLWINDOW 3

#Defina HSHELL_WINDOWACTIVATED 4
#Defina HSHELL_GETMINRECT 5
#Defina HSHELL_REDRAW 6
#Defina HSHELL_TASKMAN 7
#Defina HSHELL_LANGUAGE 8
#Defina HSHELL_SYSMENU 9
#Defina HSHELL_ENDTASK 10
#Defina HSHELL_ACCESSIBILITYSTATE 11
#Defina HSHELL_APPCOMMAND 12
#Defina HSHELL_WINDOWREPLACED 13
#Defina HSHELL_WINDOWREPLACING 14
#Defina HSHELL_HIGHBIT 0x8000
#Defina HSHELL_FLASH (HSHELL_REDRAW|HSHELL_HIGHBIT)
#Defina HSHELL_RUDEAPPACTIVATED (HSHELL_WINDOWACTIVATED|HSHELL_HIGHBIT)

#Defina ACCESS_STICKYKEYS 0x0001
#Defina ACCESS_FILTERKEYS 0x0002
#Defina ACCESS_MOUSEKEYS 0x0003

#Defina APPCOMMAND_BROWSER_BACKWARD 1
#Defina APPCOMMAND_BROWSER_FORWARD 2
#Defina APPCOMMAND_BROWSER_REFRESH 3
#Defina APPCOMMAND_BROWSER_STOP 4
#Defina APPCOMMAND_BROWSER_SEARCH 5
#Defina APPCOMMAND_BROWSER_FAVORITES 6
#Defina APPCOMMAND_BROWSER_HOME 7
#Defina APPCOMMAND_VOLUME_MUTE 8
#Defina APPCOMMAND_VOLUME_DOWN 9
#Defina APPCOMMAND_VOLUME_UP 10
#Defina APPCOMMAND_MEDIA_NEXTTRACK 11
#Defina APPCOMMAND_MEDIA_PREVIOUSTRACK 12
#Defina APPCOMMAND_MEDIA_STOP 13
#Defina APPCOMMAND_MEDIA_PLAY_PAUSE 14
#Defina APPCOMMAND_LAUNCH_MAIL 15
#Defina APPCOMMAND_LAUNCH_MEDIA_SELECT 16
#Defina APPCOMMAND_LAUNCH_APP1 17
#Defina APPCOMMAND_LAUNCH_APP2 18
#Defina APPCOMMAND_BASS_DOWN 19
#Defina APPCOMMAND_BASS_BOOST 20
#Defina APPCOMMAND_BASS_UP 21
#Defina APPCOMMAND_TREBLE_DOWN 22
#Defina APPCOMMAND_TREBLE_UP 23
#Defina APPCOMMAND_MICROPHONE_VOLUME_MUTE 24
#Defina APPCOMMAND_MICROPHONE_VOLUME_DOWN 25
#Defina APPCOMMAND_MICROPHONE_VOLUME_UP 26
#Defina APPCOMMAND_HELP 27
#Defina APPCOMMAND_FIND 28
#Defina APPCOMMAND_NEW 29
#Defina APPCOMMAND_OPEN 30
#Defina APPCOMMAND_CLOSE 31
#Defina APPCOMMAND_SAVE 32
#Defina APPCOMMAND_PRINT 33
#Defina APPCOMMAND_UNDO 34
#Defina APPCOMMAND_REDO 35
#Defina APPCOMMAND_COPY 36
#Defina APPCOMMAND_CUT 37
#Defina APPCOMMAND_PASTE 38
#Defina APPCOMMAND_REPLY_TO_MAIL 39
#Defina APPCOMMAND_FORWARD_MAIL 40
#Defina APPCOMMAND_SEND_MAIL 41
#Defina APPCOMMAND_SPELL_CHECK 42
#Defina APPCOMMAND_DICTATE_OR_COMMAND_CONTROL_TOGGLE 43
#Defina APPCOMMAND_MIC_ON_OFF_TOGGLE 44
#Defina APPCOMMAND_CORRECTION_LIST 45
#Defina APPCOMMAND_MEDIA_PLAY 46
#Defina APPCOMMAND_MEDIA_PAUSE 47
#Defina APPCOMMAND_MEDIA_RECORD 48
#Defina APPCOMMAND_MEDIA_FAST_FORWARD 49
#Defina APPCOMMAND_MEDIA_REWIND 50
#Defina APPCOMMAND_MEDIA_CHANNEL_UP 51
#Defina APPCOMMAND_MEDIA_CHANNEL_DOWN 52

#Defina FAPPCOMMAND_MOUSE 0x8000
#Defina FAPPCOMMAND_KEY 0
#Defina FAPPCOMMAND_OEM 0x1000
#Defina FAPPCOMMAND_MASK 0xF000

#Defina GET_APPCOMMAND_LPARAM(lParam) ((Curto)(HIWORD(lParam) & ~FAPPCOMMAND_MASK))
#Defina GET_DEVICE_LPARAM(lParam) ((WORD)(HIWORD(lParam) & FAPPCOMMAND_MASK))
#Defina GET_MOUSEORKEY_LPARAM GET_DEVICE_LPARAM
#Defina GET_FLAGS_LPARAM(lParam) (LOWORD(lParam))
#Defina GET_KEYSTATE_LPARAM(lParam) GET_FLAGS_LPARAM(lParam)

  Tipo Estrutura {
    HWND hwnd;
    RECT rc;
  } SHELLHOOKINFO,*LPSHELLHOOKINFO;

  Tipo Estrutura tagEVENTMSG {
    UINT message;
    UINT paramL;
    UINT paramH;
    DWORD time;
    HWND hwnd;
  } EVENTMSG,*PEVENTMSGMSG,*NPEVENTMSGMSG,*LPEVENTMSGMSG;

  Tipo Estrutura tagEVENTMSG *PEVENTMSG,*NPEVENTMSG,*LPEVENTMSG;

  Tipo Estrutura tagCWPSTRUCT {
    LPARAM lParam;
    WPARAM wParam;
    UINT message;
    HWND hwnd;
  } CWPSTRUCT,*PCWPSTRUCT,*NPCWPSTRUCT,*LPCWPSTRUCT;

  Tipo Estrutura tagCWPRETSTRUCT {
    LRESULT lResult;
    LPARAM lParam;
    WPARAM wParam;
    UINT message;
    HWND hwnd;
  } CWPRETSTRUCT,*PCWPRETSTRUCT,*NPCWPRETSTRUCT,*LPCWPRETSTRUCT;

#Defina LLKHF_EXTENDED (KF_EXTENDED >> 8)
#Defina LLKHF_INJECTED 0x00000010
#Defina LLKHF_ALTDOWN (KF_ALTDOWN >> 8)
#Defina LLKHF_UP (KF_UP >> 8)

#Defina LLMHF_INJECTED 0x00000001

  Tipo Estrutura tagKBDLLHOOKSTRUCT {
    DWORD vkCode;
    DWORD scanCode;
    DWORD flags;
    DWORD time;
    ULONG_PTR dwExtraInfo;
  } KBDLLHOOKSTRUCT,*LPKBDLLHOOKSTRUCT,*PKBDLLHOOKSTRUCT;

  Tipo Estrutura tagMSLLHOOKSTRUCT {
    POINT pt;
    DWORD mouseData;
    DWORD flags;
    DWORD time;
    ULONG_PTR dwExtraInfo;
  } MSLLHOOKSTRUCT,*LPMSLLHOOKSTRUCT,*PMSLLHOOKSTRUCT;

  Tipo Estrutura tagDEBUGHOOKINFO {
    DWORD idThread;
    DWORD idThreadInstaller;
    LPARAM lParam;
    WPARAM wParam;
    Inteiro code;
  } DEBUGHOOKINFO,*PDEBUGHOOKINFO,*NPDEBUGHOOKINFO,*LPDEBUGHOOKINFO;

  Tipo Estrutura tagMOUSEHOOKSTRUCT {
    POINT pt;
    HWND hwnd;
    UINT wHitTestCode;
    ULONG_PTR dwExtraInfo;
  } MOUSEHOOKSTRUCT,*LPMOUSEHOOKSTRUCT,*PMOUSEHOOKSTRUCT;

#SeDefinido __cplusplus
  Tipo Estrutura tagMOUSEHOOKSTRUCTEX : public tagMOUSEHOOKSTRUCT {
    DWORD mouseData;
  } MOUSEHOOKSTRUCTEX,*LPMOUSEHOOKSTRUCTEX,*PMOUSEHOOKSTRUCTEX;
#Senão
  Tipo Estrutura tagMOUSEHOOKSTRUCTEX {
    MOUSEHOOKSTRUCT _unnamed;
    DWORD mouseData;
  } MOUSEHOOKSTRUCTEX,*LPMOUSEHOOKSTRUCTEX,*PMOUSEHOOKSTRUCTEX;
#FimSe

  Tipo Estrutura tagHARDWAREHOOKSTRUCT {
    HWND hwnd;
    UINT message;
    WPARAM wParam;
    LPARAM lParam;
  } HARDWAREHOOKSTRUCT,*LPHARDWAREHOOKSTRUCT,*PHARDWAREHOOKSTRUCT;
#FimSe

#Defina HKL_PREV 0
#Defina HKL_NEXT 1

#Defina KLF_ACTIVATE 0x00000001
#Defina KLF_SUBSTITUTE_OK 0x00000002
#Defina KLF_REORDER 0x00000008
#Defina KLF_REPLACELANG 0x00000010
#Defina KLF_NOTELLSHELL 0x00000080
#Defina KLF_SETFORPROCESS 0x00000100
#Defina KLF_SHIFTLOCK 0x00010000
#Defina KLF_RESET 0x40000000

#Defina INPUTLANGCHANGE_SYSCHARSET 0x0001
#Defina INPUTLANGCHANGE_FORWARD 0x0002
#Defina INPUTLANGCHANGE_BACKWARD 0x0004

#Defina KL_NAMELENGTH 9

#SeDefinido UNICODE
#Defina LoadKeyboardLayout LoadKeyboardLayoutW
#Defina GetKeyboardLayoutName GetKeyboardLayoutNameW
#Senão
#Defina LoadKeyboardLayout LoadKeyboardLayoutA
#Defina GetKeyboardLayoutName GetKeyboardLayoutNameA
#FimSe

  WINUSERAPI HKL WINAPI LoadKeyboardLayoutA(LPCSTR pwszKLID,UINT Flags);
  WINUSERAPI HKL WINAPI LoadKeyboardLayoutW(LPCWSTR pwszKLID,UINT Flags);
  WINUSERAPI HKL WINAPI ActivateKeyboardLayout(HKL hkl,UINT Flags);
  WINUSERAPI Inteiro WINAPI ToUnicodeEx(UINT wVirtKey,UINT wScanCode,CONST BYTE *lpKeyState,LPWSTR pwszBuff,Inteiro cchBuff,UINT wFlags,HKL dwhkl);
  WINUSERAPI WINBOOL WINAPI UnloadKeyboardLayout(HKL hkl);
  WINUSERAPI WINBOOL WINAPI GetKeyboardLayoutNameA(LPSTR pwszKLID);
  WINUSERAPI WINBOOL WINAPI GetKeyboardLayoutNameW(LPWSTR pwszKLID);
  WINUSERAPI Inteiro WINAPI GetKeyboardLayoutList(Inteiro nBuff,HKL *lpList);
  WINUSERAPI HKL WINAPI GetKeyboardLayout(DWORD idThread);

  Tipo Estrutura tagMOUSEMOVEPOINT {
    Inteiro x;
    Inteiro y;
    DWORD time;
    ULONG_PTR dwExtraInfo;
  } MOUSEMOVEPOINT,*PMOUSEMOVEPOINT,*LPMOUSEMOVEPOINT;

#Defina GMMP_USE_DISPLAY_POINTS 1
#Defina GMMP_USE_HIGH_RESOLUTION_POINTS 2

  WINUSERAPI Inteiro WINAPI GetMouseMovePointsEx(UINT cbSize,LPMOUSEMOVEPOINT lppt,LPMOUSEMOVEPOINT lpptBuf,Inteiro nBufPoints,DWORD resolution);

#SenãoDefinido NODESKTOP

#Defina DESKTOP_READOBJECTS 0x0001L
#Defina DESKTOP_CREATEWINDOW 0x0002L
#Defina DESKTOP_CREATEMENU 0x0004L
#Defina DESKTOP_HOOKCONTROL 0x0008L
#Defina DESKTOP_JOURNALRECORD 0x0010L
#Defina DESKTOP_JOURNALPLAYBACK 0x0020L
#Defina DESKTOP_ENUMERATE 0x0040L
#Defina DESKTOP_WRITEOBJECTS 0x0080L
#Defina DESKTOP_SWITCHDESKTOP 0x0100L

#Defina DF_ALLOWOTHERACCOUNTHOOK 0x0001L

#SeDefinido _WINGDI_
#SenãoDefinido NOGDI
#SeDefinido UNICODE
#Defina CreateDesktop CreateDesktopW
#Senão
#Defina CreateDesktop CreateDesktopA
#FimSe

  WINUSERAPI HDESK WINAPI CreateDesktopA(LPCSTR lpszDesktop,LPCSTR lpszDevice,LPDEVMODEA pDevmode,DWORD dwFlags,ACCESS_MASK dwDesiredAccess,LPSECURITY_ATTRIBUTES lpsa);
  WINUSERAPI HDESK WINAPI CreateDesktopW(LPCWSTR lpszDesktop,LPCWSTR lpszDevice,LPDEVMODEW pDevmode,DWORD dwFlags,ACCESS_MASK dwDesiredAccess,LPSECURITY_ATTRIBUTES lpsa);
#FimSe
#FimSe

#SeDefinido UNICODE
#Defina OpenDesktop OpenDesktopW
#Defina EnumDesktops EnumDesktopsW
#Senão
#Defina OpenDesktop OpenDesktopA
#Defina EnumDesktops EnumDesktopsA
#FimSe

  WINUSERAPI HDESK WINAPI OpenDesktopA(LPCSTR lpszDesktop,DWORD dwFlags,WINBOOL fInherit,ACCESS_MASK dwDesiredAccess);
  WINUSERAPI HDESK WINAPI OpenDesktopW(LPCWSTR lpszDesktop,DWORD dwFlags,WINBOOL fInherit,ACCESS_MASK dwDesiredAccess);
  WINUSERAPI HDESK WINAPI OpenInputDesktop(DWORD dwFlags,WINBOOL fInherit,ACCESS_MASK dwDesiredAccess);
  WINUSERAPI WINBOOL WINAPI EnumDesktopsA(HWINSTA hwinsta,DESKTOPENUMPROCA lpEnumFunc,LPARAM lParam);
  WINUSERAPI WINBOOL WINAPI EnumDesktopsW(HWINSTA hwinsta,DESKTOPENUMPROCW lpEnumFunc,LPARAM lParam);
  WINUSERAPI WINBOOL WINAPI EnumDesktopWindows(HDESK hDesktop,WNDENUMPROC lpfn,LPARAM lParam);
  WINUSERAPI WINBOOL WINAPI SwitchDesktop(HDESK hDesktop);
  WINUSERAPI WINBOOL WINAPI SetThreadDesktop(HDESK hDesktop);
  WINUSERAPI WINBOOL WINAPI CloseDesktop(HDESK hDesktop);
  WINUSERAPI HDESK WINAPI GetThreadDesktop(DWORD dwThreadId);
#FimSe

#SenãoDefinido NOWINDOWSTATION
#Defina WINSTA_ENUMDESKTOPS 0x0001L
#Defina WINSTA_READATTRIBUTES 0x0002L
#Defina WINSTA_ACCESSCLIPBOARD 0x0004L
#Defina WINSTA_CREATEDESKTOP 0x0008L
#Defina WINSTA_WRITEATTRIBUTES 0x0010L
#Defina WINSTA_ACCESSGLOBALATOMS 0x0020L
#Defina WINSTA_EXITWINDOWS 0x0040L
#Defina WINSTA_ENUMERATE 0x0100L
#Defina WINSTA_READSCREEN 0x0200L
#Defina WINSTA_ALL_ACCESS (WINSTA_ENUMDESKTOPS | WINSTA_READATTRIBUTES | WINSTA_ACCESSCLIPBOARD | WINSTA_CREATEDESKTOP | WINSTA_WRITEATTRIBUTES | WINSTA_ACCESSGLOBALATOMS | WINSTA_EXITWINDOWS | WINSTA_ENUMERATE | WINSTA_READSCREEN)

#Defina CWF_CREATE_ONLY 0x0001L

#Defina WSF_VISIBLE 0x0001L

#SeDefinido UNICODE
#Defina CreateWindowStation CreateWindowStationW
#Defina OpenWindowStation OpenWindowStationW
#Defina EnumWindowStations EnumWindowStationsW
#Senão
#Defina CreateWindowStation CreateWindowStationA
#Defina OpenWindowStation OpenWindowStationA
#Defina EnumWindowStations EnumWindowStationsA
#FimSe

  WINUSERAPI HWINSTA WINAPI CreateWindowStationA(LPCSTR lpwinsta,DWORD dwFlags,ACCESS_MASK dwDesiredAccess,LPSECURITY_ATTRIBUTES lpsa);
  WINUSERAPI HWINSTA WINAPI CreateWindowStationW(LPCWSTR lpwinsta,DWORD dwFlags,ACCESS_MASK dwDesiredAccess,LPSECURITY_ATTRIBUTES lpsa);
  WINUSERAPI HWINSTA WINAPI OpenWindowStationA(LPCSTR lpszWinSta,WINBOOL fInherit,ACCESS_MASK dwDesiredAccess);
  WINUSERAPI HWINSTA WINAPI OpenWindowStationW(LPCWSTR lpszWinSta,WINBOOL fInherit,ACCESS_MASK dwDesiredAccess);
  WINUSERAPI WINBOOL WINAPI EnumWindowStationsA(WINSTAENUMPROCA lpEnumFunc,LPARAM lParam);
  WINUSERAPI WINBOOL WINAPI EnumWindowStationsW(WINSTAENUMPROCW lpEnumFunc,LPARAM lParam);
  WINUSERAPI WINBOOL WINAPI CloseWindowStation(HWINSTA hWinSta);
  WINUSERAPI WINBOOL WINAPI SetProcessWindowStation(HWINSTA hWinSta);
  WINUSERAPI HWINSTA WINAPI GetProcessWindowStation(VOID);
#FimSe

#SenãoDefinido NOSECURITY
  WINUSERAPI WINBOOL WINAPI SetUserObjectSecurity(HANDLE hObj,PSECURITY_INFORMATION pSIRequested,PSECURITY_DESCRIPTOR pSID);
  WINUSERAPI WINBOOL WINAPI GetUserObjectSecurity(HANDLE hObj,PSECURITY_INFORMATION pSIRequested,PSECURITY_DESCRIPTOR pSID,DWORD nLength,LPDWORD lpnLengthNeeded);

#Defina UOI_FLAGS 1
#Defina UOI_NAME 2
#Defina UOI_TYPE 3
#Defina UOI_USER_SID 4

  Tipo Estrutura tagUSEROBJECTFLAGS {
    WINBOOL fInherit;
    WINBOOL fReserved;
    DWORD dwFlags;
  } USEROBJECTFLAGS,*PUSEROBJECTFLAGS;

#SeDefinido UNICODE
#Defina GetUserObjectInformation GetUserObjectInformationW
#Defina SetUserObjectInformation SetUserObjectInformationW
#Senão
#Defina GetUserObjectInformation GetUserObjectInformationA
#Defina SetUserObjectInformation SetUserObjectInformationA
#FimSe

  WINUSERAPI WINBOOL WINAPI GetUserObjectInformationA(HANDLE hObj,Inteiro nIndex,PVOID pvInfo,DWORD nLength,LPDWORD lpnLengthNeeded);
  WINUSERAPI WINBOOL WINAPI GetUserObjectInformationW(HANDLE hObj,Inteiro nIndex,PVOID pvInfo,DWORD nLength,LPDWORD lpnLengthNeeded);
  WINUSERAPI WINBOOL WINAPI SetUserObjectInformationA(HANDLE hObj,Inteiro nIndex,PVOID pvInfo,DWORD nLength);
  WINUSERAPI WINBOOL WINAPI SetUserObjectInformationW(HANDLE hObj,Inteiro nIndex,PVOID pvInfo,DWORD nLength);
#FimSe

  Tipo Estrutura tagWNDCLASSEXA {
    UINT cbSize;
    UINT style;
    WNDPROC lpfnWndProc;
    Inteiro cbClsExtra;
    Inteiro cbWndExtra;
    HINSTANCE hInstance;
    HICON hIcon;
    HCURSOR hCursor;
    HBRUSH hbrBackground;
    LPCSTR lpszMenuName;
    LPCSTR lpszClassName;
    HICON hIconSm;
  } WNDCLASSEXA,*PWNDCLASSEXA,*NPWNDCLASSEXA,*LPWNDCLASSEXA;

  Tipo Estrutura tagWNDCLASSEXW {
    UINT cbSize;
    UINT style;
    WNDPROC lpfnWndProc;
    Inteiro cbClsExtra;
    Inteiro cbWndExtra;
    HINSTANCE hInstance;
    HICON hIcon;
    HCURSOR hCursor;
    HBRUSH hbrBackground;
    LPCWSTR lpszMenuName;
    LPCWSTR lpszClassName;

    HICON hIconSm;
  } WNDCLASSEXW,*PWNDCLASSEXW,*NPWNDCLASSEXW,*LPWNDCLASSEXW;

#SeDefinido UNICODE
  Tipo WNDCLASSEXW WNDCLASSEX;
  Tipo PWNDCLASSEXW PWNDCLASSEX;
  Tipo NPWNDCLASSEXW NPWNDCLASSEX;
  Tipo LPWNDCLASSEXW LPWNDCLASSEX;
#Senão
  Tipo WNDCLASSEXA WNDCLASSEX;
  Tipo PWNDCLASSEXA PWNDCLASSEX;
  Tipo NPWNDCLASSEXA NPWNDCLASSEX;
  Tipo LPWNDCLASSEXA LPWNDCLASSEX;
#FimSe

  Tipo Estrutura tagWNDCLASSA {
    UINT style;
    WNDPROC lpfnWndProc;
    Inteiro cbClsExtra;
    Inteiro cbWndExtra;
    HINSTANCE hInstance;
    HICON hIcon;
    HCURSOR hCursor;
    HBRUSH hbrBackground;
    LPCSTR lpszMenuName;
    LPCSTR lpszClassName;
  } WNDCLASSA,*PWNDCLASSA,*NPWNDCLASSA,*LPWNDCLASSA;

  Tipo Estrutura tagWNDCLASSW {
    UINT style;
    WNDPROC lpfnWndProc;
    Inteiro cbClsExtra;
    Inteiro cbWndExtra;
    HINSTANCE hInstance;
    HICON hIcon;
    HCURSOR hCursor;
    HBRUSH hbrBackground;
    LPCWSTR lpszMenuName;
    LPCWSTR lpszClassName;
  } WNDCLASSW,*PWNDCLASSW,*NPWNDCLASSW,*LPWNDCLASSW;

#SeDefinido UNICODE
  Tipo WNDCLASSW WNDCLASS;
  Tipo PWNDCLASSW PWNDCLASS;
  Tipo NPWNDCLASSW NPWNDCLASS;
  Tipo LPWNDCLASSW LPWNDCLASS;
#Senão
  Tipo WNDCLASSA WNDCLASS;
  Tipo PWNDCLASSA PWNDCLASS;
  Tipo NPWNDCLASSA NPWNDCLASS;
  Tipo LPWNDCLASSA LPWNDCLASS;
#FimSe

  WINUSERAPI WINBOOL WINAPI IsHungAppWindow(HWND hwnd);
  WINUSERAPI VOID WINAPI DisableProcessWindowsGhosting(VOID);

#SenãoDefinido NOMSG
  Tipo Estrutura tagMSG {
    HWND hwnd;
    UINT message;
    WPARAM wParam;
    LPARAM lParam;
    DWORD time;
    POINT pt;
  } MSG,*PMSG,*NPMSG,*LPMSG;

#Defina POINTSTOPOINT(pt,pts) { (pt).x = (LONG)(SHORT)LOWORD(*(LONG*)&pts); (pt).y = (LONG)(SHORT)HIWORD(*(LONG*)&pts); }

#Defina POINTTOPOINTS(pt) (MAKELONG((Curto)((pt).x),(Curto)((pt).y)))
#Defina MAKEWPARAM(l,h) ((WPARAM)(DWORD)MAKELONG(l,h))
#Defina MAKELPARAM(l,h) ((LPARAM)(DWORD)MAKELONG(l,h))
#Defina MAKELRESULT(l,h) ((LRESULT)(DWORD)MAKELONG(l,h))
#FimSe

#SenãoDefinido NOWINOFFSETS
#Defina GWL_WNDPROC (-4)
#Defina GWL_HINSTANCE (-6)
#Defina GWL_HWNDPARENT (-8)
#Defina GWL_STYLE (-16)
#Defina GWL_EXSTYLE (-20)
#Defina GWL_USERDATA (-21)
#Defina GWL_ID (-12)

#SeDefinido _WIN64
#Indefinido GWL_WNDPROC
#Indefinido GWL_HINSTANCE
#Indefinido GWL_HWNDPARENT
#Indefinido GWL_USERDATA
#FimSe

#Defina GWLP_WNDPROC (-4)
#Defina GWLP_HINSTANCE (-6)
#Defina GWLP_HWNDPARENT (-8)
#Defina GWLP_USERDATA (-21)
#Defina GWLP_ID (-12)

#Defina GCL_MENUNAME (-8)
#Defina GCL_HBRBACKGROUND (-10)
#Defina GCL_HCURSOR (-12)
#Defina GCL_HICON (-14)
#Defina GCL_HMODULE (-16)
#Defina GCL_CBWNDEXTRA (-18)
#Defina GCL_CBCLSEXTRA (-20)
#Defina GCL_WNDPROC (-24)
#Defina GCL_STYLE (-26)
#Defina GCW_ATOM (-32)
#Defina GCL_HICONSM (-34)

#SeDefinido _WIN64

#Indefinido GCL_MENUNAME
#Indefinido GCL_HBRBACKGROUND
#Indefinido GCL_HCURSOR
#Indefinido GCL_HICON
#Indefinido GCL_HMODULE
#Indefinido GCL_WNDPROC
#Indefinido GCL_HICONSM
#FimSe

#Defina GCLP_MENUNAME (-8)
#Defina GCLP_HBRBACKGROUND (-10)
#Defina GCLP_HCURSOR (-12)
#Defina GCLP_HICON (-14)
#Defina GCLP_HMODULE (-16)
#Defina GCLP_WNDPROC (-24)
#Defina GCLP_HICONSM (-34)
#FimSe

#SenãoDefinido NOWINMESSAGES

#Defina WM_NULL 0x0000
#Defina WM_CREATE 0x0001
#Defina WM_DESTROY 0x0002
#Defina WM_MOVE 0x0003
#Defina WM_SIZE 0x0005

#Defina WM_ACTIVATE 0x0006

#Defina WA_INACTIVE 0
#Defina WA_ACTIVE 1
#Defina WA_CLICKACTIVE 2

#Defina WM_SETFOCUS 0x0007
#Defina WM_KILLFOCUS 0x0008
#Defina WM_ENABLE 0x000A
#Defina WM_SETREDRAW 0x000B
#Defina WM_SETTEXT 0x000C
#Defina WM_GETTEXT 0x000D
#Defina WM_GETTEXTLENGTH 0x000E
#Defina WM_PAINT 0x000F
#Defina WM_CLOSE 0x0010
#SenãoDefinido _WIN32_WCE
#Defina WM_QUERYENDSESSION 0x0011
#Defina WM_QUERYOPEN 0x0013
#Defina WM_ENDSESSION 0x0016
#FimSe
#Defina WM_QUIT 0x0012
#Defina WM_ERASEBKGND 0x0014
#Defina WM_SYSCOLORCHANGE 0x0015
#Defina WM_SHOWWINDOW 0x0018
#Defina WM_WININICHANGE 0x001A
#Defina WM_SETTINGCHANGE WM_WININICHANGE
#Defina WM_DEVMODECHANGE 0x001B
#Defina WM_ACTIVATEAPP 0x001C
#Defina WM_FONTCHANGE 0x001D
#Defina WM_TIMECHANGE 0x001E
#Defina WM_CANCELMODE 0x001F
#Defina WM_SETCURSOR 0x0020
#Defina WM_MOUSEACTIVATE 0x0021
#Defina WM_CHILDACTIVATE 0x0022
#Defina WM_QUEUESYNC 0x0023

#Defina WM_GETMINMAXINFO 0x0024

  Tipo Estrutura tagMINMAXINFO {
    POINT ptReserved;
    POINT ptMaxSize;
    POINT ptMaxPosition;
    POINT ptMinTrackSize;
    POINT ptMaxTrackSize;
  } MINMAXINFO,*PMINMAXINFO,*LPMINMAXINFO;

#Defina WM_PAINTICON 0x0026
#Defina WM_ICONERASEBKGND 0x0027
#Defina WM_NEXTDLGCTL 0x0028
#Defina WM_SPOOLERSTATUS 0x002A
#Defina WM_DRAWITEM 0x002B
#Defina WM_MEASUREITEM 0x002C
#Defina WM_DELETEITEM 0x002D
#Defina WM_VKEYTOITEM 0x002E
#Defina WM_CHARTOITEM 0x002F
#Defina WM_SETFONT 0x0030
#Defina WM_GETFONT 0x0031
#Defina WM_SETHOTKEY 0x0032
#Defina WM_GETHOTKEY 0x0033
#Defina WM_QUERYDRAGICON 0x0037
#Defina WM_COMPAREITEM 0x0039
#SenãoDefinido _WIN32_WCE
#Defina WM_GETOBJECT 0x003D
#FimSe
#Defina WM_COMPACTING 0x0041
#Defina WM_COMMNOTIFY 0x0044
#Defina WM_WINDOWPOSCHANGING 0x0046
#Defina WM_WINDOWPOSCHANGED 0x0047

#Defina WM_POWER 0x0048

#Defina PWR_OK 1
#Defina PWR_FAIL (-1)
#Defina PWR_SUSPENDREQUEST 1
#Defina PWR_SUSPENDRESUME 2
#Defina PWR_CRITICALRESUME 3

#Defina WM_COPYDATA 0x004A
#Defina WM_CANCELJOURNAL 0x004B

  Tipo Estrutura tagCOPYDATASTRUCT {
    ULONG_PTR dwData;
    DWORD cbData;
    PVOID lpData;
  } COPYDATASTRUCT,*PCOPYDATASTRUCT;

  Tipo Estrutura tagMDINEXTMENU {
    HMENU hmenuIn;
    HMENU hmenuNext;
    HWND hwndNext;
  } MDINEXTMENU,*PMDINEXTMENU,*LPMDINEXTMENU;

#Defina WM_NOTIFY 0x004E
#Defina WM_INPUTLANGCHANGEREQUEST 0x0050
#Defina WM_INPUTLANGCHANGE 0x0051
#Defina WM_TCARD 0x0052
#Defina WM_HELP 0x0053
#Defina WM_USERCHANGED 0x0054
#Defina WM_NOTIFYFORMAT 0x0055

#Defina NFR_ANSI 1
#Defina NFR_UNICODE 2
#Defina NF_QUERY 3
#Defina NF_REQUERY 4

#Defina WM_CONTEXTMENU 0x007B
#Defina WM_STYLECHANGING 0x007C
#Defina WM_STYLECHANGED 0x007D
#Defina WM_DISPLAYCHANGE 0x007E
#Defina WM_GETICON 0x007F
#Defina WM_SETICON 0x0080

#Defina WM_NCCREATE 0x0081
#Defina WM_NCDESTROY 0x0082
#Defina WM_NCCALCSIZE 0x0083
#Defina WM_NCHITTEST 0x0084
#Defina WM_NCPAINT 0x0085
#Defina WM_NCACTIVATE 0x0086
#Defina WM_GETDLGCODE 0x0087
#SenãoDefinido _WIN32_WCE
#Defina WM_SYNCPAINT 0x0088
#FimSe
#Defina WM_NCMOUSEMOVE 0x00A0
#Defina WM_NCLBUTTONDOWN 0x00A1
#Defina WM_NCLBUTTONUP 0x00A2
#Defina WM_NCLBUTTONDBLCLK 0x00A3
#Defina WM_NCRBUTTONDOWN 0x00A4
#Defina WM_NCRBUTTONUP 0x00A5
#Defina WM_NCRBUTTONDBLCLK 0x00A6
#Defina WM_NCMBUTTONDOWN 0x00A7
#Defina WM_NCMBUTTONUP 0x00A8
#Defina WM_NCMBUTTONDBLCLK 0x00A9

#Defina WM_NCXBUTTONDOWN 0x00AB
#Defina WM_NCXBUTTONUP 0x00AC
#Defina WM_NCXBUTTONDBLCLK 0x00AD
#Defina WM_INPUT 0x00FF
#Defina WM_KEYFIRST 0x0100
#Defina WM_KEYDOWN 0x0100
#Defina WM_KEYUP 0x0101
#Defina WM_CHAR 0x0102
#Defina WM_DEADCHAR 0x0103
#Defina WM_SYSKEYDOWN 0x0104
#Defina WM_SYSKEYUP 0x0105
#Defina WM_SYSCHAR 0x0106
#Defina WM_SYSDEADCHAR 0x0107
#Defina WM_UNICHAR 0x0109
#Defina WM_KEYLAST 0x0109
#Defina UNICODE_NOCHAR 0xFFFF
#Defina WM_IME_STARTCOMPOSITION 0x010D
#Defina WM_IME_ENDCOMPOSITION 0x010E
#Defina WM_IME_COMPOSITION 0x010F
#Defina WM_IME_KEYLAST 0x010F
#Defina WM_INITDIALOG 0x0110
#Defina WM_COMMAND 0x0111
#Defina WM_SYSCOMMAND 0x0112
#Defina WM_TIMER 0x0113
#Defina WM_HSCROLL 0x0114
#Defina WM_VSCROLL 0x0115
#Defina WM_INITMENU 0x0116
#Defina WM_INITMENUPOPUP 0x0117
#Defina WM_MENUSELECT 0x011F
#Defina WM_MENUCHAR 0x0120
#Defina WM_ENTERIDLE 0x0121
#SenãoDefinido _WIN32_WCE
#Defina WM_MENURBUTTONUP 0x0122
#Defina WM_MENUDRAG 0x0123
#Defina WM_MENUGETOBJECT 0x0124
#Defina WM_UNINITMENUPOPUP 0x0125
#Defina WM_MENUCOMMAND 0x0126

#SenãoDefinido _WIN32_WCE
#Defina WM_CHANGEUISTATE 0x0127
#Defina WM_UPDATEUISTATE 0x0128
#Defina WM_QUERYUISTATE 0x0129

#Defina UIS_SET 1
#Defina UIS_CLEAR 2
#Defina UIS_INITIALIZE 3

#Defina UISF_HIDEFOCUS 0x1
#Defina UISF_HIDEACCEL 0x2
#Defina UISF_ACTIVE 0x4
#FimSe
#FimSe

#Defina WM_CTLCOLORMSGBOX 0x0132
#Defina WM_CTLCOLOREDIT 0x0133
#Defina WM_CTLCOLORLISTBOX 0x0134
#Defina WM_CTLCOLORBTN 0x0135
#Defina WM_CTLCOLORDLG 0x0136
#Defina WM_CTLCOLORSCROLLBAR 0x0137
#Defina WM_CTLCOLORSTATIC 0x0138
#Defina MN_GETHMENU 0x01E1

#Defina WM_MOUSEFIRST 0x0200
#Defina WM_MOUSEMOVE 0x0200
#Defina WM_LBUTTONDOWN 0x0201
#Defina WM_LBUTTONUP 0x0202
#Defina WM_LBUTTONDBLCLK 0x0203
#Defina WM_RBUTTONDOWN 0x0204
#Defina WM_RBUTTONUP 0x0205
#Defina WM_RBUTTONDBLCLK 0x0206
#Defina WM_MBUTTONDOWN 0x0207
#Defina WM_MBUTTONUP 0x0208
#Defina WM_MBUTTONDBLCLK 0x0209
#Defina WM_MOUSEWHEEL 0x020A
#Defina WM_XBUTTONDOWN 0x020B
#Defina WM_XBUTTONUP 0x020C
#Defina WM_XBUTTONDBLCLK 0x020D
#Defina WM_MOUSELAST 0x020D

#Defina WHEEL_DELTA 120
#Defina GET_WHEEL_DELTA_WPARAM(wParam) ((Curto)HIWORD(wParam))

#Defina WHEEL_PAGESCROLL (UINT_MAX)

#Defina GET_KEYSTATE_WPARAM(wParam) (LOWORD(wParam))
#Defina GET_NCHITTEST_WPARAM(wParam) ((Curto)LOWORD(wParam))
#Defina GET_XBUTTON_WPARAM(wParam) (HIWORD(wParam))

#Defina XBUTTON1 0x0001
#Defina XBUTTON2 0x0002

#Defina WM_PARENTNOTIFY 0x0210
#Defina WM_ENTERMENULOOP 0x0211
#Defina WM_EXITMENULOOP 0x0212

#Defina WM_NEXTMENU 0x0213
#Defina WM_SIZING 0x0214
#Defina WM_CAPTURECHANGED 0x0215
#Defina WM_MOVING 0x0216

#Defina WM_POWERBROADCAST 0x0218

#SenãoDefinido _WIN32_WCE
#Defina PBT_APMQUERYSUSPEND 0x0000
#Defina PBT_APMQUERYSTANDBY 0x0001

#Defina PBT_APMQUERYSUSPENDFAILED 0x0002
#Defina PBT_APMQUERYSTANDBYFAILED 0x0003

#Defina PBT_APMSUSPEND 0x0004
#Defina PBT_APMSTANDBY 0x0005

#Defina PBT_APMRESUMECRITICAL 0x0006
#Defina PBT_APMRESUMESUSPEND 0x0007
#Defina PBT_APMRESUMESTANDBY 0x0008

#Defina PBTF_APMRESUMEFROMFAILURE 0x00000001

#Defina PBT_APMBATTERYLOW 0x0009
#Defina PBT_APMPOWERSTATUSCHANGE 0x000A

#Defina PBT_APMOEMEVENT 0x000B
#Defina PBT_APMRESUMEAUTOMATIC 0x0012
#FimSe

#Defina WM_DEVICECHANGE 0x0219

#Defina WM_MDICREATE 0x0220
#Defina WM_MDIDESTROY 0x0221
#Defina WM_MDIACTIVATE 0x0222
#Defina WM_MDIRESTORE 0x0223
#Defina WM_MDINEXT 0x0224
#Defina WM_MDIMAXIMIZE 0x0225
#Defina WM_MDITILE 0x0226
#Defina WM_MDICASCADE 0x0227
#Defina WM_MDIICONARRANGE 0x0228
#Defina WM_MDIGETACTIVE 0x0229

#Defina WM_MDISETMENU 0x0230
#Defina WM_ENTERSIZEMOVE 0x0231
#Defina WM_EXITSIZEMOVE 0x0232
#Defina WM_DROPFILES 0x0233
#Defina WM_MDIREFRESHMENU 0x0234

#Defina WM_IME_SETCONTEXT 0x0281
#Defina WM_IME_NOTIFY 0x0282
#Defina WM_IME_CONTROL 0x0283
#Defina WM_IME_COMPOSITIONFULL 0x0284
#Defina WM_IME_SELECT 0x0285
#Defina WM_IME_CHAR 0x0286
#Defina WM_IME_REQUEST 0x0288
#Defina WM_IME_KEYDOWN 0x0290
#Defina WM_IME_KEYUP 0x0291

#Defina WM_MOUSEHOVER 0x02A1
#Defina WM_MOUSELEAVE 0x02A3
#Defina WM_NCMOUSEHOVER 0x02A0
#Defina WM_NCMOUSELEAVE 0x02A2
#Defina WM_WTSSESSION_CHANGE 0x02B1
#Defina WM_TABLET_FIRST 0x02c0
#Defina WM_TABLET_LAST 0x02df
#Defina WM_CUT 0x0300
#Defina WM_COPY 0x0301
#Defina WM_PASTE 0x0302
#Defina WM_CLEAR 0x0303
#Defina WM_UNDO 0x0304
#Defina WM_RENDERFORMAT 0x0305
#Defina WM_RENDERALLFORMATS 0x0306
#Defina WM_DESTROYCLIPBOARD 0x0307
#Defina WM_DRAWCLIPBOARD 0x0308
#Defina WM_PAINTCLIPBOARD 0x0309
#Defina WM_VSCROLLCLIPBOARD 0x030A
#Defina WM_SIZECLIPBOARD 0x030B
#Defina WM_ASKCBFORMATNAME 0x030C
#Defina WM_CHANGECBCHAIN 0x030D
#Defina WM_HSCROLLCLIPBOARD 0x030E
#Defina WM_QUERYNEWPALETTE 0x030F
#Defina WM_PALETTEISCHANGING 0x0310
#Defina WM_PALETTECHANGED 0x0311
#Defina WM_HOTKEY 0x0312
#Defina WM_PRINT 0x0317
#Defina WM_PRINTCLIENT 0x0318
#Defina WM_APPCOMMAND 0x0319
#Defina WM_THEMECHANGED 0x031A
#Defina WM_HANDHELDFIRST 0x0358
#Defina WM_HANDHELDLAST 0x035F
#Defina WM_AFXFIRST 0x0360
#Defina WM_AFXLAST 0x037F
#Defina WM_PENWINFIRST 0x0380
#Defina WM_PENWINLAST 0x038F
#Defina WM_APP 0x8000
#Defina WM_USER 0x0400

#Defina WMSZ_LEFT 1
#Defina WMSZ_RIGHT 2
#Defina WMSZ_TOP 3
#Defina WMSZ_TOPLEFT 4
#Defina WMSZ_TOPRIGHT 5
#Defina WMSZ_BOTTOM 6
#Defina WMSZ_BOTTOMLEFT 7
#Defina WMSZ_BOTTOMRIGHT 8

#SenãoDefinido NONCMESSAGES

#Defina HTERROR (-2)
#Defina HTTRANSPARENT (-1)
#Defina HTNOWHERE 0
#Defina HTCLIENT 1
#Defina HTCAPTION 2
#Defina HTSYSMENU 3
#Defina HTGROWBOX 4
#Defina HTSIZE HTGROWBOX
#Defina HTMENU 5
#Defina HTHSCROLL 6
#Defina HTVSCROLL 7
#Defina HTMINBUTTON 8
#Defina HTMAXBUTTON 9
#Defina HTLEFT 10
#Defina HTRIGHT 11
#Defina HTTOP 12
#Defina HTTOPLEFT 13
#Defina HTTOPRIGHT 14
#Defina HTBOTTOM 15
#Defina HTBOTTOMLEFT 16
#Defina HTBOTTOMRIGHT 17
#Defina HTBORDER 18
#Defina HTREDUCE HTMINBUTTON
#Defina HTZOOM HTMAXBUTTON
#Defina HTSIZEFIRST HTLEFT
#Defina HTSIZELAST HTBOTTOMRIGHT
#Defina HTOBJECT 19
#Defina HTCLOSE 20
#Defina HTHELP 21

#Defina SMTO_NORMAL 0x0000
#Defina SMTO_BLOCK 0x0001
#Defina SMTO_ABORTIFHUNG 0x0002
#Defina SMTO_NOTIMEOUTIFNOTHUNG 0x0008
#FimSe

#Defina MA_ACTIVATE 1
#Defina MA_ACTIVATEANDEAT 2
#Defina MA_NOACTIVATE 3
#Defina MA_NOACTIVATEANDEAT 4

#Defina ICON_SMALL 0
#Defina ICON_BIG 1
#Defina ICON_SMALL2 2

#SeDefinido UNICODE
#Defina RegisterWindowMessage RegisterWindowMessageW
#Senão
#Defina RegisterWindowMessage RegisterWindowMessageA
#FimSe

  WINUSERAPI UINT WINAPI RegisterWindowMessageA(LPCSTR lpString);
  WINUSERAPI UINT WINAPI RegisterWindowMessageW(LPCWSTR lpString);

#Defina SIZE_RESTORED 0
#Defina SIZE_MINIMIZED 1
#Defina SIZE_MAXIMIZED 2
#Defina SIZE_MAXSHOW 3
#Defina SIZE_MAXHIDE 4

#Defina SIZENORMAL SIZE_RESTORED
#Defina SIZEICONIC SIZE_MINIMIZED
#Defina SIZEFULLSCREEN SIZE_MAXIMIZED
#Defina SIZEZOOMSHOW SIZE_MAXSHOW
#Defina SIZEZOOMHIDE SIZE_MAXHIDE

  Tipo Estrutura tagWINDOWPOS {
    HWND hwnd;
    HWND hwndInsertAfter;
    Inteiro x;
    Inteiro y;
    Inteiro cx;
    Inteiro cy;
    UINT flags;
  } WINDOWPOS,*LPWINDOWPOS,*PWINDOWPOS;

  Tipo Estrutura tagNCCALCSIZE_PARAMS {
    RECT rgrc[3];
    PWINDOWPOS lppos;
  } NCCALCSIZE_PARAMS,*LPNCCALCSIZE_PARAMS;

#Defina WVR_ALIGNTOP 0x0010
#Defina WVR_ALIGNLEFT 0x0020
#Defina WVR_ALIGNBOTTOM 0x0040
#Defina WVR_ALIGNRIGHT 0x0080
#Defina WVR_HREDRAW 0x0100
#Defina WVR_VREDRAW 0x0200
#Defina WVR_REDRAW (WVR_HREDRAW | WVR_VREDRAW)
#Defina WVR_VALIDRECTS 0x0400

#SenãoDefinido NOKEYSTATES

#Defina MK_LBUTTON 0x0001
#Defina MK_RBUTTON 0x0002
#Defina MK_SHIFT 0x0004
#Defina MK_CONTROL 0x0008
#Defina MK_MBUTTON 0x0010
#Defina MK_XBUTTON1 0x0020
#Defina MK_XBUTTON2 0x0040
#FimSe

#SenãoDefinido NOTRACKMOUSEEVENT
#Defina TME_HOVER 0x00000001
#Defina TME_LEAVE 0x00000002
#Defina TME_NONCLIENT 0x00000010
#Defina TME_QUERY 0x40000000
#Defina TME_CANCEL 0x80000000

#Defina HOVER_DEFAULT 0xFFFFFFFF
#FimSe

  Tipo Estrutura tagTRACKMOUSEEVENT {
    DWORD cbSize;
    DWORD dwFlags;
    HWND hwndTrack;
    DWORD dwHoverTime;
  } TRACKMOUSEEVENT,*LPTRACKMOUSEEVENT;

  WINUSERAPI WINBOOL WINAPI TrackMouseEvent(LPTRACKMOUSEEVENT lpEventTrack);
#FimSe

#SenãoDefinido NOWINSTYLES

#Defina WS_OVERLAPPED 0x00000000L
#Defina WS_POPUP 0x80000000L
#Defina WS_CHILD 0x40000000L
#Defina WS_MINIMIZE 0x20000000L
#Defina WS_VISIBLE 0x10000000L
#Defina WS_DISABLED 0x08000000L
#Defina WS_CLIPSIBLINGS 0x04000000L
#Defina WS_CLIPCHILDREN 0x02000000L
#Defina WS_MAXIMIZE 0x01000000L
#Defina WS_CAPTION 0x00C00000L
#Defina WS_BORDER 0x00800000L
#Defina WS_DLGFRAME 0x00400000L
#Defina WS_VSCROLL 0x00200000L
#Defina WS_HSCROLL 0x00100000L
#Defina WS_SYSMENU 0x00080000L
#Defina WS_THICKFRAME 0x00040000L
#Defina WS_GROUP 0x00020000L
#Defina WS_TABSTOP 0x00010000L
#Defina WS_MINIMIZEBOX 0x00020000L
#Defina WS_MAXIMIZEBOX 0x00010000L
#Defina WS_TILED WS_OVERLAPPED
#Defina WS_ICONIC WS_MINIMIZE
#Defina WS_SIZEBOX WS_THICKFRAME
#Defina WS_TILEDWINDOW WS_OVERLAPPEDWINDOW
#Defina WS_OVERLAPPEDWINDOW (WS_OVERLAPPED | WS_CAPTION | WS_SYSMENU | WS_THICKFRAME | WS_MINIMIZEBOX | WS_MAXIMIZEBOX)
#Defina WS_POPUPWINDOW (WS_POPUP | WS_BORDER | WS_SYSMENU)
#Defina WS_CHILDWINDOW (WS_CHILD)

#Defina WS_EX_DLGMODALFRAME 0x00000001L
#Defina WS_EX_NOPARENTNOTIFY 0x00000004L
#Defina WS_EX_TOPMOST 0x00000008L
#Defina WS_EX_ACCEPTFILES 0x00000010L
#Defina WS_EX_TRANSPARENT 0x00000020L
#Defina WS_EX_MDICHILD 0x00000040L
#Defina WS_EX_TOOLWINDOW 0x00000080L
#Defina WS_EX_WINDOWEDGE 0x00000100L
#Defina WS_EX_CLIENTEDGE 0x00000200L
#Defina WS_EX_CONTEXTHELP 0x00000400L
#Defina WS_EX_RIGHT 0x00001000L
#Defina WS_EX_LEFT 0x00000000L
#Defina WS_EX_RTLREADING 0x00002000L
#Defina WS_EX_LTRREADING 0x00000000L
#Defina WS_EX_LEFTSCROLLBAR 0x00004000L
#Defina WS_EX_RIGHTSCROLLBAR 0x00000000L
#Defina WS_EX_CONTROLPARENT 0x00010000L
#Defina WS_EX_STATICEDGE 0x00020000L
#Defina WS_EX_APPWINDOW 0x00040000L
#Defina WS_EX_OVERLAPPEDWINDOW (WS_EX_WINDOWEDGE | WS_EX_CLIENTEDGE)
#Defina WS_EX_PALETTEWINDOW (WS_EX_WINDOWEDGE | WS_EX_TOOLWINDOW | WS_EX_TOPMOST)
#Defina WS_EX_LAYERED 0x00080000
#Defina WS_EX_NOINHERITLAYOUT 0x00100000L
#Defina WS_EX_LAYOUTRTL 0x00400000L
#Defina WS_EX_COMPOSITED 0x02000000L
#Defina WS_EX_NOACTIVATE 0x08000000L

#Defina CS_VREDRAW 0x0001
#Defina CS_HREDRAW 0x0002
#Defina CS_DBLCLKS 0x0008
#Defina CS_OWNDC 0x0020
#Defina CS_CLASSDC 0x0040
#Defina CS_PARENTDC 0x0080
#Defina CS_NOCLOSE 0x0200
#Defina CS_SAVEBITS 0x0800
#Defina CS_BYTEALIGNCLIENT 0x1000
#Defina CS_BYTEALIGNWINDOW 0x2000
#Defina CS_GLOBALCLASS 0x4000
#Defina CS_IME 0x00010000
#Defina CS_DROPSHADOW 0x00020000
#FimSe

#Defina PRF_CHECKVISIBLE 0x00000001L
#Defina PRF_NONCLIENT 0x00000002L
#Defina PRF_CLIENT 0x00000004L
#Defina PRF_ERASEBKGND 0x00000008L
#Defina PRF_CHILDREN 0x00000010L
#Defina PRF_OWNED 0x00000020L

#Defina BDR_RAISEDOUTER 0x0001
#Defina BDR_SUNKENOUTER 0x0002
#Defina BDR_RAISEDINNER 0x0004
#Defina BDR_SUNKENINNER 0x0008

#Defina BDR_OUTER (BDR_RAISEDOUTER | BDR_SUNKENOUTER)
#Defina BDR_INNER (BDR_RAISEDINNER | BDR_SUNKENINNER)
#Defina BDR_RAISED (BDR_RAISEDOUTER | BDR_RAISEDINNER)
#Defina BDR_SUNKEN (BDR_SUNKENOUTER | BDR_SUNKENINNER)

#Defina EDGE_RAISED (BDR_RAISEDOUTER | BDR_RAISEDINNER)
#Defina EDGE_SUNKEN (BDR_SUNKENOUTER | BDR_SUNKENINNER)
#Defina EDGE_ETCHED (BDR_SUNKENOUTER | BDR_RAISEDINNER)
#Defina EDGE_BUMP (BDR_RAISEDOUTER | BDR_SUNKENINNER)

#Defina BF_LEFT 0x0001
#Defina BF_TOP 0x0002
#Defina BF_RIGHT 0x0004
#Defina BF_BOTTOM 0x0008

#Defina BF_TOPLEFT (BF_TOP | BF_LEFT)
#Defina BF_TOPRIGHT (BF_TOP | BF_RIGHT)
#Defina BF_BOTTOMLEFT (BF_BOTTOM | BF_LEFT)
#Defina BF_BOTTOMRIGHT (BF_BOTTOM | BF_RIGHT)
#Defina BF_RECT (BF_LEFT | BF_TOP | BF_RIGHT | BF_BOTTOM)

#Defina BF_DIAGONAL 0x0010

#Defina BF_DIAGONAL_ENDTOPRIGHT (BF_DIAGONAL | BF_TOP | BF_RIGHT)
#Defina BF_DIAGONAL_ENDTOPLEFT (BF_DIAGONAL | BF_TOP | BF_LEFT)
#Defina BF_DIAGONAL_ENDBOTTOMLEFT (BF_DIAGONAL | BF_BOTTOM | BF_LEFT)
#Defina BF_DIAGONAL_ENDBOTTOMRIGHT (BF_DIAGONAL | BF_BOTTOM | BF_RIGHT)

#Defina BF_MIDDLE 0x0800
#Defina BF_SOFT 0x1000
#Defina BF_ADJUST 0x2000
#Defina BF_FLAT 0x4000
#Defina BF_MONO 0x8000

  WINUSERAPI WINBOOL WINAPI DrawEdge(HDC hdc,LPRECT qrc,UINT edge,UINT grfFlags);

#Defina DFC_CAPTION 1
#Defina DFC_MENU 2
#Defina DFC_SCROLL 3
#Defina DFC_BUTTON 4
#Defina DFC_POPUPMENU 5

#Defina DFCS_CAPTIONCLOSE 0x0000
#Defina DFCS_CAPTIONMIN 0x0001
#Defina DFCS_CAPTIONMAX 0x0002
#Defina DFCS_CAPTIONRESTORE 0x0003
#Defina DFCS_CAPTIONHELP 0x0004

#Defina DFCS_MENUARROW 0x0000
#Defina DFCS_MENUCHECK 0x0001
#Defina DFCS_MENUBULLET 0x0002
#Defina DFCS_MENUARROWRIGHT 0x0004
#Defina DFCS_SCROLLUP 0x0000
#Defina DFCS_SCROLLDOWN 0x0001
#Defina DFCS_SCROLLLEFT 0x0002
#Defina DFCS_SCROLLRIGHT 0x0003
#Defina DFCS_SCROLLCOMBOBOX 0x0005
#Defina DFCS_SCROLLSIZEGRIP 0x0008
#Defina DFCS_SCROLLSIZEGRIPRIGHT 0x0010

#Defina DFCS_BUTTONCHECK 0x0000
#Defina DFCS_BUTTONRADIOIMAGE 0x0001
#Defina DFCS_BUTTONRADIOMASK 0x0002
#Defina DFCS_BUTTONRADIO 0x0004
#Defina DFCS_BUTTON3STATE 0x0008
#Defina DFCS_BUTTONPUSH 0x0010

#Defina DFCS_INACTIVE 0x0100
#Defina DFCS_PUSHED 0x0200
#Defina DFCS_CHECKED 0x0400

#Defina DFCS_TRANSPARENT 0x0800
#Defina DFCS_HOT 0x1000

#Defina DFCS_ADJUSTRECT 0x2000
#Defina DFCS_FLAT 0x4000
#Defina DFCS_MONO 0x8000

  WINUSERAPI WINBOOL WINAPI DrawFrameControl(HDC,LPRECT,UINT,UINT);

#Defina DC_ACTIVE 0x0001
#Defina DC_SMALLCAP 0x0002
#Defina DC_ICON 0x0004
#Defina DC_TEXT 0x0008
#Defina DC_INBUTTON 0x0010
#Defina DC_GRADIENT 0x0020
#Defina DC_BUTTONS 0x1000

  WINUSERAPI WINBOOL WINAPI DrawCaption(HWND hwnd,HDC hdc,CONST RECT *lprect,UINT flags);

#Defina IDANI_OPEN 1
#Defina IDANI_CAPTION 3

  WINUSERAPI WINBOOL WINAPI DrawAnimatedRects(HWND hwnd,Inteiro idAni,CONST RECT *lprcFrom,CONST RECT *lprcTo);

#SenãoDefinido NOCLIPBOARD

#Defina CF_TEXT 1
#Defina CF_BITMAP 2
#Defina CF_METAFILEPICT 3
#Defina CF_SYLK 4
#Defina CF_DIF 5
#Defina CF_TIFF 6
#Defina CF_OEMTEXT 7
#Defina CF_DIB 8
#Defina CF_PALETTE 9
#Defina CF_PENDATA 10
#Defina CF_RIFF 11
#Defina CF_WAVE 12
#Defina CF_UNICODETEXT 13
#Defina CF_ENHMETAFILE 14
#Defina CF_HDROP 15
#Defina CF_LOCALE 16
#Defina CF_DIBV5 17
#Defina CF_MAX 18

#Defina CF_OWNERDISPLAY 0x0080
#Defina CF_DSPTEXT 0x0081
#Defina CF_DSPBITMAP 0x0082
#Defina CF_DSPMETAFILEPICT 0x0083
#Defina CF_DSPENHMETAFILE 0x008E

#Defina CF_PRIVATEFIRST 0x0200
#Defina CF_PRIVATELAST 0x02FF

#Defina CF_GDIOBJFIRST 0x0300
#Defina CF_GDIOBJLAST 0x03FF
#FimSe

#Defina FVIRTKEY TRUE
#Defina FNOINVERT 0x02
#Defina FSHIFT 0x04
#Defina FCONTROL 0x08
#Defina FALT 0x10

  Tipo Estrutura tagACCEL {
    BYTE fVirt;
    WORD key;
    WORD cmd;
  } ACCEL,*LPACCEL;

  Tipo Estrutura tagPAINTSTRUCT {
    HDC hdc;
    WINBOOL fErase;
    RECT rcPaint;
    WINBOOL fRestore;
    WINBOOL fIncUpdate;
    BYTE rgbReserved[32];
  } PAINTSTRUCT,*PPAINTSTRUCT,*NPPAINTSTRUCT,*LPPAINTSTRUCT;

  Tipo Estrutura tagCREATESTRUCTA {
    LPVOID lpCreateParams;
    HINSTANCE hInstance;
    HMENU hMenu;
    HWND hwndParent;
    Inteiro cy;
    Inteiro cx;
    Inteiro y;
    Inteiro x;
    LONG style;
    LPCSTR lpszName;
    LPCSTR lpszClass;
    DWORD dwExStyle;
  } CREATESTRUCTA,*LPCREATESTRUCTA;

  Tipo Estrutura tagCREATESTRUCTW {
    LPVOID lpCreateParams;
    HINSTANCE hInstance;
    HMENU hMenu;
    HWND hwndParent;
    Inteiro cy;
    Inteiro cx;
    Inteiro y;
    Inteiro x;
    LONG style;
    LPCWSTR lpszName;
    LPCWSTR lpszClass;
    DWORD dwExStyle;
  } CREATESTRUCTW,*LPCREATESTRUCTW;

#SeDefinido UNICODE
  Tipo CREATESTRUCTW CREATESTRUCT;
  Tipo LPCREATESTRUCTW LPCREATESTRUCT;
#Senão
  Tipo CREATESTRUCTA CREATESTRUCT;
  Tipo LPCREATESTRUCTA LPCREATESTRUCT;
#FimSe

  Tipo Estrutura tagWINDOWPLACEMENT {
    UINT length;
    UINT flags;
    UINT showCmd;
    POINT ptMinPosition;
    POINT ptMaxPosition;
    RECT rcNormalPosition;
  } WINDOWPLACEMENT;
  Tipo WINDOWPLACEMENT *PWINDOWPLACEMENT,*LPWINDOWPLACEMENT;

#Defina WPF_SETMINPOSITION 0x0001
#Defina WPF_RESTORETOMAXIMIZED 0x0002
#Defina WPF_ASYNCWINDOWPLACEMENT 0x0004

  Tipo Estrutura tagNMHDR {
    HWND hwndFrom;
    UINT_PTR idFrom;
    UINT code;
  } NMHDR;

  Tipo NMHDR *LPNMHDR;

  Tipo Estrutura tagSTYLESTRUCT {
    DWORD styleOld;
    DWORD styleNew;
  } STYLESTRUCT,*LPSTYLESTRUCT;

#Defina ODT_MENU 1
#Defina ODT_LISTBOX 2
#Defina ODT_COMBOBOX 3
#Defina ODT_BUTTON 4
#Defina ODT_STATIC 5

#Defina ODA_DRAWENTIRE 0x0001
#Defina ODA_SELECT 0x0002
#Defina ODA_FOCUS 0x0004

#Defina ODS_SELECTED 0x0001
#Defina ODS_GRAYED 0x0002
#Defina ODS_DISABLED 0x0004
#Defina ODS_CHECKED 0x0008
#Defina ODS_FOCUS 0x0010
#Defina ODS_DEFAULT 0x0020
#Defina ODS_COMBOBOXEDIT 0x1000
#Defina ODS_HOTLIGHT 0x0040
#Defina ODS_INACTIVE 0x0080
#Defina ODS_NOACCEL 0x0100
#Defina ODS_NOFOCUSRECT 0x0200

  Tipo Estrutura tagMEASUREITEMSTRUCT {
    UINT CtlType;
    UINT CtlID;
    UINT itemID;
    UINT itemWidth;
    UINT itemHeight;
    ULONG_PTR itemData;
  } MEASUREITEMSTRUCT,*PMEASUREITEMSTRUCT,*LPMEASUREITEMSTRUCT;

  Tipo Estrutura tagDRAWITEMSTRUCT {
    UINT CtlType;
    UINT CtlID;
    UINT itemID;
    UINT itemAction;
    UINT itemState;
    HWND hwndItem;
    HDC hDC;
    RECT rcItem;
    ULONG_PTR itemData;
  } DRAWITEMSTRUCT,*PDRAWITEMSTRUCT,*LPDRAWITEMSTRUCT;

  Tipo Estrutura tagDELETEITEMSTRUCT {
    UINT CtlType;
    UINT CtlID;
    UINT itemID;
    HWND hwndItem;
    ULONG_PTR itemData;
  } DELETEITEMSTRUCT,*PDELETEITEMSTRUCT,*LPDELETEITEMSTRUCT;

  Tipo Estrutura tagCOMPAREITEMSTRUCT {
    UINT CtlType;
    UINT CtlID;
    HWND hwndItem;
    UINT itemID1;
    ULONG_PTR itemData1;
    UINT itemID2;
    ULONG_PTR itemData2;
    DWORD dwLocaleId;
  } COMPAREITEMSTRUCT,*PCOMPAREITEMSTRUCT,*LPCOMPAREITEMSTRUCT;

#SenãoDefinido NOMSG
#SeDefinido UNICODE
#Defina GetMessage GetMessageW
#Defina DispatchMessage DispatchMessageW
#Defina PeekMessage PeekMessageW
#Senão
#Defina GetMessage GetMessageA
#Defina DispatchMessage DispatchMessageA
#Defina PeekMessage PeekMessageA
#FimSe

  WINUSERAPI WINBOOL WINAPI GetMessageA(LPMSG lpMsg,HWND hWnd,UINT wMsgFilterMin,UINT wMsgFilterMax);
  WINUSERAPI WINBOOL WINAPI GetMessageW(LPMSG lpMsg,HWND hWnd,UINT wMsgFilterMin,UINT wMsgFilterMax);
  WINUSERAPI WINBOOL WINAPI TranslateMessage(CONST MSG *lpMsg);
  WINUSERAPI LRESULT WINAPI DispatchMessageA(CONST MSG *lpMsg);
  WINUSERAPI LRESULT WINAPI DispatchMessageW(CONST MSG *lpMsg);
  WINUSERAPI WINBOOL WINAPI SetMessageQueue(Inteiro cMessagesMax);
  WINUSERAPI WINBOOL WINAPI PeekMessageA(LPMSG lpMsg,HWND hWnd,UINT wMsgFilterMin,UINT wMsgFilterMax,UINT wRemoveMsg);
  WINUSERAPI WINBOOL WINAPI PeekMessageW(LPMSG lpMsg,HWND hWnd,UINT wMsgFilterMin,UINT wMsgFilterMax,UINT wRemoveMsg);

#Defina PM_NOREMOVE 0x0000
#Defina PM_REMOVE 0x0001
#Defina PM_NOYIELD 0x0002
#Defina PM_QS_INPUT (QS_INPUT << 16)
#Defina PM_QS_POSTMESSAGE ((QS_POSTMESSAGE | QS_HOTKEY | QS_TIMER) << 16)
#Defina PM_QS_PAINT (QS_PAINT << 16)
#Defina PM_QS_SENDMESSAGE (QS_SENDMESSAGE << 16)
#FimSe

  WINUSERAPI WINBOOL WINAPI RegisterHotKey(HWND hWnd,Inteiro id,UINT fsModifiers,UINT vk);
  WINUSERAPI WINBOOL WINAPI UnregisterHotKey(HWND hWnd,Inteiro id);

#Defina MOD_ALT 0x0001
#Defina MOD_CONTROL 0x0002
#Defina MOD_SHIFT 0x0004
#Defina MOD_WIN 0x0008

#Defina IDHOT_SNAPWINDOW (-1)
#Defina IDHOT_SNAPDESKTOP (-2)

#SeDefinido WIN_INTERNAL
#SenãoDefinido LSTRING
#Defina NOLSTRING
#FimSe
#SenãoDefinido LFILEIO
#Defina NOLFILEIO
#FimSe
#FimSe

#Defina ENDSESSION_LOGOFF 0x80000000

#Defina EWX_LOGOFF 0
#Defina EWX_SHUTDOWN 0x00000001
#Defina EWX_REBOOT 0x00000002
#Defina EWX_FORCE 0x00000004
#Defina EWX_POWEROFF 0x00000008
#Defina EWX_FORCEIFHUNG 0x00000010

#Defina ExitWindows(dwReserved,Code) ExitWindowsEx(EWX_LOGOFF,0xFFFFFFFF)

#SeDefinido UNICODE
#Defina SendMessage SendMessageW
#Defina SendMessageTimeout SendMessageTimeoutW
#Defina SendNotifyMessage SendNotifyMessageW
#Defina SendMessageCallback SendMessageCallbackW
#Senão
#Defina SendMessage SendMessageA
#Defina SendMessageTimeout SendMessageTimeoutA
#Defina SendNotifyMessage SendNotifyMessageA
#Defina SendMessageCallback SendMessageCallbackA
#FimSe

  WINUSERAPI WINBOOL WINAPI ExitWindowsEx(UINT uFlags,DWORD dwReason);
  WINUSERAPI WINBOOL WINAPI SwapMouseButton(WINBOOL fSwap);
  WINUSERAPI DWORD WINAPI GetMessagePos(VOID);
  WINUSERAPI LONG WINAPI GetMessageTime(VOID);
  WINUSERAPI LPARAM WINAPI GetMessageExtraInfo(VOID);
  WINUSERAPI WINBOOL WINAPI IsWow64Message(VOID);
  WINUSERAPI LPARAM WINAPI SetMessageExtraInfo(LPARAM lParam);
  WINUSERAPI LRESULT WINAPI SendMessageA(HWND hWnd,UINT Msg,WPARAM wParam,LPARAM lParam);
  WINUSERAPI LRESULT WINAPI SendMessageW(HWND hWnd,UINT Msg,WPARAM wParam,LPARAM lParam);
  WINUSERAPI LRESULT WINAPI SendMessageTimeoutA(HWND hWnd,UINT Msg,WPARAM wParam,LPARAM lParam,UINT fuFlags,UINT uTimeout,PDWORD_PTR lpdwResult);
  WINUSERAPI LRESULT WINAPI SendMessageTimeoutW(HWND hWnd,UINT Msg,WPARAM wParam,LPARAM lParam,UINT fuFlags,UINT uTimeout,PDWORD_PTR lpdwResult);
  WINUSERAPI WINBOOL WINAPI SendNotifyMessageA(HWND hWnd,UINT Msg,WPARAM wParam,LPARAM lParam);
  WINUSERAPI WINBOOL WINAPI SendNotifyMessageW(HWND hWnd,UINT Msg,WPARAM wParam,LPARAM lParam);
  WINUSERAPI WINBOOL WINAPI SendMessageCallbackA(HWND hWnd,UINT Msg,WPARAM wParam,LPARAM lParam,SENDASYNCPROC lpResultCallBack,ULONG_PTR dwData);
  WINUSERAPI WINBOOL WINAPI SendMessageCallbackW(HWND hWnd,UINT Msg,WPARAM wParam,LPARAM lParam,SENDASYNCPROC lpResultCallBack,ULONG_PTR dwData);

  Tipo Estrutura {
    UINT cbSize;
    HDESK hdesk;
    HWND hwnd;
    LUID luid;
  } BSMINFO,*PBSMINFO;

#SeDefinido UNICODE
#Defina BroadcastSystemMessageEx BroadcastSystemMessageExW
#Defina BroadcastSystemMessage BroadcastSystemMessageW
#Senão
#Defina BroadcastSystemMessageEx BroadcastSystemMessageExA
#Defina BroadcastSystemMessage BroadcastSystemMessageA
#FimSe

  WINUSERAPI Longo WINAPI BroadcastSystemMessageExA(DWORD flags,LPDWORD lpInfo,UINT Msg,WPARAM wParam,LPARAM lParam,PBSMINFO pbsmInfo);
  WINUSERAPI Longo WINAPI BroadcastSystemMessageExW(DWORD flags,LPDWORD lpInfo,UINT Msg,WPARAM wParam,LPARAM lParam,PBSMINFO pbsmInfo);
  WINUSERAPI Longo WINAPI BroadcastSystemMessageA(DWORD flags,LPDWORD lpInfo,UINT Msg,WPARAM wParam,LPARAM lParam);
  WINUSERAPI Longo WINAPI BroadcastSystemMessageW(DWORD flags,LPDWORD lpInfo,UINT Msg,WPARAM wParam,LPARAM lParam);

#Defina BSM_ALLCOMPONENTS 0x00000000
#Defina BSM_VXDS 0x00000001
#Defina BSM_NETDRIVER 0x00000002
#Defina BSM_INSTALLABLEDRIVERS 0x00000004
#Defina BSM_APPLICATIONS 0x00000008
#Defina BSM_ALLDESKTOPS 0x00000010

#Defina BSF_QUERY 0x00000001
#Defina BSF_IGNORECURRENTTASK 0x00000002
#Defina BSF_FLUSHDISK 0x00000004
#Defina BSF_NOHANG 0x00000008
#Defina BSF_POSTMESSAGE 0x00000010
#Defina BSF_FORCEIFHUNG 0x00000020
#Defina BSF_NOTIMEOUTIFNOTHUNG 0x00000040
#Defina BSF_ALLOWSFW 0x00000080
#Defina BSF_SENDNOTIFYMESSAGE 0x00000100
#Defina BSF_RETURNHDESK 0x00000200
#Defina BSF_LUID 0x00000400

#Defina BROADCAST_QUERY_DENY 0x424D5144

  Tipo PVOID HDEVNOTIFY;
  Tipo HDEVNOTIFY *PHDEVNOTIFY;

#Defina DEVICE_NOTIFY_WINDOW_HANDLE 0x00000000
#Defina DEVICE_NOTIFY_SERVICE_HANDLE 0x00000001
#Defina DEVICE_NOTIFY_ALL_INTERFACE_CLASSES 0x00000004

#SeDefinido UNICODE
#Defina RegisterDeviceNotification RegisterDeviceNotificationW
#Defina PostMessage PostMessageW
#Defina PostThreadMessage PostThreadMessageW
#Defina PostAppMessage PostAppMessageW
#Defina DefWindowProc DefWindowProcW
#Defina CallWindowProc CallWindowProcW
#Defina RegisterClass RegisterClassW
#Defina UnregisterClass UnregisterClassW
#Defina GetClassInfo GetClassInfoW
#Defina RegisterClassEx RegisterClassExW
#Defina GetClassInfoEx GetClassInfoExW
#Senão
#Defina RegisterDeviceNotification RegisterDeviceNotificationA
#Defina PostMessage PostMessageA
#Defina PostThreadMessage PostThreadMessageA
#Defina PostAppMessage PostAppMessageA
#Defina DefWindowProc DefWindowProcA
#Defina CallWindowProc CallWindowProcA
#Defina RegisterClass RegisterClassA
#Defina UnregisterClass UnregisterClassA
#Defina GetClassInfo GetClassInfoA
#Defina RegisterClassEx RegisterClassExA
#Defina GetClassInfoEx GetClassInfoExA
#FimSe

  WINUSERAPI HDEVNOTIFY WINAPI RegisterDeviceNotificationA(HANDLE hRecipient,LPVOID NotificationFilter,DWORD Flags);
  WINUSERAPI HDEVNOTIFY WINAPI RegisterDeviceNotificationW(HANDLE hRecipient,LPVOID NotificationFilter,DWORD Flags);
  WINUSERAPI WINBOOL WINAPI UnregisterDeviceNotification(HDEVNOTIFY Handle);
  WINUSERAPI WINBOOL WINAPI PostMessageA(HWND hWnd,UINT Msg,WPARAM wParam,LPARAM lParam);
  WINUSERAPI WINBOOL WINAPI PostMessageW(HWND hWnd,UINT Msg,WPARAM wParam,LPARAM lParam);
  WINUSERAPI WINBOOL WINAPI PostThreadMessageA(DWORD idThread,UINT Msg,WPARAM wParam,LPARAM lParam);
  WINUSERAPI WINBOOL WINAPI PostThreadMessageW(DWORD idThread,UINT Msg,WPARAM wParam,LPARAM lParam);
#Defina PostAppMessageA(idThread,wMsg,wParam,lParam) PostThreadMessageA((DWORD)idThread,wMsg,wParam,lParam)
#Defina PostAppMessageW(idThread,wMsg,wParam,lParam) PostThreadMessageW((DWORD)idThread,wMsg,wParam,lParam)

#Defina HWND_BROADCAST ((HWND)0xffff)
#Defina HWND_MESSAGE ((HWND)-3)

  WINUSERAPI WINBOOL WINAPI AttachThreadInput(DWORD idAttach,DWORD idAttachTo,WINBOOL fAttach);
  WINUSERAPI WINBOOL WINAPI ReplyMessage(LRESULT lResult);
  WINUSERAPI WINBOOL WINAPI WaitMessage(VOID);
  WINUSERAPI DWORD WINAPI WaitForInputIdle(HANDLE hProcess,DWORD dwMilliseconds);
  WINUSERAPI LRESULT WINAPI DefWindowProcA(HWND hWnd,UINT Msg,WPARAM wParam,LPARAM lParam);
  WINUSERAPI LRESULT WINAPI DefWindowProcW(HWND hWnd,UINT Msg,WPARAM wParam,LPARAM lParam);
  WINUSERAPI VOID WINAPI PostQuitMessage(Inteiro nExitCode);
  WINUSERAPI LRESULT WINAPI CallWindowProcA(WNDPROC lpPrevWndFunc,HWND hWnd,UINT Msg,WPARAM wParam,LPARAM lParam);
  WINUSERAPI LRESULT WINAPI CallWindowProcW(WNDPROC lpPrevWndFunc,HWND hWnd,UINT Msg,WPARAM wParam,LPARAM lParam);
  WINUSERAPI WINBOOL WINAPI InSendMessage(VOID);
  WINUSERAPI DWORD WINAPI InSendMessageEx(LPVOID lpReserved);

#Defina ISMEX_NOSEND 0x00000000
#Defina ISMEX_SEND 0x00000001
#Defina ISMEX_NOTIFY 0x00000002
#Defina ISMEX_CALLBACK 0x00000004
#Defina ISMEX_REPLIED 0x00000008

  WINUSERAPI UINT WINAPI GetDoubleClickTime(VOID);
  WINUSERAPI WINBOOL WINAPI SetDoubleClickTime(UINT);
  WINUSERAPI ATOM WINAPI RegisterClassA(CONST WNDCLASSA *lpWndClass);
  WINUSERAPI ATOM WINAPI RegisterClassW(CONST WNDCLASSW *lpWndClass);
  WINUSERAPI WINBOOL WINAPI UnregisterClassA(LPCSTR lpClassName,HINSTANCE hInstance);
  WINUSERAPI WINBOOL WINAPI UnregisterClassW(LPCWSTR lpClassName,HINSTANCE hInstance);
  WINUSERAPI WINBOOL WINAPI GetClassInfoA(HINSTANCE hInstance,LPCSTR lpClassName,LPWNDCLASSA lpWndClass);
  WINUSERAPI WINBOOL WINAPI GetClassInfoW(HINSTANCE hInstance,LPCWSTR lpClassName,LPWNDCLASSW lpWndClass);
  WINUSERAPI ATOM WINAPI RegisterClassExA(CONST WNDCLASSEXA *);
  WINUSERAPI ATOM WINAPI RegisterClassExW(CONST WNDCLASSEXW *);
  WINUSERAPI WINBOOL WINAPI GetClassInfoExA(HINSTANCE hInstance,LPCSTR lpszClass,LPWNDCLASSEXA lpwcx);
  WINUSERAPI WINBOOL WINAPI GetClassInfoExW(HINSTANCE hInstance,LPCWSTR lpszClass,LPWNDCLASSEXW lpwcx);

#Defina CW_USEDEFAULT ((Inteiro)0x80000000)

#Defina HWND_DESKTOP ((HWND)0)

  Tipo BOOLEAN (WINAPI *PREGISTERCLASSNAMEW)(LPCWSTR);

#SeDefinido UNICODE
#Defina CreateWindowEx CreateWindowExW
#Defina CreateWindow CreateWindowW
#Senão
#Defina CreateWindowEx CreateWindowExA
#Defina CreateWindow CreateWindowA
#FimSe

  WINUSERAPI HWND WINAPI CreateWindowExA(DWORD dwExStyle,LPCSTR lpClassName,LPCSTR lpWindowName,DWORD dwStyle,Inteiro X,Inteiro Y,Inteiro nWidth,Inteiro nHeight,HWND hWndParent,HMENU hMenu,HINSTANCE hInstance,LPVOID lpParam);
  WINUSERAPI HWND WINAPI CreateWindowExW(DWORD dwExStyle,LPCWSTR lpClassName,LPCWSTR lpWindowName,DWORD dwStyle,Inteiro X,Inteiro Y,Inteiro nWidth,Inteiro nHeight,HWND hWndParent,HMENU hMenu,HINSTANCE hInstance,LPVOID lpParam);
#Defina CreateWindowA(lpClassName,lpWindowName,dwStyle,x,y,nWidth,nHeight,hWndParent,hMenu,hInstance,lpParam) CreateWindowExA(0L,lpClassName,lpWindowName,dwStyle,x,y,nWidth,nHeight,hWndParent,hMenu,hInstance,lpParam)
#Defina CreateWindowW(lpClassName,lpWindowName,dwStyle,x,y,nWidth,nHeight,hWndParent,hMenu,hInstance,lpParam) CreateWindowExW(0L,lpClassName,lpWindowName,dwStyle,x,y,nWidth,nHeight,hWndParent,hMenu,hInstance,lpParam)
  WINUSERAPI WINBOOL WINAPI IsWindow(HWND hWnd);
  WINUSERAPI WINBOOL WINAPI IsMenu(HMENU hMenu);
  WINUSERAPI WINBOOL WINAPI IsChild(HWND hWndParent,HWND hWnd);
  WINUSERAPI WINBOOL WINAPI DestroyWindow(HWND hWnd);
  WINUSERAPI WINBOOL WINAPI ShowWindow(HWND hWnd,Inteiro nCmdShow);
  WINUSERAPI WINBOOL WINAPI AnimateWindow(HWND hWnd,DWORD dwTime,DWORD dwFlags);

#Se Definido(_WINGDI_) && !Definido(NOGDI)
  WINUSERAPI WINBOOL WINAPI UpdateLayeredWindow(HWND hWnd,HDC hdcDst,POINT *pptDst,SIZE *psize,HDC hdcSrc,POINT *pptSrc,COLORREF crKey,BLENDFUNCTION *pblend,DWORD dwFlags);

  Tipo Estrutura tagUPDATELAYEREDWINDOWINFO {
    DWORD cbSize;
    HDC hdcDst;
    POINT CONST *pptDst;
    SIZE CONST *psize;
    HDC hdcSrc;
    POINT CONST *pptSrc;
    COLORREF crKey;
    BLENDFUNCTION CONST *pblend;
    DWORD dwFlags;
    RECT CONST *prcDirty;
  } UPDATELAYEREDWINDOWINFO,*PUPDATELAYEREDWINDOWINFO;

  WINUSERAPI WINBOOL WINAPI UpdateLayeredWindowIndirect(HWND hWnd,UPDATELAYEREDWINDOWINFO CONST *pULWInfo);
  WINUSERAPI WINBOOL WINAPI GetLayeredWindowAttributes(HWND hwnd,COLORREF *pcrKey,BYTE *pbAlpha,DWORD *pdwFlags);

#Defina PW_CLIENTONLY 0x00000001

  WINUSERAPI WINBOOL WINAPI PrintWindow(HWND hwnd,HDC hdcBlt,UINT nFlags);
  WINUSERAPI WINBOOL WINAPI SetLayeredWindowAttributes(HWND hwnd,COLORREF crKey,BYTE bAlpha,DWORD dwFlags);

#Defina LWA_COLORKEY 0x00000001
#Defina LWA_ALPHA 0x00000002

#Defina ULW_COLORKEY 0x00000001
#Defina ULW_ALPHA 0x00000002
#Defina ULW_OPAQUE 0x00000004

#Defina ULW_EX_NORESIZE 0x00000008

  WINUSERAPI WINBOOL WINAPI ShowWindowAsync(HWND hWnd,Inteiro nCmdShow);
  WINUSERAPI WINBOOL WINAPI FlashWindow(HWND hWnd,WINBOOL bInvert);

  Tipo Estrutura {
    UINT cbSize;
    HWND hwnd;
    DWORD dwFlags;
    UINT uCount;
    DWORD dwTimeout;
  } FLASHWINFO,*PFLASHWINFO;

  WINUSERAPI WINBOOL WINAPI FlashWindowEx(PFLASHWINFO pfwi);

#Defina FLASHW_STOP 0
#Defina FLASHW_CAPTION 0x00000001
#Defina FLASHW_TRAY 0x00000002
#Defina FLASHW_ALL (FLASHW_CAPTION | FLASHW_TRAY)
#Defina FLASHW_TIMER 0x00000004
#Defina FLASHW_TIMERNOFG 0x0000000C

  WINUSERAPI WINBOOL WINAPI ShowOwnedPopups(HWND hWnd,WINBOOL fShow);
  WINUSERAPI WINBOOL WINAPI OpenIcon(HWND hWnd);
  WINUSERAPI WINBOOL WINAPI CloseWindow(HWND hWnd);
  WINUSERAPI WINBOOL WINAPI MoveWindow(HWND hWnd,Inteiro X,Inteiro Y,Inteiro nWidth,Inteiro nHeight,WINBOOL bRepaint);
  WINUSERAPI WINBOOL WINAPI SetWindowPos(HWND hWnd,HWND hWndInsertAfter,Inteiro X,Inteiro Y,Inteiro cx,Inteiro cy,UINT uFlags);
  WINUSERAPI WINBOOL WINAPI GetWindowPlacement(HWND hWnd,WINDOWPLACEMENT *lpwndpl);
  WINUSERAPI WINBOOL WINAPI SetWindowPlacement(HWND hWnd,CONST WINDOWPLACEMENT *lpwndpl);

#SenãoDefinido NODEFERWINDOWPOS
  WINUSERAPI HDWP WINAPI BeginDeferWindowPos(Inteiro nNumWindows);
  WINUSERAPI HDWP WINAPI DeferWindowPos(HDWP hWinPosInfo,HWND hWnd,HWND hWndInsertAfter,Inteiro x,Inteiro y,Inteiro cx,Inteiro cy,UINT uFlags);
  WINUSERAPI WINBOOL WINAPI EndDeferWindowPos(HDWP hWinPosInfo);
#FimSe

  WINUSERAPI WINBOOL WINAPI IsWindowVisible(HWND hWnd);
  WINUSERAPI WINBOOL WINAPI IsIconic(HWND hWnd);
  WINUSERAPI WINBOOL WINAPI AnyPopup(VOID);
  WINUSERAPI WINBOOL WINAPI BringWindowToTop(HWND hWnd);
  WINUSERAPI WINBOOL WINAPI IsZoomed(HWND hWnd);

#Defina SWP_NOSIZE 0x0001
#Defina SWP_NOMOVE 0x0002
#Defina SWP_NOZORDER 0x0004
#Defina SWP_NOREDRAW 0x0008
#Defina SWP_NOACTIVATE 0x0010
#Defina SWP_FRAMECHANGED 0x0020
#Defina SWP_SHOWWINDOW 0x0040
#Defina SWP_HIDEWINDOW 0x0080
#Defina SWP_NOCOPYBITS 0x0100
#Defina SWP_NOOWNERZORDER 0x0200
#Defina SWP_NOSENDCHANGING 0x0400

#Defina SWP_DRAWFRAME SWP_FRAMECHANGED
#Defina SWP_NOREPOSITION SWP_NOOWNERZORDER
#Defina SWP_DEFERERASE 0x2000
#Defina SWP_ASYNCWINDOWPOS 0x4000

#Defina HWND_TOP ((HWND)0)
#Defina HWND_BOTTOM ((HWND)1)
#Defina HWND_TOPMOST ((HWND)-1)
#Defina HWND_NOTOPMOST ((HWND)-2)

#SenãoDefinido NOCTLMGR

#Inclua <pshpack2.h>

  Tipo Estrutura {
    DWORD style;
    DWORD dwExtendedStyle;
    WORD cdit;
    Curto x;
    Curto y;
    Curto cx;
    Curto cy;
  } DLGTEMPLATE;

  Tipo DLGTEMPLATE *LPDLGTEMPLATEA;
  Tipo DLGTEMPLATE *LPDLGTEMPLATEW;

#SeDefinido UNICODE
  Tipo LPDLGTEMPLATEW LPDLGTEMPLATE;
#Senão
  Tipo LPDLGTEMPLATEA LPDLGTEMPLATE;
#FimSe

  Tipo CONST DLGTEMPLATE *LPCDLGTEMPLATEA;
  Tipo CONST DLGTEMPLATE *LPCDLGTEMPLATEW;

#SeDefinido UNICODE
  Tipo LPCDLGTEMPLATEW LPCDLGTEMPLATE;
#Senão
  Tipo LPCDLGTEMPLATEA LPCDLGTEMPLATE;
#FimSe

  Tipo Estrutura {
    DWORD style;
    DWORD dwExtendedStyle;
    Curto x;
    Curto y;
    Curto cx;
    Curto cy;
    WORD id;
  } DLGITEMTEMPLATE;

  Tipo DLGITEMTEMPLATE *PDLGITEMTEMPLATEA;
  Tipo DLGITEMTEMPLATE *PDLGITEMTEMPLATEW;

#SeDefinido UNICODE
  Tipo PDLGITEMTEMPLATEW PDLGITEMTEMPLATE;
#Senão
  Tipo PDLGITEMTEMPLATEA PDLGITEMTEMPLATE;
#FimSe

  Tipo DLGITEMTEMPLATE *LPDLGITEMTEMPLATEA;
  Tipo DLGITEMTEMPLATE *LPDLGITEMTEMPLATEW;

#SeDefinido UNICODE
  Tipo LPDLGITEMTEMPLATEW LPDLGITEMTEMPLATE;
#Senão
  Tipo LPDLGITEMTEMPLATEA LPDLGITEMTEMPLATE;
#FimSe

#Inclua <poppack.h>

#SeDefinido UNICODE
#Defina CreateDialogParam CreateDialogParamW
#Defina CreateDialogIndirectParam CreateDialogIndirectParamW
#Defina CreateDialog CreateDialogW
#Defina CreateDialogIndirect CreateDialogIndirectW
#Defina DialogBoxParam DialogBoxParamW
#Defina DialogBoxIndirectParam DialogBoxIndirectParamW
#Defina DialogBox DialogBoxW
#Defina DialogBoxIndirect DialogBoxIndirectW
#Defina SetDlgItemText SetDlgItemTextW
#Defina GetDlgItemText GetDlgItemTextW
#Defina SendDlgItemMessage SendDlgItemMessageW
#Defina DefDlgProc DefDlgProcW
#Senão
#Defina CreateDialogParam CreateDialogParamA
#Defina CreateDialogIndirectParam CreateDialogIndirectParamA
#Defina CreateDialog CreateDialogA
#Defina CreateDialogIndirect CreateDialogIndirectA
#Defina DialogBoxParam DialogBoxParamA
#Defina DialogBoxIndirectParam DialogBoxIndirectParamA
#Defina DialogBox DialogBoxA
#Defina DialogBoxIndirect DialogBoxIndirectA
#Defina SetDlgItemText SetDlgItemTextA
#Defina GetDlgItemText GetDlgItemTextA
#Defina SendDlgItemMessage SendDlgItemMessageA
#Defina DefDlgProc DefDlgProcA
#FimSe

  WINUSERAPI HWND WINAPI CreateDialogParamA(HINSTANCE hInstance,LPCSTR lpTemplateName,HWND hWndParent,DLGPROC lpDialogFunc,LPARAM dwInitParam);
  WINUSERAPI HWND WINAPI CreateDialogParamW(HINSTANCE hInstance,LPCWSTR lpTemplateName,HWND hWndParent,DLGPROC lpDialogFunc,LPARAM dwInitParam);
  WINUSERAPI HWND WINAPI CreateDialogIndirectParamA(HINSTANCE hInstance,LPCDLGTEMPLATEA lpTemplate,HWND hWndParent,DLGPROC lpDialogFunc,LPARAM dwInitParam);
  WINUSERAPI HWND WINAPI CreateDialogIndirectParamW(HINSTANCE hInstance,LPCDLGTEMPLATEW lpTemplate,HWND hWndParent,DLGPROC lpDialogFunc,LPARAM dwInitParam);
#Defina CreateDialogA(hInstance,lpName,hWndParent,lpDialogFunc) CreateDialogParamA(hInstance,lpName,hWndParent,lpDialogFunc,0L)
#Defina CreateDialogW(hInstance,lpName,hWndParent,lpDialogFunc) CreateDialogParamW(hInstance,lpName,hWndParent,lpDialogFunc,0L)
#Defina CreateDialogIndirectA(hInstance,lpTemplate,hWndParent,lpDialogFunc) CreateDialogIndirectParamA(hInstance,lpTemplate,hWndParent,lpDialogFunc,0L)
#Defina CreateDialogIndirectW(hInstance,lpTemplate,hWndParent,lpDialogFunc) CreateDialogIndirectParamW(hInstance,lpTemplate,hWndParent,lpDialogFunc,0L)
  WINUSERAPI INT_PTR WINAPI DialogBoxParamA(HINSTANCE hInstance,LPCSTR lpTemplateName,HWND hWndParent,DLGPROC lpDialogFunc,LPARAM dwInitParam);
  WINUSERAPI INT_PTR WINAPI DialogBoxParamW(HINSTANCE hInstance,LPCWSTR lpTemplateName,HWND hWndParent,DLGPROC lpDialogFunc,LPARAM dwInitParam);
  WINUSERAPI INT_PTR WINAPI DialogBoxIndirectParamA(HINSTANCE hInstance,LPCDLGTEMPLATEA hDialogTemplate,HWND hWndParent,DLGPROC lpDialogFunc,LPARAM dwInitParam);
  WINUSERAPI INT_PTR WINAPI DialogBoxIndirectParamW(HINSTANCE hInstance,LPCDLGTEMPLATEW hDialogTemplate,HWND hWndParent,DLGPROC lpDialogFunc,LPARAM dwInitParam);
#Defina DialogBoxA(hInstance,lpTemplate,hWndParent,lpDialogFunc) DialogBoxParamA(hInstance,lpTemplate,hWndParent,lpDialogFunc,0L)
#Defina DialogBoxW(hInstance,lpTemplate,hWndParent,lpDialogFunc) DialogBoxParamW(hInstance,lpTemplate,hWndParent,lpDialogFunc,0L)
#Defina DialogBoxIndirectA(hInstance,lpTemplate,hWndParent,lpDialogFunc) DialogBoxIndirectParamA(hInstance,lpTemplate,hWndParent,lpDialogFunc,0L)
#Defina DialogBoxIndirectW(hInstance,lpTemplate,hWndParent,lpDialogFunc) DialogBoxIndirectParamW(hInstance,lpTemplate,hWndParent,lpDialogFunc,0L)
  WINUSERAPI WINBOOL WINAPI EndDialog(HWND hDlg,INT_PTR nResult);
  WINUSERAPI HWND WINAPI GetDlgItem(HWND hDlg,Inteiro nIDDlgItem);
  WINUSERAPI WINBOOL WINAPI SetDlgItemInt(HWND hDlg,Inteiro nIDDlgItem,UINT uValue,WINBOOL bSigned);
  WINUSERAPI UINT WINAPI GetDlgItemInt(HWND hDlg,Inteiro nIDDlgItem,WINBOOL *lpTranslated,WINBOOL bSigned);
  WINUSERAPI WINBOOL WINAPI SetDlgItemTextA(HWND hDlg,Inteiro nIDDlgItem,LPCSTR lpString);
  WINUSERAPI WINBOOL WINAPI SetDlgItemTextW(HWND hDlg,Inteiro nIDDlgItem,LPCWSTR lpString);
  WINUSERAPI UINT WINAPI GetDlgItemTextA(HWND hDlg,Inteiro nIDDlgItem,LPSTR lpString,Inteiro cchMax);
  WINUSERAPI UINT WINAPI GetDlgItemTextW(HWND hDlg,Inteiro nIDDlgItem,LPWSTR lpString,Inteiro cchMax);
  WINUSERAPI WINBOOL WINAPI CheckDlgButton(HWND hDlg,Inteiro nIDButton,UINT uCheck);
  WINUSERAPI WINBOOL WINAPI CheckRadioButton(HWND hDlg,Inteiro nIDFirstButton,Inteiro nIDLastButton,Inteiro nIDCheckButton);
  WINUSERAPI UINT WINAPI IsDlgButtonChecked(HWND hDlg,Inteiro nIDButton);
  WINUSERAPI LRESULT WINAPI SendDlgItemMessageA(HWND hDlg,Inteiro nIDDlgItem,UINT Msg,WPARAM wParam,LPARAM lParam);
  WINUSERAPI LRESULT WINAPI SendDlgItemMessageW(HWND hDlg,Inteiro nIDDlgItem,UINT Msg,WPARAM wParam,LPARAM lParam);
  WINUSERAPI HWND WINAPI GetNextDlgGroupItem(HWND hDlg,HWND hCtl,WINBOOL bPrevious);
  WINUSERAPI HWND WINAPI GetNextDlgTabItem(HWND hDlg,HWND hCtl,WINBOOL bPrevious);
  WINUSERAPI Inteiro WINAPI GetDlgCtrlID(HWND hWnd);
  WINUSERAPI Longo WINAPI GetDialogBaseUnits(VOID);
  WINUSERAPI LRESULT WINAPI DefDlgProcA(HWND hDlg,UINT Msg,WPARAM wParam,LPARAM lParam);
  WINUSERAPI LRESULT WINAPI DefDlgProcW(HWND hDlg,UINT Msg,WPARAM wParam,LPARAM lParam);

#Defina DLGWINDOWEXTRA 30
#FimSe

#SenãoDefinido NOMSG

#SeDefinido UNICODE
#Defina CallMsgFilter CallMsgFilterW
#Senão
#Defina CallMsgFilter CallMsgFilterA
#FimSe

  WINUSERAPI WINBOOL WINAPI CallMsgFilterA(LPMSG lpMsg,Inteiro nCode);
  WINUSERAPI WINBOOL WINAPI CallMsgFilterW(LPMSG lpMsg,Inteiro nCode);
#FimSe

#SenãoDefinido NOCLIPBOARD

#SeDefinido UNICODE
#Defina RegisterClipboardFormat RegisterClipboardFormatW
#Defina GetClipboardFormatName GetClipboardFormatNameW
#Senão
#Defina RegisterClipboardFormat RegisterClipboardFormatA
#Defina GetClipboardFormatName GetClipboardFormatNameA
#FimSe

  WINUSERAPI WINBOOL WINAPI OpenClipboard(HWND hWndNewOwner);
  WINUSERAPI WINBOOL WINAPI CloseClipboard(VOID);
  WINUSERAPI DWORD WINAPI GetClipboardSequenceNumber(VOID);
  WINUSERAPI HWND WINAPI GetClipboardOwner(VOID);
  WINUSERAPI HWND WINAPI SetClipboardViewer(HWND hWndNewViewer);
  WINUSERAPI HWND WINAPI GetClipboardViewer(VOID);
  WINUSERAPI WINBOOL WINAPI ChangeClipboardChain(HWND hWndRemove,HWND hWndNewNext);
  WINUSERAPI HANDLE WINAPI SetClipboardData(UINT uFormat,HANDLE hMem);
  WINUSERAPI HANDLE WINAPI GetClipboardData(UINT uFormat);
  WINUSERAPI UINT WINAPI RegisterClipboardFormatA(LPCSTR lpszFormat);
  WINUSERAPI UINT WINAPI RegisterClipboardFormatW(LPCWSTR lpszFormat);
  WINUSERAPI Inteiro WINAPI CountClipboardFormats(VOID);
  WINUSERAPI UINT WINAPI EnumClipboardFormats(UINT format);
  WINUSERAPI Inteiro WINAPI GetClipboardFormatNameA(UINT format,LPSTR lpszFormatName,Inteiro cchMaxCount);
  WINUSERAPI Inteiro WINAPI GetClipboardFormatNameW(UINT format,LPWSTR lpszFormatName,Inteiro cchMaxCount);
  WINUSERAPI WINBOOL WINAPI EmptyClipboard(VOID);
  WINUSERAPI WINBOOL WINAPI IsClipboardFormatAvailable(UINT format);
  WINUSERAPI Inteiro WINAPI GetPriorityClipboardFormat(UINT *paFormatPriorityList,Inteiro cFormats);
  WINUSERAPI HWND WINAPI GetOpenClipboardWindow(VOID);
#FimSe

#SeDefinido UNICODE
#Defina CharToOem CharToOemW
#Defina OemToChar OemToCharW
#Defina CharToOemBuff CharToOemBuffW
#Defina OemToCharBuff OemToCharBuffW
#Defina CharUpper CharUpperW
#Defina CharUpperBuff CharUpperBuffW
#Defina CharLower CharLowerW
#Defina CharLowerBuff CharLowerBuffW
#Defina CharNext CharNextW
#Defina CharPrev CharPrevW
#Senão
#Defina CharToOem CharToOemA
#Defina OemToChar OemToCharA
#Defina CharToOemBuff CharToOemBuffA
#Defina OemToCharBuff OemToCharBuffA
#Defina CharUpper CharUpperA
#Defina CharUpperBuff CharUpperBuffA
#Defina CharLower CharLowerA
#Defina CharLowerBuff CharLowerBuffA
#Defina CharNext CharNextA
#Defina CharPrev CharPrevA
#FimSe

  WINUSERAPI WINBOOL WINAPI CharToOemA(LPCSTR lpszSrc,LPSTR lpszDst);
  WINUSERAPI WINBOOL WINAPI CharToOemW(LPCWSTR lpszSrc,LPSTR lpszDst);
  WINUSERAPI WINBOOL WINAPI OemToCharA(LPCSTR lpszSrc,LPSTR lpszDst);
  WINUSERAPI WINBOOL WINAPI OemToCharW(LPCSTR lpszSrc,LPWSTR lpszDst);
  WINUSERAPI WINBOOL WINAPI CharToOemBuffA(LPCSTR lpszSrc,LPSTR lpszDst,DWORD cchDstLength);
  WINUSERAPI WINBOOL WINAPI CharToOemBuffW(LPCWSTR lpszSrc,LPSTR lpszDst,DWORD cchDstLength);
  WINUSERAPI WINBOOL WINAPI OemToCharBuffA(LPCSTR lpszSrc,LPSTR lpszDst,DWORD cchDstLength);
  WINUSERAPI WINBOOL WINAPI OemToCharBuffW(LPCSTR lpszSrc,LPWSTR lpszDst,DWORD cchDstLength);
  WINUSERAPI LPSTR WINAPI CharUpperA(LPSTR lpsz);
  WINUSERAPI LPWSTR WINAPI CharUpperW(LPWSTR lpsz);
  WINUSERAPI DWORD WINAPI CharUpperBuffA(LPSTR lpsz,DWORD cchLength);
  WINUSERAPI DWORD WINAPI CharUpperBuffW(LPWSTR lpsz,DWORD cchLength);
  WINUSERAPI LPSTR WINAPI CharLowerA(LPSTR lpsz);
  WINUSERAPI LPWSTR WINAPI CharLowerW(LPWSTR lpsz);
  WINUSERAPI DWORD WINAPI CharLowerBuffA(LPSTR lpsz,DWORD cchLength);
  WINUSERAPI DWORD WINAPI CharLowerBuffW(LPWSTR lpsz,DWORD cchLength);
  WINUSERAPI LPSTR WINAPI CharNextA(LPCSTR lpsz);
  WINUSERAPI LPWSTR WINAPI CharNextW(LPCWSTR lpsz);
  WINUSERAPI LPSTR WINAPI CharPrevA(LPCSTR lpszStart,LPCSTR lpszCurrent);
  WINUSERAPI LPWSTR WINAPI CharPrevW(LPCWSTR lpszStart,LPCWSTR lpszCurrent);
  WINUSERAPI LPSTR WINAPI CharNextExA(WORD CodePage,LPCSTR lpCurrentChar,DWORD dwFlags);
  WINUSERAPI LPSTR WINAPI CharPrevExA(WORD CodePage,LPCSTR lpStart,LPCSTR lpCurrentChar,DWORD dwFlags);

#Defina AnsiToOem CharToOemA
#Defina OemToAnsi OemToCharA
#Defina AnsiToOemBuff CharToOemBuffA
#Defina OemToAnsiBuff OemToCharBuffA
#Defina AnsiUpper CharUpperA
#Defina AnsiUpperBuff CharUpperBuffA
#Defina AnsiLower CharLowerA
#Defina AnsiLowerBuff CharLowerBuffA
#Defina AnsiNext CharNextA
#Defina AnsiPrev CharPrevA

#SenãoDefinido NOLANGUAGE

#SeDefinido UNICODE
#Defina IsCharAlpha IsCharAlphaW
#Defina IsCharAlphaNumeric IsCharAlphaNumericW
#Defina IsCharUpper IsCharUpperW
#Defina IsCharLower IsCharLowerW
#Senão
#Defina IsCharAlpha IsCharAlphaA
#Defina IsCharAlphaNumeric IsCharAlphaNumericA
#Defina IsCharUpper IsCharUpperA
#Defina IsCharLower IsCharLowerA
#FimSe

  WINUSERAPI WINBOOL WINAPI IsCharAlphaA(CHAR ch);
  WINUSERAPI WINBOOL WINAPI IsCharAlphaW(WCHAR ch);
  WINUSERAPI WINBOOL WINAPI IsCharAlphaNumericA(CHAR ch);
  WINUSERAPI WINBOOL WINAPI IsCharAlphaNumericW(WCHAR ch);
  WINUSERAPI WINBOOL WINAPI IsCharUpperA(CHAR ch);
  WINUSERAPI WINBOOL WINAPI IsCharUpperW(WCHAR ch);
  WINUSERAPI WINBOOL WINAPI IsCharLowerA(CHAR ch);
  WINUSERAPI WINBOOL WINAPI IsCharLowerW(WCHAR ch);
#FimSe

#SeDefinido UNICODE
#Defina GetKeyNameText GetKeyNameTextW
#Defina VkKeyScan VkKeyScanW
#Defina VkKeyScanEx VkKeyScanExW
#Senão
#Defina GetKeyNameText GetKeyNameTextA
#Defina VkKeyScan VkKeyScanA
#Defina VkKeyScanEx VkKeyScanExA
#FimSe

  WINUSERAPI HWND WINAPI SetFocus(HWND hWnd);
  WINUSERAPI HWND WINAPI GetActiveWindow(VOID);
  WINUSERAPI HWND WINAPI GetFocus(VOID);
  WINUSERAPI UINT WINAPI GetKBCodePage(VOID);
  WINUSERAPI SHORT WINAPI GetKeyState(Inteiro nVirtKey);
  WINUSERAPI SHORT WINAPI GetAsyncKeyState(Inteiro vKey);
  WINUSERAPI WINBOOL WINAPI GetKeyboardState(PBYTE lpKeyState);
  WINUSERAPI WINBOOL WINAPI SetKeyboardState(LPBYTE lpKeyState);
  WINUSERAPI Inteiro WINAPI GetKeyNameTextA(LONG lParam,LPSTR lpString,Inteiro cchSize);
  WINUSERAPI Inteiro WINAPI GetKeyNameTextW(LONG lParam,LPWSTR lpString,Inteiro cchSize);
  WINUSERAPI Inteiro WINAPI GetKeyboardType(Inteiro nTypeFlag);
  WINUSERAPI Inteiro WINAPI ToAscii(UINT uVirtKey,UINT uScanCode,CONST BYTE *lpKeyState,LPWORD lpChar,UINT uFlags);
  WINUSERAPI Inteiro WINAPI ToAsciiEx(UINT uVirtKey,UINT uScanCode,CONST BYTE *lpKeyState,LPWORD lpChar,UINT uFlags,HKL dwhkl);
  WINUSERAPI Inteiro WINAPI ToUnicode(UINT wVirtKey,UINT wScanCode,CONST BYTE *lpKeyState,LPWSTR pwszBuff,Inteiro cchBuff,UINT wFlags);
  WINUSERAPI DWORD WINAPI OemKeyScan(WORD wOemChar);
  WINUSERAPI SHORT WINAPI VkKeyScanA(CHAR ch);
  WINUSERAPI SHORT WINAPI VkKeyScanW(WCHAR ch);
  WINUSERAPI SHORT WINAPI VkKeyScanExA(CHAR ch,HKL dwhkl);
  WINUSERAPI SHORT WINAPI VkKeyScanExW(WCHAR ch,HKL dwhkl);

#Defina KEYEVENTF_EXTENDEDKEY 0x0001
#Defina KEYEVENTF_KEYUP 0x0002
#Defina KEYEVENTF_UNICODE 0x0004
#Defina KEYEVENTF_SCANCODE 0x0008

  WINUSERAPI VOID WINAPI keybd_event(BYTE bVk,BYTE bScan,DWORD dwFlags,ULONG_PTR dwExtraInfo);

#Defina MOUSEEVENTF_MOVE 0x0001
#Defina MOUSEEVENTF_LEFTDOWN 0x0002
#Defina MOUSEEVENTF_LEFTUP 0x0004
#Defina MOUSEEVENTF_RIGHTDOWN 0x0008
#Defina MOUSEEVENTF_RIGHTUP 0x0010
#Defina MOUSEEVENTF_MIDDLEDOWN 0x0020
#Defina MOUSEEVENTF_MIDDLEUP 0x0040
#Defina MOUSEEVENTF_XDOWN 0x0080
#Defina MOUSEEVENTF_XUP 0x0100
#Defina MOUSEEVENTF_WHEEL 0x0800
#Defina MOUSEEVENTF_VIRTUALDESK 0x4000
#Defina MOUSEEVENTF_ABSOLUTE 0x8000

  WINUSERAPI VOID WINAPI mouse_event(DWORD dwFlags,DWORD dx,DWORD dy,DWORD dwData,ULONG_PTR dwExtraInfo);

  Tipo Estrutura tagMOUSEINPUT {
    LONG dx;
    LONG dy;
    DWORD mouseData;
    DWORD dwFlags;
    DWORD time;
    ULONG_PTR dwExtraInfo;
  } MOUSEINPUT,*PMOUSEINPUT,*LPMOUSEINPUT;

  Tipo Estrutura tagKEYBDINPUT {
    WORD wVk;
    WORD wScan;
    DWORD dwFlags;
    DWORD time;
    ULONG_PTR dwExtraInfo;
  } KEYBDINPUT,*PKEYBDINPUT,*LPKEYBDINPUT;

  Tipo Estrutura tagHARDWAREINPUT {
    DWORD uMsg;
    WORD wParamL;
    WORD wParamH;
  } HARDWAREINPUT,*PHARDWAREINPUT,*LPHARDWAREINPUT;

#Defina INPUT_MOUSE 0
#Defina INPUT_KEYBOARD 1
#Defina INPUT_HARDWARE 2

  Tipo Estrutura tagINPUT {
    DWORD type;
    União {
      MOUSEINPUT mi;
      KEYBDINPUT ki;
      HARDWAREINPUT hi;
    };
  } INPUT,*PINPUT,*LPINPUT;

  WINUSERAPI UINT WINAPI SendInput(UINT cInputs,LPINPUT pInputs,Inteiro cbSize);

  Tipo Estrutura tagLASTINPUTINFO {
    UINT cbSize;
    DWORD dwTime;
  } LASTINPUTINFO,*PLASTINPUTINFO;

#SeDefinido UNICODE
#Defina MapVirtualKey MapVirtualKeyW
#Defina MapVirtualKeyEx MapVirtualKeyExW
#Senão
#Defina MapVirtualKey MapVirtualKeyA
#Defina MapVirtualKeyEx MapVirtualKeyExA
#FimSe

  WINUSERAPI WINBOOL WINAPI GetLastInputInfo(PLASTINPUTINFO plii);
  WINUSERAPI UINT WINAPI MapVirtualKeyA(UINT uCode,UINT uMapType);
  WINUSERAPI UINT WINAPI MapVirtualKeyW(UINT uCode,UINT uMapType);
  WINUSERAPI UINT WINAPI MapVirtualKeyExA(UINT uCode,UINT uMapType,HKL dwhkl);
  WINUSERAPI UINT WINAPI MapVirtualKeyExW(UINT uCode,UINT uMapType,HKL dwhkl);
  WINUSERAPI WINBOOL WINAPI GetInputState(VOID);
  WINUSERAPI DWORD WINAPI GetQueueStatus(UINT flags);
  WINUSERAPI HWND WINAPI GetCapture(VOID);
  WINUSERAPI HWND WINAPI SetCapture(HWND hWnd);
  WINUSERAPI WINBOOL WINAPI ReleaseCapture(VOID);
  WINUSERAPI DWORD WINAPI MsgWaitForMultipleObjects(DWORD nCount,CONST HANDLE *pHandles,WINBOOL fWaitAll,DWORD dwMilliseconds,DWORD dwWakeMask);
  WINUSERAPI DWORD WINAPI MsgWaitForMultipleObjectsEx(DWORD nCount,CONST HANDLE *pHandles,DWORD dwMilliseconds,DWORD dwWakeMask,DWORD dwFlags);

#Defina MWMO_WAITALL 0x0001
#Defina MWMO_ALERTABLE 0x0002
#Defina MWMO_INPUTAVAILABLE 0x0004

#Defina QS_KEY 0x0001
#Defina QS_MOUSEMOVE 0x0002
#Defina QS_MOUSEBUTTON 0x0004
#Defina QS_POSTMESSAGE 0x0008
#Defina QS_TIMER 0x0010
#Defina QS_PAINT 0x0020
#Defina QS_SENDMESSAGE 0x0040
#Defina QS_HOTKEY 0x0080
#Defina QS_ALLPOSTMESSAGE 0x0100
#Defina QS_RAWINPUT 0x0400
#Defina QS_MOUSE (QS_MOUSEMOVE | QS_MOUSEBUTTON)
#Defina QS_INPUT (QS_MOUSE | QS_KEY | QS_RAWINPUT)
#Defina QS_ALLEVENTS (QS_INPUT | QS_POSTMESSAGE | QS_TIMER | QS_PAINT | QS_HOTKEY)
#Defina QS_ALLINPUT (QS_INPUT | QS_POSTMESSAGE | QS_TIMER | QS_PAINT | QS_HOTKEY | QS_SENDMESSAGE)

#Defina USER_TIMER_MAXIMUM 0x7FFFFFFF
#Defina USER_TIMER_MINIMUM 0x0000000A

#SeDefinido UNICODE
#Defina LoadAccelerators LoadAcceleratorsW
#Defina CreateAcceleratorTable CreateAcceleratorTableW
#Defina CopyAcceleratorTable CopyAcceleratorTableW
#Senão
#Defina LoadAccelerators LoadAcceleratorsA
#Defina CreateAcceleratorTable CreateAcceleratorTableA
#Defina CopyAcceleratorTable CopyAcceleratorTableA
#FimSe

  WINUSERAPI UINT_PTR WINAPI SetTimer(HWND hWnd,UINT_PTR nIDEvent,UINT uElapse,TIMERPROC lpTimerFunc);
  WINUSERAPI WINBOOL WINAPI KillTimer(HWND hWnd,UINT_PTR uIDEvent);
  WINUSERAPI WINBOOL WINAPI IsWindowUnicode(HWND hWnd);
  WINUSERAPI WINBOOL WINAPI EnableWindow(HWND hWnd,WINBOOL bEnable);
  WINUSERAPI WINBOOL WINAPI IsWindowEnabled(HWND hWnd);
  WINUSERAPI HACCEL WINAPI LoadAcceleratorsA(HINSTANCE hInstance,LPCSTR lpTableName);
  WINUSERAPI HACCEL WINAPI LoadAcceleratorsW(HINSTANCE hInstance,LPCWSTR lpTableName);
  WINUSERAPI HACCEL WINAPI CreateAcceleratorTableA(LPACCEL paccel,Inteiro cAccel);
  WINUSERAPI HACCEL WINAPI CreateAcceleratorTableW(LPACCEL paccel,Inteiro cAccel);
  WINUSERAPI WINBOOL WINAPI DestroyAcceleratorTable(HACCEL hAccel);
  WINUSERAPI Inteiro WINAPI CopyAcceleratorTableA(HACCEL hAccelSrc,LPACCEL lpAccelDst,Inteiro cAccelEntries);
  WINUSERAPI Inteiro WINAPI CopyAcceleratorTableW(HACCEL hAccelSrc,LPACCEL lpAccelDst,Inteiro cAccelEntries);

#SenãoDefinido NOMSG

#SeDefinido UNICODE
#Defina TranslateAccelerator TranslateAcceleratorW
#Senão
#Defina TranslateAccelerator TranslateAcceleratorA
#FimSe

  WINUSERAPI Inteiro WINAPI TranslateAcceleratorA(HWND hWnd,HACCEL hAccTable,LPMSG lpMsg);
  WINUSERAPI Inteiro WINAPI TranslateAcceleratorW(HWND hWnd,HACCEL hAccTable,LPMSG lpMsg);
#FimSe

#SenãoDefinido NOSYSMETRICS

#Defina SM_CXSCREEN 0
#Defina SM_CYSCREEN 1
#Defina SM_CXVSCROLL 2
#Defina SM_CYHSCROLL 3
#Defina SM_CYCAPTION 4
#Defina SM_CXBORDER 5
#Defina SM_CYBORDER 6
#Defina SM_CXDLGFRAME 7
#Defina SM_CYDLGFRAME 8
#Defina SM_CYVTHUMB 9
#Defina SM_CXHTHUMB 10
#Defina SM_CXICON 11
#Defina SM_CYICON 12
#Defina SM_CXCURSOR 13
#Defina SM_CYCURSOR 14
#Defina SM_CYMENU 15
#Defina SM_CXFULLSCREEN 16
#Defina SM_CYFULLSCREEN 17
#Defina SM_CYKANJIWINDOW 18
#Defina SM_MOUSEPRESENT 19
#Defina SM_CYVSCROLL 20
#Defina SM_CXHSCROLL 21
#Defina SM_DEBUG 22
#Defina SM_SWAPBUTTON 23
#Defina SM_RESERVED1 24
#Defina SM_RESERVED2 25
#Defina SM_RESERVED3 26
#Defina SM_RESERVED4 27
#Defina SM_CXMIN 28
#Defina SM_CYMIN 29
#Defina SM_CXSIZE 30
#Defina SM_CYSIZE 31
#Defina SM_CXFRAME 32
#Defina SM_CYFRAME 33
#Defina SM_CXMINTRACK 34
#Defina SM_CYMINTRACK 35
#Defina SM_CXDOUBLECLK 36
#Defina SM_CYDOUBLECLK 37
#Defina SM_CXICONSPACING 38
#Defina SM_CYICONSPACING 39
#Defina SM_MENUDROPALIGNMENT 40
#Defina SM_PENWINDOWS 41
#Defina SM_DBCSENABLED 42
#Defina SM_CMOUSEBUTTONS 43

#Defina SM_CXFIXEDFRAME SM_CXDLGFRAME
#Defina SM_CYFIXEDFRAME SM_CYDLGFRAME
#Defina SM_CXSIZEFRAME SM_CXFRAME
#Defina SM_CYSIZEFRAME SM_CYFRAME

#Defina SM_SECURE 44
#Defina SM_CXEDGE 45
#Defina SM_CYEDGE 46
#Defina SM_CXMINSPACING 47
#Defina SM_CYMINSPACING 48
#Defina SM_CXSMICON 49
#Defina SM_CYSMICON 50
#Defina SM_CYSMCAPTION 51
#Defina SM_CXSMSIZE 52
#Defina SM_CYSMSIZE 53
#Defina SM_CXMENUSIZE 54
#Defina SM_CYMENUSIZE 55
#Defina SM_ARRANGE 56
#Defina SM_CXMINIMIZED 57
#Defina SM_CYMINIMIZED 58
#Defina SM_CXMAXTRACK 59
#Defina SM_CYMAXTRACK 60
#Defina SM_CXMAXIMIZED 61
#Defina SM_CYMAXIMIZED 62
#Defina SM_NETWORK 63
#Defina SM_CLEANBOOT 67
#Defina SM_CXDRAG 68
#Defina SM_CYDRAG 69
#Defina SM_SHOWSOUNDS 70
#Defina SM_CXMENUCHECK 71
#Defina SM_CYMENUCHECK 72
#Defina SM_SLOWMACHINE 73
#Defina SM_MIDEASTENABLED 74
#Defina SM_MOUSEWHEELPRESENT 75
#Defina SM_XVIRTUALSCREEN 76
#Defina SM_YVIRTUALSCREEN 77
#Defina SM_CXVIRTUALSCREEN 78
#Defina SM_CYVIRTUALSCREEN 79
#Defina SM_CMONITORS 80
#Defina SM_SAMEDISPLAYFORMAT 81
#Defina SM_IMMENABLED 82
#Defina SM_CXFOCUSBORDER 83
#Defina SM_CYFOCUSBORDER 84
#Defina SM_TABLETPC 86
#Defina SM_MEDIACENTER 87
#Defina SM_STARTER 88
#Defina SM_SERVERR2 89
#Defina SM_CMETRICS 90
#Defina SM_REMOTESESSION 0x1000
#Defina SM_SHUTTINGDOWN 0x2000
#Defina SM_REMOTECONTROL 0x2001
#Defina SM_CARETBLINKINGENABLED 0x2002

  WINUSERAPI Inteiro WINAPI GetSystemMetrics(Inteiro nIndex);
#FimSe

#SenãoDefinido NOMENUS

#SeDefinido UNICODE
#Defina LoadMenu LoadMenuW
#Defina LoadMenuIndirect LoadMenuIndirectW
#Defina ChangeMenu ChangeMenuW
#Defina GetMenuString GetMenuStringW
#Defina InsertMenu InsertMenuW
#Defina AppendMenu AppendMenuW
#Defina ModifyMenu ModifyMenuW
#Senão
#Defina LoadMenu LoadMenuA
#Defina LoadMenuIndirect LoadMenuIndirectA
#Defina ChangeMenu ChangeMenuA
#Defina GetMenuString GetMenuStringA
#Defina InsertMenu InsertMenuA
#Defina AppendMenu AppendMenuA
#Defina ModifyMenu ModifyMenuA
#FimSe

  WINUSERAPI HMENU WINAPI LoadMenuA(HINSTANCE hInstance,LPCSTR lpMenuName);
  WINUSERAPI HMENU WINAPI LoadMenuW(HINSTANCE hInstance,LPCWSTR lpMenuName);
  WINUSERAPI HMENU WINAPI LoadMenuIndirectA(CONST MENUTEMPLATEA *lpMenuTemplate);
  WINUSERAPI HMENU WINAPI LoadMenuIndirectW(CONST MENUTEMPLATEW *lpMenuTemplate);
  WINUSERAPI HMENU WINAPI GetMenu(HWND hWnd);
  WINUSERAPI WINBOOL WINAPI SetMenu(HWND hWnd,HMENU hMenu);
  WINUSERAPI WINBOOL WINAPI ChangeMenuA(HMENU hMenu,UINT cmd,LPCSTR lpszNewItem,UINT cmdInsert,UINT flags);
  WINUSERAPI WINBOOL WINAPI ChangeMenuW(HMENU hMenu,UINT cmd,LPCWSTR lpszNewItem,UINT cmdInsert,UINT flags);
  WINUSERAPI WINBOOL WINAPI HiliteMenuItem(HWND hWnd,HMENU hMenu,UINT uIDHiliteItem,UINT uHilite);
  WINUSERAPI Inteiro WINAPI GetMenuStringA(HMENU hMenu,UINT uIDItem,LPSTR lpString,Inteiro cchMax,UINT flags);
  WINUSERAPI Inteiro WINAPI GetMenuStringW(HMENU hMenu,UINT uIDItem,LPWSTR lpString,Inteiro cchMax,UINT flags);
  WINUSERAPI UINT WINAPI GetMenuState(HMENU hMenu,UINT uId,UINT uFlags);
  WINUSERAPI WINBOOL WINAPI DrawMenuBar(HWND hWnd);

#Defina PMB_ACTIVE 0x00000001

  WINUSERAPI HMENU WINAPI GetSystemMenu(HWND hWnd,WINBOOL bRevert);
  WINUSERAPI HMENU WINAPI CreateMenu(VOID);
  WINUSERAPI HMENU WINAPI CreatePopupMenu(VOID);
  WINUSERAPI WINBOOL WINAPI DestroyMenu(HMENU hMenu);
  WINUSERAPI DWORD WINAPI CheckMenuItem(HMENU hMenu,UINT uIDCheckItem,UINT uCheck);
  WINUSERAPI WINBOOL WINAPI EnableMenuItem(HMENU hMenu,UINT uIDEnableItem,UINT uEnable);
  WINUSERAPI HMENU WINAPI GetSubMenu(HMENU hMenu,Inteiro nPos);
  WINUSERAPI UINT WINAPI GetMenuItemID(HMENU hMenu,Inteiro nPos);
  WINUSERAPI Inteiro WINAPI GetMenuItemCount(HMENU hMenu);
  WINUSERAPI WINBOOL WINAPI InsertMenuA(HMENU hMenu,UINT uPosition,UINT uFlags,UINT_PTR uIDNewItem,LPCSTR lpNewItem);
  WINUSERAPI WINBOOL WINAPI InsertMenuW(HMENU hMenu,UINT uPosition,UINT uFlags,UINT_PTR uIDNewItem,LPCWSTR lpNewItem);
  WINUSERAPI WINBOOL WINAPI AppendMenuA(HMENU hMenu,UINT uFlags,UINT_PTR uIDNewItem,LPCSTR lpNewItem);
  WINUSERAPI WINBOOL WINAPI AppendMenuW(HMENU hMenu,UINT uFlags,UINT_PTR uIDNewItem,LPCWSTR lpNewItem);
  WINUSERAPI WINBOOL WINAPI ModifyMenuA(HMENU hMnu,UINT uPosition,UINT uFlags,UINT_PTR uIDNewItem,LPCSTR lpNewItem);
  WINUSERAPI WINBOOL WINAPI ModifyMenuW(HMENU hMnu,UINT uPosition,UINT uFlags,UINT_PTR uIDNewItem,LPCWSTR lpNewItem);
  WINUSERAPI WINBOOL WINAPI RemoveMenu(HMENU hMenu,UINT uPosition,UINT uFlags);
  WINUSERAPI WINBOOL WINAPI DeleteMenu(HMENU hMenu,UINT uPosition,UINT uFlags);
  WINUSERAPI WINBOOL WINAPI SetMenuItemBitmaps(HMENU hMenu,UINT uPosition,UINT uFlags,HBITMAP hBitmapUnchecked,HBITMAP hBitmapChecked);
  WINUSERAPI LONG WINAPI GetMenuCheckMarkDimensions(VOID);
  WINUSERAPI WINBOOL WINAPI TrackPopupMenu(HMENU hMenu,UINT uFlags,Inteiro x,Inteiro y,Inteiro nReserved,HWND hWnd,CONST RECT *prcRect);

#Defina MNC_IGNORE 0
#Defina MNC_CLOSE 1
#Defina MNC_EXECUTE 2
#Defina MNC_SELECT 3

  Tipo Estrutura tagTPMPARAMS {
    UINT cbSize;
    RECT rcExclude;
  } TPMPARAMS;

  Tipo TPMPARAMS *LPTPMPARAMS;

  WINUSERAPI WINBOOL WINAPI TrackPopupMenuEx(HMENU,UINT,Inteiro,Inteiro,HWND,LPTPMPARAMS);

#Defina MNS_NOCHECK 0x80000000
#Defina MNS_MODELESS 0x40000000
#Defina MNS_DRAGDROP 0x20000000
#Defina MNS_AUTODISMISS 0x10000000
#Defina MNS_NOTIFYBYPOS 0x08000000
#Defina MNS_CHECKORBMP 0x04000000

#Defina MIM_MAXHEIGHT 0x00000001
#Defina MIM_BACKGROUND 0x00000002
#Defina MIM_HELPID 0x00000004
#Defina MIM_MENUDATA 0x00000008
#Defina MIM_STYLE 0x00000010
#Defina MIM_APPLYTOSUBMENUS 0x80000000

  Tipo Estrutura tagMENUINFO {
    DWORD cbSize;
    DWORD fMask;
    DWORD dwStyle;
    UINT cyMax;
    HBRUSH hbrBack;
    DWORD dwContextHelpID;
    ULONG_PTR dwMenuData;
  } MENUINFO,*LPMENUINFO;

  Tipo MENUINFO CONST *LPCMENUINFO;

  WINUSERAPI WINBOOL WINAPI GetMenuInfo(HMENU,LPMENUINFO);
  WINUSERAPI WINBOOL WINAPI SetMenuInfo(HMENU,LPCMENUINFO);
  WINUSERAPI WINBOOL WINAPI EndMenu(VOID);

#Defina MND_CONTINUE 0
#Defina MND_ENDMENU 1

  Tipo Estrutura tagMENUGETOBJECTINFO {
    DWORD dwFlags;
    UINT uPos;
    HMENU hmenu;
    PVOID riid;
    PVOID pvObj;
  } MENUGETOBJECTINFO,*PMENUGETOBJECTINFO;

#Defina MNGOF_TOPGAP 0x00000001
#Defina MNGOF_BOTTOMGAP 0x00000002

#Defina MNGO_NOINTERFACE 0x00000000
#Defina MNGO_NOERROR 0x00000001

#Defina MIIM_STATE 0x00000001
#Defina MIIM_ID 0x00000002
#Defina MIIM_SUBMENU 0x00000004
#Defina MIIM_CHECKMARKS 0x00000008
#Defina MIIM_TYPE 0x00000010
#Defina MIIM_DATA 0x00000020

#Defina MIIM_STRING 0x00000040
#Defina MIIM_BITMAP 0x00000080
#Defina MIIM_FTYPE 0x00000100

#Defina HBMMENU_CALLBACK ((HBITMAP) -1)
#Defina HBMMENU_SYSTEM ((HBITMAP) 1)
#Defina HBMMENU_MBAR_RESTORE ((HBITMAP) 2)
#Defina HBMMENU_MBAR_MINIMIZE ((HBITMAP) 3)
#Defina HBMMENU_MBAR_CLOSE ((HBITMAP) 5)
#Defina HBMMENU_MBAR_CLOSE_D ((HBITMAP) 6)
#Defina HBMMENU_MBAR_MINIMIZE_D ((HBITMAP) 7)
#Defina HBMMENU_POPUP_CLOSE ((HBITMAP) 8)
#Defina HBMMENU_POPUP_RESTORE ((HBITMAP) 9)
#Defina HBMMENU_POPUP_MAXIMIZE ((HBITMAP) 10)
#Defina HBMMENU_POPUP_MINIMIZE ((HBITMAP) 11)

  Tipo Estrutura tagMENUITEMINFOA {
    UINT cbSize;
    UINT fMask;
    UINT fType;
    UINT fState;
    UINT wID;
    HMENU hSubMenu;
    HBITMAP hbmpChecked;
    HBITMAP hbmpUnchecked;
    ULONG_PTR dwItemData;
    LPSTR dwTypeData;
    UINT cch;
    HBITMAP hbmpItem;
  } MENUITEMINFOA,*LPMENUITEMINFOA;

  Tipo Estrutura tagMENUITEMINFOW {
    UINT cbSize;
    UINT fMask;
    UINT fType;
    UINT fState;
    UINT wID;
    HMENU hSubMenu;
    HBITMAP hbmpChecked;
    HBITMAP hbmpUnchecked;
    ULONG_PTR dwItemData;
    LPWSTR dwTypeData;
    UINT cch;
    HBITMAP hbmpItem;
  } MENUITEMINFOW,*LPMENUITEMINFOW;

#SeDefinido UNICODE
  Tipo MENUITEMINFOW MENUITEMINFO;
  Tipo LPMENUITEMINFOW LPMENUITEMINFO;
#Senão
  Tipo MENUITEMINFOA MENUITEMINFO;
  Tipo LPMENUITEMINFOA LPMENUITEMINFO;
#FimSe
  Tipo MENUITEMINFOA CONST *LPCMENUITEMINFOA;
  Tipo MENUITEMINFOW CONST *LPCMENUITEMINFOW;
#SeDefinido UNICODE
  Tipo LPCMENUITEMINFOW LPCMENUITEMINFO;
#Senão
  Tipo LPCMENUITEMINFOA LPCMENUITEMINFO;
#FimSe

#SeDefinido UNICODE
#Defina InsertMenuItem InsertMenuItemW
#Defina GetMenuItemInfo GetMenuItemInfoW
#Defina SetMenuItemInfo SetMenuItemInfoW
#Senão
#Defina InsertMenuItem InsertMenuItemA
#Defina GetMenuItemInfo GetMenuItemInfoA
#Defina SetMenuItemInfo SetMenuItemInfoA
#FimSe

  WINUSERAPI WINBOOL WINAPI InsertMenuItemA(HMENU hmenu,UINT item,WINBOOL fByPosition,LPCMENUITEMINFOA lpmi);
  WINUSERAPI WINBOOL WINAPI InsertMenuItemW(HMENU hmenu,UINT item,WINBOOL fByPosition,LPCMENUITEMINFOW lpmi);
  WINUSERAPI WINBOOL WINAPI GetMenuItemInfoA(HMENU hmenu,UINT item,WINBOOL fByPosition,LPMENUITEMINFOA lpmii);
  WINUSERAPI WINBOOL WINAPI GetMenuItemInfoW(HMENU hmenu,UINT item,WINBOOL fByPosition,LPMENUITEMINFOW lpmii);
  WINUSERAPI WINBOOL WINAPI SetMenuItemInfoA(HMENU hmenu,UINT item,WINBOOL fByPositon,LPCMENUITEMINFOA lpmii);
  WINUSERAPI WINBOOL WINAPI SetMenuItemInfoW(HMENU hmenu,UINT item,WINBOOL fByPositon,LPCMENUITEMINFOW lpmii);

#Defina GMDI_USEDISABLED 0x0001L
#Defina GMDI_GOINTOPOPUPS 0x0002L

  WINUSERAPI UINT WINAPI GetMenuDefaultItem(HMENU hMenu,UINT fByPos,UINT gmdiFlags);
  WINUSERAPI WINBOOL WINAPI SetMenuDefaultItem(HMENU hMenu,UINT uItem,UINT fByPos);
  WINUSERAPI WINBOOL WINAPI GetMenuItemRect(HWND hWnd,HMENU hMenu,UINT uItem,LPRECT lprcItem);
  WINUSERAPI Inteiro WINAPI MenuItemFromPoint(HWND hWnd,HMENU hMenu,POINT ptScreen);

#Defina TPM_LEFTBUTTON 0x0000L
#Defina TPM_RIGHTBUTTON 0x0002L
#Defina TPM_LEFTALIGN 0x0000L
#Defina TPM_CENTERALIGN 0x0004L
#Defina TPM_RIGHTALIGN 0x0008L
#Defina TPM_TOPALIGN 0x0000L
#Defina TPM_VCENTERALIGN 0x0010L
#Defina TPM_BOTTOMALIGN 0x0020L

#Defina TPM_HORIZONTAL 0x0000L
#Defina TPM_VERTICAL 0x0040L
#Defina TPM_NONOTIFY 0x0080L
#Defina TPM_RETURNCMD 0x0100L
#Defina TPM_RECURSE 0x0001L
#Defina TPM_HORPOSANIMATION 0x0400L
#Defina TPM_HORNEGANIMATION 0x0800L
#Defina TPM_VERPOSANIMATION 0x1000L
#Defina TPM_VERNEGANIMATION 0x2000L
#Defina TPM_NOANIMATION 0x4000L
#Defina TPM_LAYOUTRTL 0x8000L
#FimSe

  Tipo Estrutura tagDROPSTRUCT {
    HWND hwndSource;
    HWND hwndSink;
    DWORD wFmt;
    ULONG_PTR dwData;
    POINT ptDrop;
    DWORD dwControlData;
  } DROPSTRUCT,*PDROPSTRUCT,*LPDROPSTRUCT;

#Defina DOF_EXECUTABLE 0x8001
#Defina DOF_DOCUMENT 0x8002
#Defina DOF_DIRECTORY 0x8003
#Defina DOF_MULTIPLE 0x8004
#Defina DOF_PROGMAN 0x0001
#Defina DOF_SHELLDATA 0x0002

#Defina DO_DROPFILE 0x454C4946L
#Defina DO_PRINTFILE 0x544E5250L

  WINUSERAPI DWORD WINAPI DragObject(HWND hwndParent,HWND hwndFrom,UINT fmt,ULONG_PTR data,HCURSOR hcur);
  WINUSERAPI WINBOOL WINAPI DragDetect(HWND hwnd,POINT pt);
  WINUSERAPI WINBOOL WINAPI DrawIcon(HDC hDC,Inteiro X,Inteiro Y,HICON hIcon);

#SenãoDefinido NODRAWTEXT

#Defina DT_TOP 0x00000000
#Defina DT_LEFT 0x00000000
#Defina DT_CENTER 0x00000001
#Defina DT_RIGHT 0x00000002
#Defina DT_VCENTER 0x00000004
#Defina DT_BOTTOM 0x00000008
#Defina DT_WORDBREAK 0x00000010
#Defina DT_SINGLELINE 0x00000020
#Defina DT_EXPANDTABS 0x00000040
#Defina DT_TABSTOP 0x00000080
#Defina DT_NOCLIP 0x00000100
#Defina DT_EXTERNALLEADING 0x00000200
#Defina DT_CALCRECT 0x00000400
#Defina DT_NOPREFIX 0x00000800
#Defina DT_INTERNAL 0x00001000

#Defina DT_EDITCONTROL 0x00002000
#Defina DT_PATH_ELLIPSIS 0x00004000
#Defina DT_END_ELLIPSIS 0x00008000
#Defina DT_MODIFYSTRING 0x00010000
#Defina DT_RTLREADING 0x00020000
#Defina DT_WORD_ELLIPSIS 0x00040000
#Defina DT_NOFULLWIDTHCHARBREAK 0x00080000
#Defina DT_HIDEPREFIX 0x00100000
#Defina DT_PREFIXONLY 0x00200000

  Tipo Estrutura tagDRAWTEXTPARAMS {
    UINT cbSize;
    Inteiro iTabLength;
    Inteiro iLeftMargin;
    Inteiro iRightMargin;
    UINT uiLengthDrawn;
  } DRAWTEXTPARAMS,*LPDRAWTEXTPARAMS;

#SeDefinido UNICODE
#Defina DrawText DrawTextW
#Defina DrawTextEx DrawTextExW
#Senão
#Defina DrawText DrawTextA
#Defina DrawTextEx DrawTextExA
#FimSe

  WINUSERAPI Inteiro WINAPI DrawTextA(HDC hdc,LPCSTR lpchText,Inteiro cchText,LPRECT lprc,UINT format);
  WINUSERAPI Inteiro WINAPI DrawTextW(HDC hdc,LPCWSTR lpchText,Inteiro cchText,LPRECT lprc,UINT format);
  WINUSERAPI Inteiro WINAPI DrawTextExA(HDC hdc,LPSTR lpchText,Inteiro cchText,LPRECT lprc,UINT format,LPDRAWTEXTPARAMS lpdtp);
  WINUSERAPI Inteiro WINAPI DrawTextExW(HDC hdc,LPWSTR lpchText,Inteiro cchText,LPRECT lprc,UINT format,LPDRAWTEXTPARAMS lpdtp);
#FimSe

#SeDefinido UNICODE
#Defina GrayString GrayStringW
#Defina DrawState DrawStateW
#Defina TabbedTextOut TabbedTextOutW
#Defina GetTabbedTextExtent GetTabbedTextExtentW
#Senão
#Defina GrayString GrayStringA
#Defina DrawState DrawStateA
#Defina TabbedTextOut TabbedTextOutA
#Defina GetTabbedTextExtent GetTabbedTextExtentA
#FimSe

  WINUSERAPI WINBOOL WINAPI GrayStringA(HDC hDC,HBRUSH hBrush,GRAYSTRINGPROC lpOutputFunc,LPARAM lpData,Inteiro nCount,Inteiro X,Inteiro Y,Inteiro nWidth,Inteiro nHeight);
  WINUSERAPI WINBOOL WINAPI GrayStringW(HDC hDC,HBRUSH hBrush,GRAYSTRINGPROC lpOutputFunc,LPARAM lpData,Inteiro nCount,Inteiro X,Inteiro Y,Inteiro nWidth,Inteiro nHeight);

#Defina DST_COMPLEX 0x0000
#Defina DST_TEXT 0x0001
#Defina DST_PREFIXTEXT 0x0002
#Defina DST_ICON 0x0003
#Defina DST_BITMAP 0x0004

#Defina DSS_NORMAL 0x0000
#Defina DSS_UNION 0x0010
#Defina DSS_DISABLED 0x0020
#Defina DSS_MONO 0x0080
#Defina DSS_HIDEPREFIX 0x0200
#Defina DSS_PREFIXONLY 0x0400
#Defina DSS_RIGHT 0x8000

  WINUSERAPI WINBOOL WINAPI DrawStateA(HDC hdc,HBRUSH hbrFore,DRAWSTATEPROC qfnCallBack,LPARAM lData,WPARAM wData,Inteiro x,Inteiro y,Inteiro cx,Inteiro cy,UINT uFlags);
  WINUSERAPI WINBOOL WINAPI DrawStateW(HDC hdc,HBRUSH hbrFore,DRAWSTATEPROC qfnCallBack,LPARAM lData,WPARAM wData,Inteiro x,Inteiro y,Inteiro cx,Inteiro cy,UINT uFlags);
  WINUSERAPI LONG WINAPI TabbedTextOutA(HDC hdc,Inteiro x,Inteiro y,LPCSTR lpString,Inteiro chCount,Inteiro nTabPositions,CONST INT *lpnTabStopPositions,Inteiro nTabOrigin);
  WINUSERAPI LONG WINAPI TabbedTextOutW(HDC hdc,Inteiro x,Inteiro y,LPCWSTR lpString,Inteiro chCount,Inteiro nTabPositions,CONST INT *lpnTabStopPositions,Inteiro nTabOrigin);
  WINUSERAPI DWORD WINAPI GetTabbedTextExtentA(HDC hdc,LPCSTR lpString,Inteiro chCount,Inteiro nTabPositions,CONST INT *lpnTabStopPositions);
  WINUSERAPI DWORD WINAPI GetTabbedTextExtentW(HDC hdc,LPCWSTR lpString,Inteiro chCount,Inteiro nTabPositions,CONST INT *lpnTabStopPositions);
  WINUSERAPI WINBOOL WINAPI UpdateWindow(HWND hWnd);
  WINUSERAPI HWND WINAPI SetActiveWindow(HWND hWnd);
  WINUSERAPI HWND WINAPI GetForegroundWindow(VOID);
  WINUSERAPI WINBOOL WINAPI PaintDesktop(HDC hdc);
  WINUSERAPI VOID WINAPI SwitchToThisWindow(HWND hwnd,WINBOOL fUnknown);
  WINUSERAPI WINBOOL WINAPI SetForegroundWindow(HWND hWnd);
  WINUSERAPI WINBOOL WINAPI AllowSetForegroundWindow(DWORD dwProcessId);

#Defina ASFW_ANY ((DWORD)-1)

  WINUSERAPI WINBOOL WINAPI LockSetForegroundWindow(UINT uLockCode);

#Defina LSFW_LOCK 1
#Defina LSFW_UNLOCK 2

  WINUSERAPI HWND WINAPI WindowFromDC(HDC hDC);
  WINUSERAPI HDC WINAPI GetDC(HWND hWnd);
  WINUSERAPI HDC WINAPI GetDCEx(HWND hWnd,HRGN hrgnClip,DWORD flags);

#Defina DCX_WINDOW 0x00000001L
#Defina DCX_CACHE 0x00000002L
#Defina DCX_NORESETATTRS 0x00000004L
#Defina DCX_CLIPCHILDREN 0x00000008L
#Defina DCX_CLIPSIBLINGS 0x00000010L
#Defina DCX_PARENTCLIP 0x00000020L
#Defina DCX_EXCLUDERGN 0x00000040L
#Defina DCX_INTERSECTRGN 0x00000080L
#Defina DCX_EXCLUDEUPDATE 0x00000100L
#Defina DCX_INTERSECTUPDATE 0x00000200L
#Defina DCX_LOCKWINDOWUPDATE 0x00000400L

#Defina DCX_VALIDATE 0x00200000L

  WINUSERAPI HDC WINAPI GetWindowDC(HWND hWnd);
  WINUSERAPI Inteiro WINAPI ReleaseDC(HWND hWnd,HDC hDC);
  WINUSERAPI HDC WINAPI BeginPaint(HWND hWnd,LPPAINTSTRUCT lpPaint);
  WINUSERAPI WINBOOL WINAPI EndPaint(HWND hWnd,CONST PAINTSTRUCT *lpPaint);
  WINUSERAPI WINBOOL WINAPI GetUpdateRect(HWND hWnd,LPRECT lpRect,WINBOOL bErase);
  WINUSERAPI Inteiro WINAPI GetUpdateRgn(HWND hWnd,HRGN hRgn,WINBOOL bErase);
  WINUSERAPI Inteiro WINAPI SetWindowRgn(HWND hWnd,HRGN hRgn,WINBOOL bRedraw);
  WINUSERAPI Inteiro WINAPI GetWindowRgn(HWND hWnd,HRGN hRgn);
  WINUSERAPI Inteiro WINAPI GetWindowRgnBox(HWND hWnd,LPRECT lprc);
  WINUSERAPI Inteiro WINAPI ExcludeUpdateRgn(HDC hDC,HWND hWnd);
  WINUSERAPI WINBOOL WINAPI InvalidateRect(HWND hWnd,CONST RECT *lpRect,WINBOOL bErase);
  WINUSERAPI WINBOOL WINAPI ValidateRect(HWND hWnd,CONST RECT *lpRect);
  WINUSERAPI WINBOOL WINAPI InvalidateRgn(HWND hWnd,HRGN hRgn,WINBOOL bErase);
  WINUSERAPI WINBOOL WINAPI ValidateRgn(HWND hWnd,HRGN hRgn);
  WINUSERAPI WINBOOL WINAPI RedrawWindow(HWND hWnd,CONST RECT *lprcUpdate,HRGN hrgnUpdate,UINT flags);

#Defina RDW_INVALIDATE 0x0001
#Defina RDW_INTERNALPAINT 0x0002
#Defina RDW_ERASE 0x0004

#Defina RDW_VALIDATE 0x0008
#Defina RDW_NOINTERNALPAINT 0x0010
#Defina RDW_NOERASE 0x0020

#Defina RDW_NOCHILDREN 0x0040
#Defina RDW_ALLCHILDREN 0x0080

#Defina RDW_UPDATENOW 0x0100
#Defina RDW_ERASENOW 0x0200

#Defina RDW_FRAME 0x0400
#Defina RDW_NOFRAME 0x0800

  WINUSERAPI WINBOOL WINAPI LockWindowUpdate(HWND hWndLock);
  WINUSERAPI WINBOOL WINAPI ScrollWindow(HWND hWnd,Inteiro XAmount,Inteiro YAmount,CONST RECT *lpRect,CONST RECT *lpClipRect);
  WINUSERAPI WINBOOL WINAPI ScrollDC(HDC hDC,Inteiro dx,Inteiro dy,CONST RECT *lprcScroll,CONST RECT *lprcClip,HRGN hrgnUpdate,LPRECT lprcUpdate);
  WINUSERAPI Inteiro WINAPI ScrollWindowEx(HWND hWnd,Inteiro dx,Inteiro dy,CONST RECT *prcScroll,CONST RECT *prcClip,HRGN hrgnUpdate,LPRECT prcUpdate,UINT flags);

#Defina SW_SCROLLCHILDREN 0x0001
#Defina SW_INVALIDATE 0x0002
#Defina SW_ERASE 0x0004
#Defina SW_SMOOTHSCROLL 0x0010

#SenãoDefinido NOSCROLL
  WINUSERAPI Inteiro WINAPI SetScrollPos(HWND hWnd,Inteiro nBar,Inteiro nPos,WINBOOL bRedraw);
  WINUSERAPI Inteiro WINAPI GetScrollPos(HWND hWnd,Inteiro nBar);
  WINUSERAPI WINBOOL WINAPI SetScrollRange(HWND hWnd,Inteiro nBar,Inteiro nMinPos,Inteiro nMaxPos,WINBOOL bRedraw);
  WINUSERAPI WINBOOL WINAPI GetScrollRange(HWND hWnd,Inteiro nBar,LPINT lpMinPos,LPINT lpMaxPos);
  WINUSERAPI WINBOOL WINAPI ShowScrollBar(HWND hWnd,Inteiro wBar,WINBOOL bShow);
  WINUSERAPI WINBOOL WINAPI EnableScrollBar(HWND hWnd,UINT wSBflags,UINT wArrows);

#Defina ESB_ENABLE_BOTH 0x0000
#Defina ESB_DISABLE_BOTH 0x0003

#Defina ESB_DISABLE_LEFT 0x0001
#Defina ESB_DISABLE_RIGHT 0x0002

#Defina ESB_DISABLE_UP 0x0001
#Defina ESB_DISABLE_DOWN 0x0002

#Defina ESB_DISABLE_LTUP ESB_DISABLE_LEFT
#Defina ESB_DISABLE_RTDN ESB_DISABLE_RIGHT
#FimSe

#SeDefinido UNICODE
#Defina SetProp SetPropW
#Defina GetProp GetPropW
#Defina RemoveProp RemovePropW
#Defina EnumPropsEx EnumPropsExW
#Defina EnumProps EnumPropsW
#Defina SetWindowText SetWindowTextW
#Defina GetWindowText GetWindowTextW
#Defina GetWindowTextLength GetWindowTextLengthW
#Senão
#Defina SetProp SetPropA
#Defina GetProp GetPropA
#Defina RemoveProp RemovePropA
#Defina EnumPropsEx EnumPropsExA
#Defina EnumProps EnumPropsA
#Defina SetWindowText SetWindowTextA
#Defina GetWindowText GetWindowTextA
#Defina GetWindowTextLength GetWindowTextLengthA
#FimSe

  WINUSERAPI WINBOOL WINAPI SetPropA(HWND hWnd,LPCSTR lpString,HANDLE hData);
  WINUSERAPI WINBOOL WINAPI SetPropW(HWND hWnd,LPCWSTR lpString,HANDLE hData);
  WINUSERAPI HANDLE WINAPI GetPropA(HWND hWnd,LPCSTR lpString);
  WINUSERAPI HANDLE WINAPI GetPropW(HWND hWnd,LPCWSTR lpString);
  WINUSERAPI HANDLE WINAPI RemovePropA(HWND hWnd,LPCSTR lpString);
  WINUSERAPI HANDLE WINAPI RemovePropW(HWND hWnd,LPCWSTR lpString);
  WINUSERAPI Inteiro WINAPI EnumPropsExA(HWND hWnd,PROPENUMPROCEXA lpEnumFunc,LPARAM lParam);
  WINUSERAPI Inteiro WINAPI EnumPropsExW(HWND hWnd,PROPENUMPROCEXW lpEnumFunc,LPARAM lParam);
  WINUSERAPI Inteiro WINAPI EnumPropsA(HWND hWnd,PROPENUMPROCA lpEnumFunc);
  WINUSERAPI Inteiro WINAPI EnumPropsW(HWND hWnd,PROPENUMPROCW lpEnumFunc);
  WINUSERAPI WINBOOL WINAPI SetWindowTextA(HWND hWnd,LPCSTR lpString);
  WINUSERAPI WINBOOL WINAPI SetWindowTextW(HWND hWnd,LPCWSTR lpString);
  WINUSERAPI Inteiro WINAPI GetWindowTextA(HWND hWnd,LPSTR lpString,Inteiro nMaxCount);
  WINUSERAPI Inteiro WINAPI GetWindowTextW(HWND hWnd,LPWSTR lpString,Inteiro nMaxCount);
  WINUSERAPI Inteiro WINAPI GetWindowTextLengthA(HWND hWnd);
  WINUSERAPI Inteiro WINAPI GetWindowTextLengthW(HWND hWnd);
  WINUSERAPI WINBOOL WINAPI GetClientRect(HWND hWnd,LPRECT lpRect);
  WINUSERAPI WINBOOL WINAPI GetWindowRect(HWND hWnd,LPRECT lpRect);
  WINUSERAPI WINBOOL WINAPI AdjustWindowRect(LPRECT lpRect,DWORD dwStyle,WINBOOL bMenu);
  WINUSERAPI WINBOOL WINAPI AdjustWindowRectEx(LPRECT lpRect,DWORD dwStyle,WINBOOL bMenu,DWORD dwExStyle);

#Defina HELPINFO_WINDOW 0x0001
#Defina HELPINFO_MENUITEM 0x0002

  Tipo Estrutura tagHELPINFO {
    UINT cbSize;
    Inteiro iContextType;
    Inteiro iCtrlId;
    HANDLE hItemHandle;
    DWORD_PTR dwContextId;
    POINT MousePos;
  } HELPINFO,*LPHELPINFO;

  WINUSERAPI WINBOOL WINAPI SetWindowContextHelpId(HWND,DWORD);
  WINUSERAPI DWORD WINAPI GetWindowContextHelpId(HWND);
  WINUSERAPI WINBOOL WINAPI SetMenuContextHelpId(HMENU,DWORD);
  WINUSERAPI DWORD WINAPI GetMenuContextHelpId(HMENU);

#SenãoDefinido NOMB

#Defina MB_OK 0x00000000L
#Defina MB_OKCANCEL 0x00000001L
#Defina MB_ABORTRETRYIGNORE 0x00000002L
#Defina MB_YESNOCANCEL 0x00000003L
#Defina MB_YESNO 0x00000004L
#Defina MB_RETRYCANCEL 0x00000005L
#Defina MB_CANCELTRYCONTINUE 0x00000006L
#Defina MB_ICONHAND 0x00000010L
#Defina MB_ICONQUESTION 0x00000020L
#Defina MB_ICONEXCLAMATION 0x00000030L
#Defina MB_ICONASTERISK 0x00000040L
#Defina MB_USERICON 0x00000080L
#Defina MB_ICONWARNING MB_ICONEXCLAMATION
#Defina MB_ICONERROR MB_ICONHAND
#Defina MB_ICONINFORMATION MB_ICONASTERISK
#Defina MB_ICONSTOP MB_ICONHAND
#Defina MB_DEFBUTTON1 0x00000000L
#Defina MB_DEFBUTTON2 0x00000100L
#Defina MB_DEFBUTTON3 0x00000200L
#Defina MB_DEFBUTTON4 0x00000300L
#Defina MB_APPLMODAL 0x00000000L
#Defina MB_SYSTEMMODAL 0x00001000L
#Defina MB_TASKMODAL 0x00002000L
#Defina MB_HELP 0x00004000L
#Defina MB_NOFOCUS 0x00008000L
#Defina MB_SETFOREGROUND 0x00010000L
#Defina MB_DEFAULT_DESKTOP_ONLY 0x00020000L
#Defina MB_TOPMOST 0x00040000L
#Defina MB_RIGHT 0x00080000L
#Defina MB_RTLREADING 0x00100000L
#Defina MB_SERVICE_NOTIFICATION 0x00200000L
#Defina MB_SERVICE_NOTIFICATION_NT3X 0x00040000L
#Defina MB_TYPEMASK 0x0000000FL
#Defina MB_ICONMASK 0x000000F0L
#Defina MB_DEFMASK 0x00000F00L
#Defina MB_MODEMASK 0x00003000L
#Defina MB_MISCMASK 0x0000C000L

#SeDefinido UNICODE
#Defina MessageBox MessageBoxW
#Defina MessageBoxEx MessageBoxExW
#Senão
#Defina MessageBox MessageBoxA
#Defina MessageBoxEx MessageBoxExA
#FimSe

  WINUSERAPI Inteiro WINAPI MessageBoxA(HWND hWnd,LPCSTR lpText,LPCSTR lpCaption,UINT uType);
  WINUSERAPI Inteiro WINAPI MessageBoxW(HWND hWnd,LPCWSTR lpText,LPCWSTR lpCaption,UINT uType);
  WINUSERAPI Inteiro WINAPI MessageBoxExA(HWND hWnd,LPCSTR lpText,LPCSTR lpCaption,UINT uType,WORD wLanguageId);
  WINUSERAPI Inteiro WINAPI MessageBoxExW(HWND hWnd,LPCWSTR lpText,LPCWSTR lpCaption,UINT uType,WORD wLanguageId);

  Tipo VOID (CALLBACK *MSGBOXCALLBACK)(LPHELPINFO lpHelpInfo);

  Tipo Estrutura tagMSGBOXPARAMSA {
    UINT cbSize;
    HWND hwndOwner;
    HINSTANCE hInstance;
    LPCSTR lpszText;
    LPCSTR lpszCaption;
    DWORD dwStyle;
    LPCSTR lpszIcon;
    DWORD_PTR dwContextHelpId;
    MSGBOXCALLBACK lpfnMsgBoxCallback;
    DWORD dwLanguageId;
  } MSGBOXPARAMSA,*PMSGBOXPARAMSA,*LPMSGBOXPARAMSA;

  Tipo Estrutura tagMSGBOXPARAMSW {
    UINT cbSize;
    HWND hwndOwner;
    HINSTANCE hInstance;
    LPCWSTR lpszText;
    LPCWSTR lpszCaption;
    DWORD dwStyle;
    LPCWSTR lpszIcon;
    DWORD_PTR dwContextHelpId;
    MSGBOXCALLBACK lpfnMsgBoxCallback;
    DWORD dwLanguageId;
  } MSGBOXPARAMSW,*PMSGBOXPARAMSW,*LPMSGBOXPARAMSW;

#SeDefinido UNICODE
  Tipo MSGBOXPARAMSW MSGBOXPARAMS;
  Tipo PMSGBOXPARAMSW PMSGBOXPARAMS;
  Tipo LPMSGBOXPARAMSW LPMSGBOXPARAMS;
#Senão
  Tipo MSGBOXPARAMSA MSGBOXPARAMS;
  Tipo PMSGBOXPARAMSA PMSGBOXPARAMS;
  Tipo LPMSGBOXPARAMSA LPMSGBOXPARAMS;
#FimSe

#SeDefinido UNICODE
#Defina MessageBoxIndirect MessageBoxIndirectW
#Senão
#Defina MessageBoxIndirect MessageBoxIndirectA
#FimSe

  WINUSERAPI Inteiro WINAPI MessageBoxIndirectA(CONST MSGBOXPARAMSA *lpmbp);
  WINUSERAPI Inteiro WINAPI MessageBoxIndirectW(CONST MSGBOXPARAMSW *lpmbp);
  WINUSERAPI WINBOOL WINAPI MessageBeep(UINT uType);
#FimSe

  WINUSERAPI Inteiro WINAPI ShowCursor(WINBOOL bShow);
  WINUSERAPI WINBOOL WINAPI SetCursorPos(Inteiro X,Inteiro Y);
  WINUSERAPI HCURSOR WINAPI SetCursor(HCURSOR hCursor);
  WINUSERAPI WINBOOL WINAPI GetCursorPos(LPPOINT lpPoint);
  WINUSERAPI WINBOOL WINAPI ClipCursor(CONST RECT *lpRect);
  WINUSERAPI WINBOOL WINAPI GetClipCursor(LPRECT lpRect);
  WINUSERAPI HCURSOR WINAPI GetCursor(VOID);
  WINUSERAPI WINBOOL WINAPI CreateCaret(HWND hWnd,HBITMAP hBitmap,Inteiro nWidth,Inteiro nHeight);
  WINUSERAPI UINT WINAPI GetCaretBlinkTime(VOID);
  WINUSERAPI WINBOOL WINAPI SetCaretBlinkTime(UINT uMSeconds);
  WINUSERAPI WINBOOL WINAPI DestroyCaret(VOID);
  WINUSERAPI WINBOOL WINAPI HideCaret(HWND hWnd);
  WINUSERAPI WINBOOL WINAPI ShowCaret(HWND hWnd);
  WINUSERAPI WINBOOL WINAPI SetCaretPos(Inteiro X,Inteiro Y);
  WINUSERAPI WINBOOL WINAPI GetCaretPos(LPPOINT lpPoint);
  WINUSERAPI WINBOOL WINAPI ClientToScreen(HWND hWnd,LPPOINT lpPoint);
  WINUSERAPI WINBOOL WINAPI ScreenToClient(HWND hWnd,LPPOINT lpPoint);
  WINUSERAPI Inteiro WINAPI MapWindowPoints(HWND hWndFrom,HWND hWndTo,LPPOINT lpPoints,UINT cPoints);
  WINUSERAPI HWND WINAPI WindowFromPoint(POINT Point);
  WINUSERAPI HWND WINAPI ChildWindowFromPoint(HWND hWndParent,POINT Point);

#Defina CWP_ALL 0x0000
#Defina CWP_SKIPINVISIBLE 0x0001
#Defina CWP_SKIPDISABLED 0x0002
#Defina CWP_SKIPTRANSPARENT 0x0004

  WINUSERAPI HWND WINAPI ChildWindowFromPointEx(HWND hwnd,POINT pt,UINT flags);

#SenãoDefinido NOCOLOR

#Defina CTLCOLOR_MSGBOX 0
#Defina CTLCOLOR_EDIT 1
#Defina CTLCOLOR_LISTBOX 2
#Defina CTLCOLOR_BTN 3
#Defina CTLCOLOR_DLG 4
#Defina CTLCOLOR_SCROLLBAR 5
#Defina CTLCOLOR_STATIC 6
#Defina CTLCOLOR_MAX 7

#Defina COLOR_SCROLLBAR 0
#Defina COLOR_BACKGROUND 1
#Defina COLOR_ACTIVECAPTION 2
#Defina COLOR_INACTIVECAPTION 3
#Defina COLOR_MENU 4
#Defina COLOR_WINDOW 5
#Defina COLOR_WINDOWFRAME 6
#Defina COLOR_MENUTEXT 7
#Defina COLOR_WINDOWTEXT 8
#Defina COLOR_CAPTIONTEXT 9
#Defina COLOR_ACTIVEBORDER 10
#Defina COLOR_INACTIVEBORDER 11
#Defina COLOR_APPWORKSPACE 12
#Defina COLOR_HIGHLIGHT 13
#Defina COLOR_HIGHLIGHTTEXT 14
#Defina COLOR_BTNFACE 15
#Defina COLOR_BTNSHADOW 16
#Defina COLOR_GRAYTEXT 17
#Defina COLOR_BTNTEXT 18
#Defina COLOR_INACTIVECAPTIONTEXT 19
#Defina COLOR_BTNHIGHLIGHT 20

#Defina COLOR_3DDKSHADOW 21
#Defina COLOR_3DLIGHT 22
#Defina COLOR_INFOTEXT 23
#Defina COLOR_INFOBK 24

#Defina COLOR_HOTLIGHT 26
#Defina COLOR_GRADIENTACTIVECAPTION 27
#Defina COLOR_GRADIENTINACTIVECAPTION 28
#Defina COLOR_MENUHILIGHT 29
#Defina COLOR_MENUBAR 30

#Defina COLOR_DESKTOP COLOR_BACKGROUND
#Defina COLOR_3DFACE COLOR_BTNFACE
#Defina COLOR_3DSHADOW COLOR_BTNSHADOW
#Defina COLOR_3DHIGHLIGHT COLOR_BTNHIGHLIGHT
#Defina COLOR_3DHILIGHT COLOR_BTNHIGHLIGHT
#Defina COLOR_BTNHILIGHT COLOR_BTNHIGHLIGHT

  WINUSERAPI DWORD WINAPI GetSysColor(Inteiro nIndex);
  WINUSERAPI HBRUSH WINAPI GetSysColorBrush(Inteiro nIndex);
  WINUSERAPI WINBOOL WINAPI SetSysColors(Inteiro cElements,CONST INT *lpaElements,CONST COLORREF *lpaRgbValues);
#FimSe

  WINUSERAPI WINBOOL WINAPI DrawFocusRect(HDC hDC,CONST RECT *lprc);
  WINUSERAPI Inteiro WINAPI FillRect(HDC hDC,CONST RECT *lprc,HBRUSH hbr);
  WINUSERAPI Inteiro WINAPI FrameRect(HDC hDC,CONST RECT *lprc,HBRUSH hbr);
  WINUSERAPI WINBOOL WINAPI InvertRect(HDC hDC,CONST RECT *lprc);
  WINUSERAPI WINBOOL WINAPI SetRect(LPRECT lprc,Inteiro xLeft,Inteiro yTop,Inteiro xRight,Inteiro yBottom);
  WINUSERAPI WINBOOL WINAPI SetRectEmpty(LPRECT lprc);
  WINUSERAPI WINBOOL WINAPI CopyRect(LPRECT lprcDst,CONST RECT *lprcSrc);
  WINUSERAPI WINBOOL WINAPI InflateRect(LPRECT lprc,Inteiro dx,Inteiro dy);
  WINUSERAPI WINBOOL WINAPI IntersectRect(LPRECT lprcDst,CONST RECT *lprcSrc1,CONST RECT *lprcSrc2);
  WINUSERAPI WINBOOL WINAPI UnionRect(LPRECT lprcDst,CONST RECT *lprcSrc1,CONST RECT *lprcSrc2);
  WINUSERAPI WINBOOL WINAPI SubtractRect(LPRECT lprcDst,CONST RECT *lprcSrc1,CONST RECT *lprcSrc2);
  WINUSERAPI WINBOOL WINAPI OffsetRect(LPRECT lprc,Inteiro dx,Inteiro dy);
  WINUSERAPI WINBOOL WINAPI IsRectEmpty(CONST RECT *lprc);
  WINUSERAPI WINBOOL WINAPI EqualRect(CONST RECT *lprc1,CONST RECT *lprc2);
  WINUSERAPI WINBOOL WINAPI PtInRect(CONST RECT *lprc,POINT pt);

#SenãoDefinido NOWINOFFSETS

#SeDefinido UNICODE
#Defina GetWindowLong GetWindowLongW
#Defina SetWindowLong SetWindowLongW
#Senão
#Defina GetWindowLong GetWindowLongA
#Defina SetWindowLong SetWindowLongA
#FimSe

  WINUSERAPI WORD WINAPI GetWindowWord(HWND hWnd,Inteiro nIndex);
  WINUSERAPI WORD WINAPI SetWindowWord(HWND hWnd,Inteiro nIndex,WORD wNewWord);
  WINUSERAPI LONG WINAPI GetWindowLongA(HWND hWnd,Inteiro nIndex);
  WINUSERAPI LONG WINAPI GetWindowLongW(HWND hWnd,Inteiro nIndex);
  WINUSERAPI LONG WINAPI SetWindowLongA(HWND hWnd,Inteiro nIndex,LONG dwNewLong);
  WINUSERAPI LONG WINAPI SetWindowLongW(HWND hWnd,Inteiro nIndex,LONG dwNewLong);

#SeDefinido _WIN64

#SeDefinido UNICODE
#Defina GetWindowLongPtr GetWindowLongPtrW
#Defina SetWindowLongPtr SetWindowLongPtrW
#Senão
#Defina GetWindowLongPtr GetWindowLongPtrA
#Defina SetWindowLongPtr SetWindowLongPtrA
#FimSe

  WINUSERAPI LONG_PTR WINAPI GetWindowLongPtrA(HWND hWnd,Inteiro nIndex);
  WINUSERAPI LONG_PTR WINAPI GetWindowLongPtrW(HWND hWnd,Inteiro nIndex);
  WINUSERAPI LONG_PTR WINAPI SetWindowLongPtrA(HWND hWnd,Inteiro nIndex,LONG_PTR dwNewLong);
  WINUSERAPI LONG_PTR WINAPI SetWindowLongPtrW(HWND hWnd,Inteiro nIndex,LONG_PTR dwNewLong);
#Senão

#SeDefinido UNICODE
#Defina GetWindowLongPtr GetWindowLongPtrW
#Defina SetWindowLongPtr SetWindowLongPtrW
#Senão
#Defina GetWindowLongPtr GetWindowLongPtrA
#Defina SetWindowLongPtr SetWindowLongPtrA
#FimSe

#Defina GetWindowLongPtrA GetWindowLongA
#Defina GetWindowLongPtrW GetWindowLongW
#Defina SetWindowLongPtrA SetWindowLongA
#Defina SetWindowLongPtrW SetWindowLongW
#FimSe

#SeDefinido UNICODE
#Defina GetClassLong GetClassLongW
#Defina SetClassLong SetClassLongW
#Senão
#Defina GetClassLong GetClassLongA
#Defina SetClassLong SetClassLongA
#FimSe

  WINUSERAPI WORD WINAPI GetClassWord(HWND hWnd,Inteiro nIndex);
  WINUSERAPI WORD WINAPI SetClassWord(HWND hWnd,Inteiro nIndex,WORD wNewWord);
  WINUSERAPI DWORD WINAPI GetClassLongA(HWND hWnd,Inteiro nIndex);
  WINUSERAPI DWORD WINAPI GetClassLongW(HWND hWnd,Inteiro nIndex);
  WINUSERAPI DWORD WINAPI SetClassLongA(HWND hWnd,Inteiro nIndex,LONG dwNewLong);
  WINUSERAPI DWORD WINAPI SetClassLongW(HWND hWnd,Inteiro nIndex,LONG dwNewLong);

#SeDefinido _WIN64

#SeDefinido UNICODE
#Defina GetClassLongPtr GetClassLongPtrW
#Defina SetClassLongPtr SetClassLongPtrW
#Senão
#Defina GetClassLongPtr GetClassLongPtrA
#Defina SetClassLongPtr SetClassLongPtrA
#FimSe

  WINUSERAPI ULONG_PTR WINAPI GetClassLongPtrA(HWND hWnd,Inteiro nIndex);
  WINUSERAPI ULONG_PTR WINAPI GetClassLongPtrW(HWND hWnd,Inteiro nIndex);
  WINUSERAPI ULONG_PTR WINAPI SetClassLongPtrA(HWND hWnd,Inteiro nIndex,LONG_PTR dwNewLong);
  WINUSERAPI ULONG_PTR WINAPI SetClassLongPtrW(HWND hWnd,Inteiro nIndex,LONG_PTR dwNewLong);
#Senão
#SeDefinido UNICODE
#Defina GetClassLongPtr GetClassLongPtrW
#Defina SetClassLongPtr SetClassLongPtrW
#Senão
#Defina GetClassLongPtr GetClassLongPtrA
#Defina SetClassLongPtr SetClassLongPtrA
#FimSe

#Defina GetClassLongPtrA GetClassLongA
#Defina GetClassLongPtrW GetClassLongW
#Defina SetClassLongPtrA SetClassLongA
#Defina SetClassLongPtrW SetClassLongW
#FimSe
#FimSe

#SeDefinido UNICODE
#Defina FindWindow FindWindowW
#Defina FindWindowEx FindWindowExW
#Defina GetClassName GetClassNameW
#Senão
#Defina FindWindow FindWindowA
#Defina FindWindowEx FindWindowExA
#Defina GetClassName GetClassNameA
#FimSe

  WINUSERAPI WINBOOL WINAPI GetProcessDefaultLayout(DWORD *pdwDefaultLayout);
  WINUSERAPI WINBOOL WINAPI SetProcessDefaultLayout(DWORD dwDefaultLayout);
  WINUSERAPI HWND WINAPI GetDesktopWindow(VOID);
  WINUSERAPI HWND WINAPI GetParent(HWND hWnd);
  WINUSERAPI HWND WINAPI SetParent(HWND hWndChild,HWND hWndNewParent);
  WINUSERAPI WINBOOL WINAPI EnumChildWindows(HWND hWndParent,WNDENUMPROC lpEnumFunc,LPARAM lParam);
  WINUSERAPI HWND WINAPI FindWindowA(LPCSTR lpClassName,LPCSTR lpWindowName);
  WINUSERAPI HWND WINAPI FindWindowW(LPCWSTR lpClassName,LPCWSTR lpWindowName);
  WINUSERAPI HWND WINAPI FindWindowExA(HWND hWndParent,HWND hWndChildAfter,LPCSTR lpszClass,LPCSTR lpszWindow);
  WINUSERAPI HWND WINAPI FindWindowExW(HWND hWndParent,HWND hWndChildAfter,LPCWSTR lpszClass,LPCWSTR lpszWindow);
  WINUSERAPI HWND WINAPI GetShellWindow(VOID);
  WINUSERAPI WINBOOL WINAPI RegisterShellHookWindow(HWND hwnd);
  WINUSERAPI WINBOOL WINAPI DeregisterShellHookWindow(HWND hwnd);
  WINUSERAPI WINBOOL WINAPI EnumWindows(WNDENUMPROC lpEnumFunc,LPARAM lParam);
  WINUSERAPI WINBOOL WINAPI EnumThreadWindows(DWORD dwThreadId,WNDENUMPROC lpfn,LPARAM lParam);

#Defina EnumTaskWindows(hTask,lpfn,lParam) EnumThreadWindows(HandleToUlong(hTask),lpfn,lParam)

  WINUSERAPI Inteiro WINAPI GetClassNameA(HWND hWnd,LPSTR lpClassName,Inteiro nMaxCount);
  WINUSERAPI Inteiro WINAPI GetClassNameW(HWND hWnd,LPWSTR lpClassName,Inteiro nMaxCount);
  WINUSERAPI HWND WINAPI GetTopWindow(HWND hWnd);

#Defina GetNextWindow(hWnd,wCmd) GetWindow(hWnd,wCmd)
#Defina GetSysModalWindow() (NULL)
#Defina SetSysModalWindow(hWnd) (NULL)

  WINUSERAPI DWORD WINAPI GetWindowThreadProcessId(HWND hWnd,LPDWORD lpdwProcessId);
  WINUSERAPI WINBOOL WINAPI IsGUIThread(WINBOOL bConvert);

#Defina GetWindowTask(hWnd) ((HANDLE)(DWORD_PTR)GetWindowThreadProcessId(hWnd,NULL))

  WINUSERAPI HWND WINAPI GetLastActivePopup(HWND hWnd);

#Defina GW_HWNDFIRST 0
#Defina GW_HWNDLAST 1
#Defina GW_HWNDNEXT 2
#Defina GW_HWNDPREV 3
#Defina GW_OWNER 4
#Defina GW_CHILD 5
#Defina GW_ENABLEDPOPUP 6
#Defina GW_MAX 6

  WINUSERAPI HWND WINAPI GetWindow(HWND hWnd,UINT uCmd);

#SenãoDefinido NOWH

#SeDefinido UNICODE
#Defina SetWindowsHook SetWindowsHookW
#Defina SetWindowsHookEx SetWindowsHookExW
#Senão
#Defina SetWindowsHook SetWindowsHookA
#Defina SetWindowsHookEx SetWindowsHookExA
#FimSe

  WINUSERAPI HHOOK WINAPI SetWindowsHookA(Inteiro nFilterType,HOOKPROC pfnFilterProc);
  WINUSERAPI HHOOK WINAPI SetWindowsHookW(Inteiro nFilterType,HOOKPROC pfnFilterProc);
  WINUSERAPI WINBOOL WINAPI UnhookWindowsHook(Inteiro nCode,HOOKPROC pfnFilterProc);
  WINUSERAPI HHOOK WINAPI SetWindowsHookExA(Inteiro idHook,HOOKPROC lpfn,HINSTANCE hmod,DWORD dwThreadId);
  WINUSERAPI HHOOK WINAPI SetWindowsHookExW(Inteiro idHook,HOOKPROC lpfn,HINSTANCE hmod,DWORD dwThreadId);
  WINUSERAPI WINBOOL WINAPI UnhookWindowsHookEx(HHOOK hhk);
  WINUSERAPI LRESULT WINAPI CallNextHookEx(HHOOK hhk,Inteiro nCode,WPARAM wParam,LPARAM lParam);
#Defina DefHookProc(nCode,wParam,lParam,phhk) CallNextHookEx(*phhk,nCode,wParam,lParam)
#FimSe

#SenãoDefinido NOMENUS

#Defina MF_INSERT 0x00000000L
#Defina MF_CHANGE 0x00000080L
#Defina MF_APPEND 0x00000100L
#Defina MF_DELETE 0x00000200L
#Defina MF_REMOVE 0x00001000L
#Defina MF_BYCOMMAND 0x00000000L
#Defina MF_BYPOSITION 0x00000400L
#Defina MF_SEPARATOR 0x00000800L
#Defina MF_ENABLED 0x00000000L
#Defina MF_GRAYED 0x00000001L
#Defina MF_DISABLED 0x00000002L
#Defina MF_UNCHECKED 0x00000000L
#Defina MF_CHECKED 0x00000008L
#Defina MF_USECHECKBITMAPS 0x00000200L
#Defina MF_STRING 0x00000000L
#Defina MF_BITMAP 0x00000004L
#Defina MF_OWNERDRAW 0x00000100L
#Defina MF_POPUP 0x00000010L
#Defina MF_MENUBARBREAK 0x00000020L
#Defina MF_MENUBREAK 0x00000040L
#Defina MF_UNHILITE 0x00000000L
#Defina MF_HILITE 0x00000080L
#Defina MF_DEFAULT 0x00001000L
#Defina MF_SYSMENU 0x00002000L
#Defina MF_HELP 0x00004000L
#Defina MF_RIGHTJUSTIFY 0x00004000L
#Defina MF_MOUSESELECT 0x00008000L
#Defina MF_END 0x00000080L

#Defina MFT_STRING MF_STRING
#Defina MFT_BITMAP MF_BITMAP
#Defina MFT_MENUBARBREAK MF_MENUBARBREAK
#Defina MFT_MENUBREAK MF_MENUBREAK
#Defina MFT_OWNERDRAW MF_OWNERDRAW
#Defina MFT_RADIOCHECK 0x00000200L
#Defina MFT_SEPARATOR MF_SEPARATOR
#Defina MFT_RIGHTORDER 0x00002000L
#Defina MFT_RIGHTJUSTIFY MF_RIGHTJUSTIFY

#Defina MFS_GRAYED 0x00000003L
#Defina MFS_DISABLED MFS_GRAYED
#Defina MFS_CHECKED MF_CHECKED
#Defina MFS_HILITE MF_HILITE
#Defina MFS_ENABLED MF_ENABLED
#Defina MFS_UNCHECKED MF_UNCHECKED
#Defina MFS_UNHILITE MF_UNHILITE
#Defina MFS_DEFAULT MF_DEFAULT

  WINUSERAPI WINBOOL WINAPI CheckMenuRadioItem(HMENU hmenu,UINT first,UINT last,UINT check,UINT flags);

  Tipo Estrutura {
    WORD versionNumber;
    WORD offset;
  } MENUITEMTEMPLATEHEADER,*PMENUITEMTEMPLATEHEADER;

  Tipo Estrutura {
    WORD mtOption;
    WORD mtID;
    WCHAR mtString[1];
  } MENUITEMTEMPLATE,*PMENUITEMTEMPLATE;
#Defina MF_END 0x00000080L
#FimSe

#SenãoDefinido NOSYSCOMMANDS

#Defina SC_SIZE 0xF000
#Defina SC_MOVE 0xF010
#Defina SC_MINIMIZE 0xF020
#Defina SC_MAXIMIZE 0xF030
#Defina SC_NEXTWINDOW 0xF040
#Defina SC_PREVWINDOW 0xF050
#Defina SC_CLOSE 0xF060
#Defina SC_VSCROLL 0xF070
#Defina SC_HSCROLL 0xF080
#Defina SC_MOUSEMENU 0xF090
#Defina SC_KEYMENU 0xF100
#Defina SC_ARRANGE 0xF110
#Defina SC_RESTORE 0xF120
#Defina SC_TASKLIST 0xF130
#Defina SC_SCREENSAVE 0xF140
#Defina SC_HOTKEY 0xF150
#Defina SC_DEFAULT 0xF160
#Defina SC_MONITORPOWER 0xF170
#Defina SC_CONTEXTHELP 0xF180
#Defina SC_SEPARATOR 0xF00F
#Defina SC_ICON SC_MINIMIZE
#Defina SC_ZOOM SC_MAXIMIZE
#FimSe

#SeDefinido UNICODE
#Defina LoadBitmap LoadBitmapW
#Defina LoadCursor LoadCursorW
#Defina LoadCursorFromFile LoadCursorFromFileW
#Senão
#Defina LoadBitmap LoadBitmapA
#Defina LoadCursor LoadCursorA
#Defina LoadCursorFromFile LoadCursorFromFileA
#FimSe

  WINUSERAPI HBITMAP WINAPI LoadBitmapA(HINSTANCE hInstance,LPCSTR lpBitmapName);
  WINUSERAPI HBITMAP WINAPI LoadBitmapW(HINSTANCE hInstance,LPCWSTR lpBitmapName);
  WINUSERAPI HCURSOR WINAPI LoadCursorA(HINSTANCE hInstance,LPCSTR lpCursorName);
  WINUSERAPI HCURSOR WINAPI LoadCursorW(HINSTANCE hInstance,LPCWSTR lpCursorName);
  WINUSERAPI HCURSOR WINAPI LoadCursorFromFileA(LPCSTR lpFileName);
  WINUSERAPI HCURSOR WINAPI LoadCursorFromFileW(LPCWSTR lpFileName);
  WINUSERAPI HCURSOR WINAPI CreateCursor(HINSTANCE hInst,Inteiro xHotSpot,Inteiro yHotSpot,Inteiro nWidth,Inteiro nHeight,CONST VOID *pvANDPlane,CONST VOID *pvXORPlane);
  WINUSERAPI WINBOOL WINAPI DestroyCursor(HCURSOR hCursor);

#Defina CopyCursor(pcur) ((HCURSOR)CopyIcon((HICON)(pcur)))

#Defina IDC_ARROW MAKEINTRESOURCE(32512)
#Defina IDC_IBEAM MAKEINTRESOURCE(32513)
#Defina IDC_WAIT MAKEINTRESOURCE(32514)
#Defina IDC_CROSS MAKEINTRESOURCE(32515)
#Defina IDC_UPARROW MAKEINTRESOURCE(32516)
#Defina IDC_SIZE MAKEINTRESOURCE(32640)
#Defina IDC_ICON MAKEINTRESOURCE(32641)
#Defina IDC_SIZENWSE MAKEINTRESOURCE(32642)
#Defina IDC_SIZENESW MAKEINTRESOURCE(32643)
#Defina IDC_SIZEWE MAKEINTRESOURCE(32644)
#Defina IDC_SIZENS MAKEINTRESOURCE(32645)
#Defina IDC_SIZEALL MAKEINTRESOURCE(32646)
#Defina IDC_NO MAKEINTRESOURCE(32648)
#Defina IDC_HAND MAKEINTRESOURCE(32649)
#Defina IDC_APPSTARTING MAKEINTRESOURCE(32650)
#Defina IDC_HELP MAKEINTRESOURCE(32651)

  WINUSERAPI WINBOOL WINAPI SetSystemCursor(HCURSOR hcur,DWORD id);

  Tipo Estrutura _ICONINFO {
    WINBOOL fIcon;
    DWORD xHotspot;
    DWORD yHotspot;
    HBITMAP hbmMask;
    HBITMAP hbmColor;
  } ICONINFO;
  Tipo ICONINFO *PICONINFO;

#SeDefinido UNICODE
#Defina LoadIcon LoadIconW
#Defina PrivateExtractIcons PrivateExtractIconsW
#Senão
#Defina LoadIcon LoadIconA
#Defina PrivateExtractIcons PrivateExtractIconsA
#FimSe

  WINUSERAPI HICON WINAPI LoadIconA(HINSTANCE hInstance,LPCSTR lpIconName);
  WINUSERAPI HICON WINAPI LoadIconW(HINSTANCE hInstance,LPCWSTR lpIconName);
  WINUSERAPI UINT WINAPI PrivateExtractIconsA(LPCSTR szFileName,Inteiro nIconIndex,Inteiro cxIcon,Inteiro cyIcon,HICON *phicon,UINT *piconid,UINT nIcons,UINT flags);
  WINUSERAPI UINT WINAPI PrivateExtractIconsW(LPCWSTR szFileName,Inteiro nIconIndex,Inteiro cxIcon,Inteiro cyIcon,HICON *phicon,UINT *piconid,UINT nIcons,UINT flags);
  WINUSERAPI HICON WINAPI CreateIcon(HINSTANCE hInstance,Inteiro nWidth,Inteiro nHeight,BYTE cPlanes,BYTE cBitsPixel,CONST BYTE *lpbANDbits,CONST BYTE *lpbXORbits);
  WINUSERAPI WINBOOL WINAPI DestroyIcon(HICON hIcon);
  WINUSERAPI Inteiro WINAPI LookupIconIdFromDirectory(PBYTE presbits,WINBOOL fIcon);
  WINUSERAPI Inteiro WINAPI LookupIconIdFromDirectoryEx(PBYTE presbits,WINBOOL fIcon,Inteiro cxDesired,Inteiro cyDesired,UINT Flags);
  WINUSERAPI HICON WINAPI CreateIconFromResource(PBYTE presbits,DWORD dwResSize,WINBOOL fIcon,DWORD dwVer);
  WINUSERAPI HICON WINAPI CreateIconFromResourceEx(PBYTE presbits,DWORD dwResSize,WINBOOL fIcon,DWORD dwVer,Inteiro cxDesired,Inteiro cyDesired,UINT Flags);

  Tipo Estrutura tagCURSORSHAPE {
    Inteiro xHotSpot;
    Inteiro yHotSpot;
    Inteiro cx;
    Inteiro cy;
    Inteiro cbWidth;
    BYTE Planes;
    BYTE BitsPixel;
  } CURSORSHAPE,*LPCURSORSHAPE;

#Defina IMAGE_BITMAP 0
#Defina IMAGE_ICON 1
#Defina IMAGE_CURSOR 2
#Defina IMAGE_ENHMETAFILE 3

#Defina LR_DEFAULTCOLOR 0x0000
#Defina LR_MONOCHROME 0x0001
#Defina LR_COLOR 0x0002
#Defina LR_COPYRETURNORG 0x0004
#Defina LR_COPYDELETEORG 0x0008
#Defina LR_LOADFROMFILE 0x0010
#Defina LR_LOADTRANSPARENT 0x0020
#Defina LR_DEFAULTSIZE 0x0040
#Defina LR_VGACOLOR 0x0080
#Defina LR_LOADMAP3DCOLORS 0x1000
#Defina LR_CREATEDIBSECTION 0x2000
#Defina LR_COPYFROMRESOURCE 0x4000
#Defina LR_SHARED 0x8000

#SeDefinido UNICODE
#Defina LoadImage LoadImageW
#Senão
#Defina LoadImage LoadImageA
#FimSe

  WINUSERAPI HANDLE WINAPI LoadImageA(HINSTANCE hInst,LPCSTR name,UINT type,Inteiro cx,Inteiro cy,UINT fuLoad);
  WINUSERAPI HANDLE WINAPI LoadImageW(HINSTANCE hInst,LPCWSTR name,UINT type,Inteiro cx,Inteiro cy,UINT fuLoad);
  WINUSERAPI HANDLE WINAPI CopyImage(HANDLE h,UINT type,Inteiro cx,Inteiro cy,UINT flags);

#Defina DI_MASK 0x0001
#Defina DI_IMAGE 0x0002
#Defina DI_NORMAL 0x0003
#Defina DI_COMPAT 0x0004
#Defina DI_DEFAULTSIZE 0x0008
#Defina DI_NOMIRROR 0x0010

  WINUSERAPI WINBOOL WINAPI DrawIconEx(HDC hdc,Inteiro xLeft,Inteiro yTop,HICON hIcon,Inteiro cxWidth,Inteiro cyWidth,UINT istepIfAniCur,HBRUSH hbrFlickerFreeDraw,UINT diFlags);
  WINUSERAPI HICON WINAPI CreateIconIndirect(PICONINFO piconinfo);
  WINUSERAPI HICON WINAPI CopyIcon(HICON hIcon);
  WINUSERAPI WINBOOL WINAPI GetIconInfo(HICON hIcon,PICONINFO piconinfo);

#Defina RES_ICON 1
#Defina RES_CURSOR 2

#SeDefinido OEMRESOURCE

#Defina OBM_CLOSE 32754
#Defina OBM_UPARROW 32753
#Defina OBM_DNARROW 32752
#Defina OBM_RGARROW 32751
#Defina OBM_LFARROW 32750
#Defina OBM_REDUCE 32749
#Defina OBM_ZOOM 32748
#Defina OBM_RESTORE 32747
#Defina OBM_REDUCED 32746
#Defina OBM_ZOOMD 32745
#Defina OBM_RESTORED 32744
#Defina OBM_UPARROWD 32743
#Defina OBM_DNARROWD 32742
#Defina OBM_RGARROWD 32741
#Defina OBM_LFARROWD 32740
#Defina OBM_MNARROW 32739
#Defina OBM_COMBO 32738
#Defina OBM_UPARROWI 32737
#Defina OBM_DNARROWI 32736
#Defina OBM_RGARROWI 32735
#Defina OBM_LFARROWI 32734

#Defina OBM_OLD_CLOSE 32767
#Defina OBM_SIZE 32766
#Defina OBM_OLD_UPARROW 32765
#Defina OBM_OLD_DNARROW 32764
#Defina OBM_OLD_RGARROW 32763
#Defina OBM_OLD_LFARROW 32762
#Defina OBM_BTSIZE 32761
#Defina OBM_CHECK 32760
#Defina OBM_CHECKBOXES 32759
#Defina OBM_BTNCORNERS 32758
#Defina OBM_OLD_REDUCE 32757
#Defina OBM_OLD_ZOOM 32756
#Defina OBM_OLD_RESTORE 32755

#Defina OCR_NORMAL 32512
#Defina OCR_IBEAM 32513
#Defina OCR_WAIT 32514
#Defina OCR_CROSS 32515
#Defina OCR_UP 32516
#Defina OCR_SIZE 32640
#Defina OCR_ICON 32641
#Defina OCR_SIZENWSE 32642
#Defina OCR_SIZENESW 32643
#Defina OCR_SIZEWE 32644
#Defina OCR_SIZENS 32645
#Defina OCR_SIZEALL 32646
#Defina OCR_ICOCUR 32647
#Defina OCR_NO 32648
#Defina OCR_HAND 32649
#Defina OCR_APPSTARTING 32650

#Defina OIC_SAMPLE 32512
#Defina OIC_HAND 32513
#Defina OIC_QUES 32514
#Defina OIC_BANG 32515
#Defina OIC_NOTE 32516
#Defina OIC_WINLOGO 32517
#Defina OIC_WARNING OIC_BANG
#Defina OIC_ERROR OIC_HAND
#Defina OIC_INFORMATION OIC_NOTE
#FimSe

#Defina ORD_LANGDRIVER 1

#SenãoDefinido NOICONS

#SeDefinido RC_INVOKED
#Defina IDI_APPLICATION 32512
#Defina IDI_HAND 32513
#Defina IDI_QUESTION 32514
#Defina IDI_EXCLAMATION 32515
#Defina IDI_ASTERISK 32516
#Defina IDI_WINLOGO 32517
#Senão
#Defina IDI_APPLICATION MAKEINTRESOURCE(32512)
#Defina IDI_HAND MAKEINTRESOURCE(32513)
#Defina IDI_QUESTION MAKEINTRESOURCE(32514)
#Defina IDI_EXCLAMATION MAKEINTRESOURCE(32515)
#Defina IDI_ASTERISK MAKEINTRESOURCE(32516)
#Defina IDI_WINLOGO MAKEINTRESOURCE(32517)
#FimSe

#Defina IDI_WARNING IDI_EXCLAMATION
#Defina IDI_ERROR IDI_HAND
#Defina IDI_INFORMATION IDI_ASTERISK
#FimSe

#SeDefinido UNICODE
#Defina LoadString LoadStringW
#Senão
#Defina LoadString LoadStringA
#FimSe

  WINUSERAPI Inteiro WINAPI LoadStringA(HINSTANCE hInstance,UINT uID,LPSTR lpBuffer,Inteiro cchBufferMax);
  WINUSERAPI Inteiro WINAPI LoadStringW(HINSTANCE hInstance,UINT uID,LPWSTR lpBuffer,Inteiro cchBufferMax);

#Defina IDOK 1
#Defina IDCANCEL 2
#Defina IDABORT 3
#Defina IDRETRY 4
#Defina IDIGNORE 5
#Defina IDYES 6
#Defina IDNO 7
#Defina IDCLOSE 8
#Defina IDHELP 9
#Defina IDTRYAGAIN 10
#Defina IDCONTINUE 11

#SenãoDefinido IDTIMEOUT
#Defina IDTIMEOUT 32000
#FimSe

#SenãoDefinido NOCTLMGR

#SenãoDefinido NOWINSTYLES
#Defina ES_LEFT 0x0000L
#Defina ES_CENTER 0x0001L
#Defina ES_RIGHT 0x0002L
#Defina ES_MULTILINE 0x0004L
#Defina ES_UPPERCASE 0x0008L
#Defina ES_LOWERCASE 0x0010L
#Defina ES_PASSWORD 0x0020L
#Defina ES_AUTOVSCROLL 0x0040L
#Defina ES_AUTOHSCROLL 0x0080L
#Defina ES_NOHIDESEL 0x0100L
#Defina ES_OEMCONVERT 0x0400L
#Defina ES_READONLY 0x0800L
#Defina ES_WANTRETURN 0x1000L
#Defina ES_NUMBER 0x2000L
#FimSe

#Defina EN_SETFOCUS 0x0100
#Defina EN_KILLFOCUS 0x0200
#Defina EN_CHANGE 0x0300
#Defina EN_UPDATE 0x0400
#Defina EN_ERRSPACE 0x0500
#Defina EN_MAXTEXT 0x0501
#Defina EN_HSCROLL 0x0601
#Defina EN_VSCROLL 0x0602
#Defina EN_ALIGN_LTR_EC 0x0700
#Defina EN_ALIGN_RTL_EC 0x0701

#Defina EC_LEFTMARGIN 0x0001
#Defina EC_RIGHTMARGIN 0x0002
#Defina EC_USEFONTINFO 0xffff

#Defina EMSIS_COMPOSITIONSTRING 0x0001

#Defina EIMES_GETCOMPSTRATONCE 0x0001
#Defina EIMES_CANCELCOMPSTRINFOCUS 0x0002
#Defina EIMES_COMPLETECOMPSTRKILLFOCUS 0x0004

#SenãoDefinido NOWINMESSAGES

#Defina EM_GETSEL 0x00B0
#Defina EM_SETSEL 0x00B1
#Defina EM_GETRECT 0x00B2
#Defina EM_SETRECT 0x00B3
#Defina EM_SETRECTNP 0x00B4
#Defina EM_SCROLL 0x00B5
#Defina EM_LINESCROLL 0x00B6
#Defina EM_SCROLLCARET 0x00B7
#Defina EM_GETMODIFY 0x00B8
#Defina EM_SETMODIFY 0x00B9
#Defina EM_GETLINECOUNT 0x00BA
#Defina EM_LINEINDEX 0x00BB
#Defina EM_SETHANDLE 0x00BC
#Defina EM_GETHANDLE 0x00BD
#Defina EM_GETTHUMB 0x00BE
#Defina EM_LINELENGTH 0x00C1
#Defina EM_REPLACESEL 0x00C2
#Defina EM_GETLINE 0x00C4
#Defina EM_LIMITTEXT 0x00C5
#Defina EM_CANUNDO 0x00C6
#Defina EM_UNDO 0x00C7
#Defina EM_FMTLINES 0x00C8
#Defina EM_LINEFROMCHAR 0x00C9
#Defina EM_SETTABSTOPS 0x00CB
#Defina EM_SETPASSWORDCHAR 0x00CC
#Defina EM_EMPTYUNDOBUFFER 0x00CD
#Defina EM_GETFIRSTVISIBLELINE 0x00CE
#Defina EM_SETREADONLY 0x00CF
#Defina EM_SETWORDBREAKPROC 0x00D0
#Defina EM_GETWORDBREAKPROC 0x00D1
#Defina EM_GETPASSWORDCHAR 0x00D2
#Defina EM_SETMARGINS 0x00D3
#Defina EM_GETMARGINS 0x00D4
#Defina EM_SETLIMITTEXT EM_LIMITTEXT
#Defina EM_GETLIMITTEXT 0x00D5
#Defina EM_POSFROMCHAR 0x00D6
#Defina EM_CHARFROMPOS 0x00D7
#Defina EM_SETIMESTATUS 0x00D8
#Defina EM_GETIMESTATUS 0x00D9
#FimSe

#Defina WB_LEFT 0
#Defina WB_RIGHT 1
#Defina WB_ISDELIMITER 2

#Defina BS_PUSHBUTTON 0x00000000L
#Defina BS_DEFPUSHBUTTON 0x00000001L
#Defina BS_CHECKBOX 0x00000002L
#Defina BS_AUTOCHECKBOX 0x00000003L
#Defina BS_RADIOBUTTON 0x00000004L
#Defina BS_3STATE 0x00000005L
#Defina BS_AUTO3STATE 0x00000006L
#Defina BS_GROUPBOX 0x00000007L
#Defina BS_USERBUTTON 0x00000008L
#Defina BS_AUTORADIOBUTTON 0x00000009L
#Defina BS_PUSHBOX 0x0000000AL
#Defina BS_OWNERDRAW 0x0000000BL
#Defina BS_TYPEMASK 0x0000000FL
#Defina BS_LEFTTEXT 0x00000020L
#Defina BS_TEXT 0x00000000L
#Defina BS_ICON 0x00000040L
#Defina BS_BITMAP 0x00000080L
#Defina BS_LEFT 0x00000100L
#Defina BS_RIGHT 0x00000200L
#Defina BS_CENTER 0x00000300L
#Defina BS_TOP 0x00000400L
#Defina BS_BOTTOM 0x00000800L
#Defina BS_VCENTER 0x00000C00L
#Defina BS_PUSHLIKE 0x00001000L
#Defina BS_MULTILINE 0x00002000L
#Defina BS_NOTIFY 0x00004000L
#Defina BS_FLAT 0x00008000L
#Defina BS_RIGHTBUTTON BS_LEFTTEXT

#Defina BN_CLICKED 0
#Defina BN_PAINT 1
#Defina BN_HILITE 2
#Defina BN_UNHILITE 3
#Defina BN_DISABLE 4
#Defina BN_DOUBLECLICKED 5
#Defina BN_PUSHED BN_HILITE
#Defina BN_UNPUSHED BN_UNHILITE
#Defina BN_DBLCLK BN_DOUBLECLICKED
#Defina BN_SETFOCUS 6
#Defina BN_KILLFOCUS 7

#Defina BM_GETCHECK 0x00F0
#Defina BM_SETCHECK 0x00F1
#Defina BM_GETSTATE 0x00F2
#Defina BM_SETSTATE 0x00F3
#Defina BM_SETSTYLE 0x00F4
#Defina BM_CLICK 0x00F5
#Defina BM_GETIMAGE 0x00F6
#Defina BM_SETIMAGE 0x00F7

#Defina BST_UNCHECKED 0x0000
#Defina BST_CHECKED 0x0001
#Defina BST_INDETERMINATE 0x0002
#Defina BST_PUSHED 0x0004
#Defina BST_FOCUS 0x0008

#Defina SS_LEFT 0x00000000L
#Defina SS_CENTER 0x00000001L
#Defina SS_RIGHT 0x00000002L
#Defina SS_ICON 0x00000003L
#Defina SS_BLACKRECT 0x00000004L
#Defina SS_GRAYRECT 0x00000005L
#Defina SS_WHITERECT 0x00000006L
#Defina SS_BLACKFRAME 0x00000007L
#Defina SS_GRAYFRAME 0x00000008L
#Defina SS_WHITEFRAME 0x00000009L
#Defina SS_USERITEM 0x0000000AL
#Defina SS_SIMPLE 0x0000000BL
#Defina SS_LEFTNOWORDWRAP 0x0000000CL
#Defina SS_OWNERDRAW 0x0000000DL
#Defina SS_BITMAP 0x0000000EL
#Defina SS_ENHMETAFILE 0x0000000FL
#Defina SS_ETCHEDHORZ 0x00000010L
#Defina SS_ETCHEDVERT 0x00000011L
#Defina SS_ETCHEDFRAME 0x00000012L
#Defina SS_TYPEMASK 0x0000001FL
#Defina SS_REALSIZECONTROL 0x00000040L
#Defina SS_NOPREFIX 0x00000080L
#Defina SS_NOTIFY 0x00000100L
#Defina SS_CENTERIMAGE 0x00000200L
#Defina SS_RIGHTJUST 0x00000400L
#Defina SS_REALSIZEIMAGE 0x00000800L
#Defina SS_SUNKEN 0x00001000L
#Defina SS_EDITCONTROL 0x00002000L
#Defina SS_ENDELLIPSIS 0x00004000L
#Defina SS_PATHELLIPSIS 0x00008000L
#Defina SS_WORDELLIPSIS 0x0000C000L
#Defina SS_ELLIPSISMASK 0x0000C000L

#SenãoDefinido NOWINMESSAGES

#Defina STM_SETICON 0x0170
#Defina STM_GETICON 0x0171
#Defina STM_SETIMAGE 0x0172
#Defina STM_GETIMAGE 0x0173
#Defina STN_CLICKED 0
#Defina STN_DBLCLK 1
#Defina STN_ENABLE 2
#Defina STN_DISABLE 3
#Defina STM_MSGMAX 0x0174
#FimSe

#Defina WC_DIALOG (MAKEINTATOM(0x8002))

#Defina DWL_MSGRESULT 0
#Defina DWL_DLGPROC 4
#Defina DWL_USER 8

#SeDefinido _WIN64

#Indefinido DWL_MSGRESULT
#Indefinido DWL_DLGPROC
#Indefinido DWL_USER
#FimSe

#Defina DWLP_MSGRESULT 0
#Defina DWLP_DLGPROC DWLP_MSGRESULT + TamanhoDe(LRESULT)
#Defina DWLP_USER DWLP_DLGPROC + TamanhoDe(DLGPROC)

#SenãoDefinido NOMSG

#SeDefinido UNICODE
#Defina IsDialogMessage IsDialogMessageW
#Senão
#Defina IsDialogMessage IsDialogMessageA
#FimSe

  WINUSERAPI WINBOOL WINAPI IsDialogMessageA(HWND hDlg,LPMSG lpMsg);
  WINUSERAPI WINBOOL WINAPI IsDialogMessageW(HWND hDlg,LPMSG lpMsg);
#FimSe

#SeDefinido UNICODE
#Defina DlgDirList DlgDirListW
#Defina DlgDirSelectEx DlgDirSelectExW
#Defina DlgDirListComboBox DlgDirListComboBoxW
#Defina DlgDirSelectComboBoxEx DlgDirSelectComboBoxExW
#Senão
#Defina DlgDirList DlgDirListA
#Defina DlgDirSelectEx DlgDirSelectExA
#Defina DlgDirListComboBox DlgDirListComboBoxA
#Defina DlgDirSelectComboBoxEx DlgDirSelectComboBoxExA
#FimSe

  WINUSERAPI WINBOOL WINAPI MapDialogRect(HWND hDlg,LPRECT lpRect);
  WINUSERAPI Inteiro WINAPI DlgDirListA(HWND hDlg,LPSTR lpPathSpec,Inteiro nIDListBox,Inteiro nIDStaticPath,UINT uFileType);
  WINUSERAPI Inteiro WINAPI DlgDirListW(HWND hDlg,LPWSTR lpPathSpec,Inteiro nIDListBox,Inteiro nIDStaticPath,UINT uFileType);

#Defina DDL_READWRITE 0x0000
#Defina DDL_READONLY 0x0001
#Defina DDL_HIDDEN 0x0002
#Defina DDL_SYSTEM 0x0004
#Defina DDL_DIRECTORY 0x0010
#Defina DDL_ARCHIVE 0x0020

#Defina DDL_POSTMSGS 0x2000
#Defina DDL_DRIVES 0x4000
#Defina DDL_EXCLUSIVE 0x8000

  WINUSERAPI WINBOOL WINAPI DlgDirSelectExA(HWND hwndDlg,LPSTR lpString,Inteiro chCount,Inteiro idListBox);
  WINUSERAPI WINBOOL WINAPI DlgDirSelectExW(HWND hwndDlg,LPWSTR lpString,Inteiro chCount,Inteiro idListBox);
  WINUSERAPI Inteiro WINAPI DlgDirListComboBoxA(HWND hDlg,LPSTR lpPathSpec,Inteiro nIDComboBox,Inteiro nIDStaticPath,UINT uFiletype);
  WINUSERAPI Inteiro WINAPI DlgDirListComboBoxW(HWND hDlg,LPWSTR lpPathSpec,Inteiro nIDComboBox,Inteiro nIDStaticPath,UINT uFiletype);
  WINUSERAPI WINBOOL WINAPI DlgDirSelectComboBoxExA(HWND hwndDlg,LPSTR lpString,Inteiro cchOut,Inteiro idComboBox);
  WINUSERAPI WINBOOL WINAPI DlgDirSelectComboBoxExW(HWND hwndDlg,LPWSTR lpString,Inteiro cchOut,Inteiro idComboBox);

#Defina DS_ABSALIGN 0x01L
#Defina DS_SYSMODAL 0x02L
#Defina DS_LOCALEDIT 0x20L
#Defina DS_SETFONT 0x40L
#Defina DS_MODALFRAME 0x80L
#Defina DS_NOIDLEMSG 0x100L
#Defina DS_SETFOREGROUND 0x200L

#Defina DS_3DLOOK 0x0004L
#Defina DS_FIXEDSYS 0x0008L
#Defina DS_NOFAILCREATE 0x0010L
#Defina DS_CONTROL 0x0400L
#Defina DS_CENTER 0x0800L
#Defina DS_CENTERMOUSE 0x1000L
#Defina DS_CONTEXTHELP 0x2000L

#Defina DS_SHELLFONT (DS_SETFONT | DS_FIXEDSYS)

#Se(_WIN32_WCE >= 0x0500)
#Defina DS_USEPIXELS 0x8000L
#FimSe

#Defina DM_GETDEFID (WM_USER+0)
#Defina DM_SETDEFID (WM_USER+1)
#Defina DM_REPOSITION (WM_USER+2)

#Defina DC_HASDEFID 0x534B

#Defina DLGC_WANTARROWS 0x0001
#Defina DLGC_WANTTAB 0x0002
#Defina DLGC_WANTALLKEYS 0x0004
#Defina DLGC_WANTMESSAGE 0x0004
#Defina DLGC_HASSETSEL 0x0008
#Defina DLGC_DEFPUSHBUTTON 0x0010
#Defina DLGC_UNDEFPUSHBUTTON 0x0020
#Defina DLGC_RADIOBUTTON 0x0040
#Defina DLGC_WANTCHARS 0x0080
#Defina DLGC_STATIC 0x0100
#Defina DLGC_BUTTON 0x2000

#Defina LB_CTLCODE 0L

#Defina LB_OKAY 0
#Defina LB_ERR (-1)
#Defina LB_ERRSPACE (-2)

#Defina LBN_ERRSPACE (-2)
#Defina LBN_SELCHANGE 1
#Defina LBN_DBLCLK 2
#Defina LBN_SELCANCEL 3
#Defina LBN_SETFOCUS 4
#Defina LBN_KILLFOCUS 5

#SenãoDefinido NOWINMESSAGES

#Defina LB_ADDSTRING 0x0180
#Defina LB_INSERTSTRING 0x0181
#Defina LB_DELETESTRING 0x0182
#Defina LB_SELITEMRANGEEX 0x0183
#Defina LB_RESETCONTENT 0x0184
#Defina LB_SETSEL 0x0185
#Defina LB_SETCURSEL 0x0186
#Defina LB_GETSEL 0x0187
#Defina LB_GETCURSEL 0x0188
#Defina LB_GETTEXT 0x0189
#Defina LB_GETTEXTLEN 0x018A
#Defina LB_GETCOUNT 0x018B
#Defina LB_SELECTSTRING 0x018C
#Defina LB_DIR 0x018D
#Defina LB_GETTOPINDEX 0x018E
#Defina LB_FINDSTRING 0x018F
#Defina LB_GETSELCOUNT 0x0190
#Defina LB_GETSELITEMS 0x0191
#Defina LB_SETTABSTOPS 0x0192
#Defina LB_GETHORIZONTALEXTENT 0x0193
#Defina LB_SETHORIZONTALEXTENT 0x0194
#Defina LB_SETCOLUMNWIDTH 0x0195
#Defina LB_ADDFILE 0x0196
#Defina LB_SETTOPINDEX 0x0197
#Defina LB_GETITEMRECT 0x0198
#Defina LB_GETITEMDATA 0x0199
#Defina LB_SETITEMDATA 0x019A
#Defina LB_SELITEMRANGE 0x019B
#Defina LB_SETANCHORINDEX 0x019C
#Defina LB_GETANCHORINDEX 0x019D
#Defina LB_SETCARETINDEX 0x019E
#Defina LB_GETCARETINDEX 0x019F
#Defina LB_SETITEMHEIGHT 0x01A0
#Defina LB_GETITEMHEIGHT 0x01A1
#Defina LB_FINDSTRINGEXACT 0x01A2
#Defina LB_SETLOCALE 0x01A5
#Defina LB_GETLOCALE 0x01A6
#Defina LB_SETCOUNT 0x01A7
#Defina LB_INITSTORAGE 0x01A8
#Defina LB_ITEMFROMPOINT 0x01A9
#Se(_WIN32_WCE >= 0x0400)
#Defina LB_MULTIPLEADDSTRING 0x01B1
#FimSe
#Defina LB_GETLISTBOXINFO 0x01B2
#Defina LB_MSGMAX 0x01B3
#FimSe

#SenãoDefinido NOWINSTYLES

#Defina LBS_NOTIFY 0x0001L
#Defina LBS_SORT 0x0002L
#Defina LBS_NOREDRAW 0x0004L
#Defina LBS_MULTIPLESEL 0x0008L
#Defina LBS_OWNERDRAWFIXED 0x0010L
#Defina LBS_OWNERDRAWVARIABLE 0x0020L
#Defina LBS_HASSTRINGS 0x0040L
#Defina LBS_USETABSTOPS 0x0080L
#Defina LBS_NOINTEGRALHEIGHT 0x0100L
#Defina LBS_MULTICOLUMN 0x0200L
#Defina LBS_WANTKEYBOARDINPUT 0x0400L
#Defina LBS_EXTENDEDSEL 0x0800L
#Defina LBS_DISABLENOSCROLL 0x1000L
#Defina LBS_NODATA 0x2000L
#Defina LBS_NOSEL 0x4000L
#Defina LBS_COMBOBOX 0x8000L

#Defina LBS_STANDARD (LBS_NOTIFY | LBS_SORT | WS_VSCROLL | WS_BORDER)
#FimSe

#Defina CB_OKAY 0
#Defina CB_ERR (-1)
#Defina CB_ERRSPACE (-2)

#Defina CBN_ERRSPACE (-1)
#Defina CBN_SELCHANGE 1
#Defina CBN_DBLCLK 2
#Defina CBN_SETFOCUS 3
#Defina CBN_KILLFOCUS 4
#Defina CBN_EDITCHANGE 5
#Defina CBN_EDITUPDATE 6
#Defina CBN_DROPDOWN 7
#Defina CBN_CLOSEUP 8
#Defina CBN_SELENDOK 9
#Defina CBN_SELENDCANCEL 10

#SenãoDefinido NOWINSTYLES

#Defina CBS_SIMPLE 0x0001L
#Defina CBS_DROPDOWN 0x0002L
#Defina CBS_DROPDOWNLIST 0x0003L
#Defina CBS_OWNERDRAWFIXED 0x0010L
#Defina CBS_OWNERDRAWVARIABLE 0x0020L
#Defina CBS_AUTOHSCROLL 0x0040L
#Defina CBS_OEMCONVERT 0x0080L
#Defina CBS_SORT 0x0100L
#Defina CBS_HASSTRINGS 0x0200L
#Defina CBS_NOINTEGRALHEIGHT 0x0400L
#Defina CBS_DISABLENOSCROLL 0x0800L
#Defina CBS_UPPERCASE 0x2000L
#Defina CBS_LOWERCASE 0x4000L
#FimSe

#SenãoDefinido NOWINMESSAGES
#Defina CB_GETEDITSEL 0x0140
#Defina CB_LIMITTEXT 0x0141
#Defina CB_SETEDITSEL 0x0142
#Defina CB_ADDSTRING 0x0143
#Defina CB_DELETESTRING 0x0144
#Defina CB_DIR 0x0145
#Defina CB_GETCOUNT 0x0146
#Defina CB_GETCURSEL 0x0147
#Defina CB_GETLBTEXT 0x0148
#Defina CB_GETLBTEXTLEN 0x0149
#Defina CB_INSERTSTRING 0x014A
#Defina CB_RESETCONTENT 0x014B
#Defina CB_FINDSTRING 0x014C
#Defina CB_SELECTSTRING 0x014D
#Defina CB_SETCURSEL 0x014E
#Defina CB_SHOWDROPDOWN 0x014F
#Defina CB_GETITEMDATA 0x0150
#Defina CB_SETITEMDATA 0x0151
#Defina CB_GETDROPPEDCONTROLRECT 0x0152
#Defina CB_SETITEMHEIGHT 0x0153
#Defina CB_GETITEMHEIGHT 0x0154
#Defina CB_SETEXTENDEDUI 0x0155
#Defina CB_GETEXTENDEDUI 0x0156
#Defina CB_GETDROPPEDSTATE 0x0157
#Defina CB_FINDSTRINGEXACT 0x0158
#Defina CB_SETLOCALE 0x0159
#Defina CB_GETLOCALE 0x015A
#Defina CB_GETTOPINDEX 0x015b
#Defina CB_SETTOPINDEX 0x015c
#Defina CB_GETHORIZONTALEXTENT 0x015d
#Defina CB_SETHORIZONTALEXTENT 0x015e
#Defina CB_GETDROPPEDWIDTH 0x015f
#Defina CB_SETDROPPEDWIDTH 0x0160
#Defina CB_INITSTORAGE 0x0161
#Se(_WIN32_WCE >= 0x0400)
#Defina CB_MULTIPLEADDSTRING 0x0163
#FimSe
#Defina CB_GETCOMBOBOXINFO 0x0164
#Defina CB_MSGMAX 0x0165
#FimSe

#SenãoDefinido NOWINSTYLES

#Defina SBS_HORZ 0x0000L
#Defina SBS_VERT 0x0001L
#Defina SBS_TOPALIGN 0x0002L
#Defina SBS_LEFTALIGN 0x0002L
#Defina SBS_BOTTOMALIGN 0x0004L
#Defina SBS_RIGHTALIGN 0x0004L
#Defina SBS_SIZEBOXTOPLEFTALIGN 0x0002L
#Defina SBS_SIZEBOXBOTTOMRIGHTALIGN 0x0004L
#Defina SBS_SIZEBOX 0x0008L
#Defina SBS_SIZEGRIP 0x0010L
#FimSe

#SenãoDefinido NOWINMESSAGES
#Defina SBM_SETPOS 0x00E0
#Defina SBM_GETPOS 0x00E1
#Defina SBM_SETRANGE 0x00E2
#Defina SBM_SETRANGEREDRAW 0x00E6
#Defina SBM_GETRANGE 0x00E3
#Defina SBM_ENABLE_ARROWS 0x00E4
#Defina SBM_SETSCROLLINFO 0x00E9
#Defina SBM_GETSCROLLINFO 0x00EA
#Defina SBM_GETSCROLLBARINFO 0x00EB

#Defina SIF_RANGE 0x0001
#Defina SIF_PAGE 0x0002
#Defina SIF_POS 0x0004
#Defina SIF_DISABLENOSCROLL 0x0008
#Defina SIF_TRACKPOS 0x0010
#Defina SIF_ALL (SIF_RANGE | SIF_PAGE | SIF_POS | SIF_TRACKPOS)

  Tipo Estrutura tagSCROLLINFO {
    UINT cbSize;
    UINT fMask;
    Inteiro nMin;
    Inteiro nMax;
    UINT nPage;
    Inteiro nPos;
    Inteiro nTrackPos;
  } SCROLLINFO,*LPSCROLLINFO;
  Tipo SCROLLINFO CONST *LPCSCROLLINFO;

  WINUSERAPI Inteiro WINAPI SetScrollInfo(HWND hwnd,Inteiro nBar,LPCSCROLLINFO lpsi,WINBOOL redraw);
  WINUSERAPI WINBOOL WINAPI GetScrollInfo(HWND hwnd,Inteiro nBar,LPSCROLLINFO lpsi);
#FimSe
#FimSe

#SenãoDefinido NOMDI

#Defina MDIS_ALLCHILDSTYLES 0x0001

#Defina MDITILE_VERTICAL 0x0000
#Defina MDITILE_HORIZONTAL 0x0001
#Defina MDITILE_SKIPDISABLED 0x0002
#Defina MDITILE_ZORDER 0x0004

  Tipo Estrutura tagMDICREATESTRUCTA {
    LPCSTR szClass;
    LPCSTR szTitle;
    HANDLE hOwner;
    Inteiro x;
    Inteiro y;
    Inteiro cx;
    Inteiro cy;
    DWORD style;
    LPARAM lParam;
  } MDICREATESTRUCTA,*LPMDICREATESTRUCTA;

  Tipo Estrutura tagMDICREATESTRUCTW {
    LPCWSTR szClass;
    LPCWSTR szTitle;
    HANDLE hOwner;
    Inteiro x;
    Inteiro y;
    Inteiro cx;
    Inteiro cy;
    DWORD style;
    LPARAM lParam;
  } MDICREATESTRUCTW,*LPMDICREATESTRUCTW;

#SeDefinido UNICODE
  Tipo MDICREATESTRUCTW MDICREATESTRUCT;
  Tipo LPMDICREATESTRUCTW LPMDICREATESTRUCT;
#Senão
  Tipo MDICREATESTRUCTA MDICREATESTRUCT;
  Tipo LPMDICREATESTRUCTA LPMDICREATESTRUCT;
#FimSe

  Tipo Estrutura tagCLIENTCREATESTRUCT {
    HANDLE hWindowMenu;
    UINT idFirstChild;
  } CLIENTCREATESTRUCT,*LPCLIENTCREATESTRUCT;

#SeDefinido UNICODE
#Defina DefFrameProc DefFrameProcW
#Defina DefMDIChildProc DefMDIChildProcW
#Defina CreateMDIWindow CreateMDIWindowW
#Senão
#Defina DefFrameProc DefFrameProcA
#Defina DefMDIChildProc DefMDIChildProcA
#Defina CreateMDIWindow CreateMDIWindowA
#FimSe

  WINUSERAPI LRESULT WINAPI DefFrameProcA(HWND hWnd,HWND hWndMDIClient,UINT uMsg,WPARAM wParam,LPARAM lParam);
  WINUSERAPI LRESULT WINAPI DefFrameProcW(HWND hWnd,HWND hWndMDIClient,UINT uMsg,WPARAM wParam,LPARAM lParam);
  WINUSERAPI LRESULT WINAPI DefMDIChildProcA(HWND hWnd,UINT uMsg,WPARAM wParam,LPARAM lParam);
  WINUSERAPI LRESULT WINAPI DefMDIChildProcW(HWND hWnd,UINT uMsg,WPARAM wParam,LPARAM lParam);

#SenãoDefinido NOMSG
  WINUSERAPI WINBOOL WINAPI TranslateMDISysAccel(HWND hWndClient,LPMSG lpMsg);
#FimSe

  WINUSERAPI UINT WINAPI ArrangeIconicWindows(HWND hWnd);
  WINUSERAPI HWND WINAPI CreateMDIWindowA(LPCSTR lpClassName,LPCSTR lpWindowName,DWORD dwStyle,Inteiro X,Inteiro Y,Inteiro nWidth,Inteiro nHeight,HWND hWndParent,HINSTANCE hInstance,LPARAM lParam);
  WINUSERAPI HWND WINAPI CreateMDIWindowW(LPCWSTR lpClassName,LPCWSTR lpWindowName,DWORD dwStyle,Inteiro X,Inteiro Y,Inteiro nWidth,Inteiro nHeight,HWND hWndParent,HINSTANCE hInstance,LPARAM lParam);
  WINUSERAPI WORD WINAPI TileWindows(HWND hwndParent,UINT wHow,CONST RECT *lpRect,UINT cKids,Constante HWND *lpKids);
  WINUSERAPI WORD WINAPI CascadeWindows(HWND hwndParent,UINT wHow,CONST RECT *lpRect,UINT cKids,Constante HWND *lpKids);
#FimSe
#FimSe

#SenãoDefinido NOHELP

  Tipo DWORD HELPPOLY;
  Tipo Estrutura tagMULTIKEYHELPA {
    DWORD mkSize;
    CHAR mkKeylist;
    CHAR szKeyphrase[1];
  } MULTIKEYHELPA,*PMULTIKEYHELPA,*LPMULTIKEYHELPA;

  Tipo Estrutura tagMULTIKEYHELPW {
    DWORD mkSize;
    WCHAR mkKeylist;
    WCHAR szKeyphrase[1];
  } MULTIKEYHELPW,*PMULTIKEYHELPW,*LPMULTIKEYHELPW;

#SeDefinido UNICODE
  Tipo MULTIKEYHELPW MULTIKEYHELP;
  Tipo PMULTIKEYHELPW PMULTIKEYHELP;
  Tipo LPMULTIKEYHELPW LPMULTIKEYHELP;
#Senão
  Tipo MULTIKEYHELPA MULTIKEYHELP;
  Tipo PMULTIKEYHELPA PMULTIKEYHELP;
  Tipo LPMULTIKEYHELPA LPMULTIKEYHELP;
#FimSe

  Tipo Estrutura tagHELPWININFOA {
    Inteiro wStructSize;
    Inteiro x;
    Inteiro y;
    Inteiro dx;
    Inteiro dy;
    Inteiro wMax;
    CHAR rgchMember[2];
  } HELPWININFOA,*PHELPWININFOA,*LPHELPWININFOA;

  Tipo Estrutura tagHELPWININFOW {
    Inteiro wStructSize;
    Inteiro x;
    Inteiro y;
    Inteiro dx;
    Inteiro dy;
    Inteiro wMax;
    WCHAR rgchMember[2];
  } HELPWININFOW,*PHELPWININFOW,*LPHELPWININFOW;

#SeDefinido UNICODE
  Tipo HELPWININFOW HELPWININFO;
  Tipo PHELPWININFOW PHELPWININFO;
  Tipo LPHELPWININFOW LPHELPWININFO;
#Senão
  Tipo HELPWININFOA HELPWININFO;
  Tipo PHELPWININFOA PHELPWININFO;
  Tipo LPHELPWININFOA LPHELPWININFO;
#FimSe

#Defina HELP_CONTEXT 0x0001L
#Defina HELP_QUIT 0x0002L
#Defina HELP_INDEX 0x0003L
#Defina HELP_CONTENTS 0x0003L
#Defina HELP_HELPONHELP 0x0004L
#Defina HELP_SETINDEX 0x0005L
#Defina HELP_SETCONTENTS 0x0005L
#Defina HELP_CONTEXTPOPUP 0x0008L
#Defina HELP_FORCEFILE 0x0009L
#Defina HELP_KEY 0x0101L
#Defina HELP_COMMAND 0x0102L
#Defina HELP_PARTIALKEY 0x0105L
#Defina HELP_MULTIKEY 0x0201L
#Defina HELP_SETWINPOS 0x0203L
#Defina HELP_CONTEXTMENU 0x000a
#Defina HELP_FINDER 0x000b
#Defina HELP_WM_HELP 0x000c
#Defina HELP_SETPOPUP_POS 0x000d

#Defina HELP_TCARD 0x8000
#Defina HELP_TCARD_DATA 0x0010
#Defina HELP_TCARD_OTHER_CALLER 0x0011

#Defina IDH_NO_HELP 28440
#Defina IDH_MISSING_CONTEXT 28441
#Defina IDH_GENERIC_HELP_BUTTON 28442
#Defina IDH_OK 28443
#Defina IDH_CANCEL 28444
#Defina IDH_HELP 28445

#SeDefinido UNICODE
#Defina WinHelp WinHelpW
#Senão
#Defina WinHelp WinHelpA
#FimSe

  WINUSERAPI WINBOOL WINAPI WinHelpA(HWND hWndMain,LPCSTR lpszHelp,UINT uCommand,ULONG_PTR dwData);
  WINUSERAPI WINBOOL WINAPI WinHelpW(HWND hWndMain,LPCWSTR lpszHelp,UINT uCommand,ULONG_PTR dwData);
#FimSe

#Defina GR_GDIOBJECTS 0
#Defina GR_USEROBJECTS 1

  WINUSERAPI DWORD WINAPI GetGuiResources(HANDLE hProcess,DWORD uiFlags);

#SenãoDefinido NOSYSPARAMSINFO

#Defina SPI_GETBEEP 0x0001
#Defina SPI_SETBEEP 0x0002
#Defina SPI_GETMOUSE 0x0003
#Defina SPI_SETMOUSE 0x0004
#Defina SPI_GETBORDER 0x0005
#Defina SPI_SETBORDER 0x0006
#Defina SPI_GETKEYBOARDSPEED 0x000A
#Defina SPI_SETKEYBOARDSPEED 0x000B
#Defina SPI_LANGDRIVER 0x000C
#Defina SPI_ICONHORIZONTALSPACING 0x000D
#Defina SPI_GETSCREENSAVETIMEOUT 0x000E
#Defina SPI_SETSCREENSAVETIMEOUT 0x000F
#Defina SPI_GETSCREENSAVEACTIVE 0x0010
#Defina SPI_SETSCREENSAVEACTIVE 0x0011
#Defina SPI_GETGRIDGRANULARITY 0x0012
#Defina SPI_SETGRIDGRANULARITY 0x0013
#Defina SPI_SETDESKWALLPAPER 0x0014
#Defina SPI_SETDESKPATTERN 0x0015
#Defina SPI_GETKEYBOARDDELAY 0x0016
#Defina SPI_SETKEYBOARDDELAY 0x0017
#Defina SPI_ICONVERTICALSPACING 0x0018
#Defina SPI_GETICONTITLEWRAP 0x0019
#Defina SPI_SETICONTITLEWRAP 0x001A
#Defina SPI_GETMENUDROPALIGNMENT 0x001B
#Defina SPI_SETMENUDROPALIGNMENT 0x001C
#Defina SPI_SETDOUBLECLKWIDTH 0x001D
#Defina SPI_SETDOUBLECLKHEIGHT 0x001E
#Defina SPI_GETICONTITLELOGFONT 0x001F
#Defina SPI_SETDOUBLECLICKTIME 0x0020
#Defina SPI_SETMOUSEBUTTONSWAP 0x0021
#Defina SPI_SETICONTITLELOGFONT 0x0022
#Defina SPI_GETFASTTASKSWITCH 0x0023
#Defina SPI_SETFASTTASKSWITCH 0x0024
#Defina SPI_SETDRAGFULLWINDOWS 0x0025
#Defina SPI_GETDRAGFULLWINDOWS 0x0026
#Defina SPI_GETNONCLIENTMETRICS 0x0029
#Defina SPI_SETNONCLIENTMETRICS 0x002A
#Defina SPI_GETMINIMIZEDMETRICS 0x002B
#Defina SPI_SETMINIMIZEDMETRICS 0x002C
#Defina SPI_GETICONMETRICS 0x002D
#Defina SPI_SETICONMETRICS 0x002E
#Defina SPI_SETWORKAREA 0x002F
#Defina SPI_GETWORKAREA 0x0030
#Defina SPI_SETPENWINDOWS 0x0031

#Defina SPI_GETHIGHCONTRAST 0x0042
#Defina SPI_SETHIGHCONTRAST 0x0043
#Defina SPI_GETKEYBOARDPREF 0x0044
#Defina SPI_SETKEYBOARDPREF 0x0045
#Defina SPI_GETSCREENREADER 0x0046
#Defina SPI_SETSCREENREADER 0x0047
#Defina SPI_GETANIMATION 0x0048
#Defina SPI_SETANIMATION 0x0049
#Defina SPI_GETFONTSMOOTHING 0x004A
#Defina SPI_SETFONTSMOOTHING 0x004B
#Defina SPI_SETDRAGWIDTH 0x004C
#Defina SPI_SETDRAGHEIGHT 0x004D
#Defina SPI_SETHANDHELD 0x004E
#Defina SPI_GETLOWPOWERTIMEOUT 0x004F
#Defina SPI_GETPOWEROFFTIMEOUT 0x0050
#Defina SPI_SETLOWPOWERTIMEOUT 0x0051
#Defina SPI_SETPOWEROFFTIMEOUT 0x0052
#Defina SPI_GETLOWPOWERACTIVE 0x0053
#Defina SPI_GETPOWEROFFACTIVE 0x0054
#Defina SPI_SETLOWPOWERACTIVE 0x0055
#Defina SPI_SETPOWEROFFACTIVE 0x0056
#Defina SPI_SETCURSORS 0x0057
#Defina SPI_SETICONS 0x0058
#Defina SPI_GETDEFAULTINPUTLANG 0x0059
#Defina SPI_SETDEFAULTINPUTLANG 0x005A
#Defina SPI_SETLANGTOGGLE 0x005B
#Defina SPI_GETWINDOWSEXTENSION 0x005C
#Defina SPI_SETMOUSETRAILS 0x005D
#Defina SPI_GETMOUSETRAILS 0x005E
#Defina SPI_SETSCREENSAVERRUNNING 0x0061
#Defina SPI_SCREENSAVERRUNNING SPI_SETSCREENSAVERRUNNING
#Defina SPI_GETFILTERKEYS 0x0032
#Defina SPI_SETFILTERKEYS 0x0033
#Defina SPI_GETTOGGLEKEYS 0x0034
#Defina SPI_SETTOGGLEKEYS 0x0035
#Defina SPI_GETMOUSEKEYS 0x0036
#Defina SPI_SETMOUSEKEYS 0x0037
#Defina SPI_GETSHOWSOUNDS 0x0038
#Defina SPI_SETSHOWSOUNDS 0x0039
#Defina SPI_GETSTICKYKEYS 0x003A
#Defina SPI_SETSTICKYKEYS 0x003B
#Defina SPI_GETACCESSTIMEOUT 0x003C
#Defina SPI_SETACCESSTIMEOUT 0x003D
#Defina SPI_GETSERIALKEYS 0x003E
#Defina SPI_SETSERIALKEYS 0x003F
#Defina SPI_GETSOUNDSENTRY 0x0040
#Defina SPI_SETSOUNDSENTRY 0x0041
#Defina SPI_GETSNAPTODEFBUTTON 0x005F
#Defina SPI_SETSNAPTODEFBUTTON 0x0060
#Defina SPI_GETMOUSEHOVERWIDTH 0x0062
#Defina SPI_SETMOUSEHOVERWIDTH 0x0063
#Defina SPI_GETMOUSEHOVERHEIGHT 0x0064
#Defina SPI_SETMOUSEHOVERHEIGHT 0x0065
#Defina SPI_GETMOUSEHOVERTIME 0x0066
#Defina SPI_SETMOUSEHOVERTIME 0x0067
#Defina SPI_GETWHEELSCROLLLINES 0x0068
#Defina SPI_SETWHEELSCROLLLINES 0x0069
#Defina SPI_GETMENUSHOWDELAY 0x006A
#Defina SPI_SETMENUSHOWDELAY 0x006B
#Defina SPI_GETSHOWIMEUI 0x006E
#Defina SPI_SETSHOWIMEUI 0x006F
#Defina SPI_GETMOUSESPEED 0x0070
#Defina SPI_SETMOUSESPEED 0x0071
#Defina SPI_GETSCREENSAVERRUNNING 0x0072
#Defina SPI_GETDESKWALLPAPER 0x0073

#Defina SPI_GETACTIVEWINDOWTRACKING 0x1000
#Defina SPI_SETACTIVEWINDOWTRACKING 0x1001
#Defina SPI_GETMENUANIMATION 0x1002
#Defina SPI_SETMENUANIMATION 0x1003
#Defina SPI_GETCOMBOBOXANIMATION 0x1004
#Defina SPI_SETCOMBOBOXANIMATION 0x1005
#Defina SPI_GETLISTBOXSMOOTHSCROLLING 0x1006
#Defina SPI_SETLISTBOXSMOOTHSCROLLING 0x1007
#Defina SPI_GETGRADIENTCAPTIONS 0x1008
#Defina SPI_SETGRADIENTCAPTIONS 0x1009
#Defina SPI_GETKEYBOARDCUES 0x100A
#Defina SPI_SETKEYBOARDCUES 0x100B
#Defina SPI_GETMENUUNDERLINES SPI_GETKEYBOARDCUES
#Defina SPI_SETMENUUNDERLINES SPI_SETKEYBOARDCUES
#Defina SPI_GETACTIVEWNDTRKZORDER 0x100C
#Defina SPI_SETACTIVEWNDTRKZORDER 0x100D
#Defina SPI_GETHOTTRACKING 0x100E
#Defina SPI_SETHOTTRACKING 0x100F
#Defina SPI_GETMENUFADE 0x1012
#Defina SPI_SETMENUFADE 0x1013
#Defina SPI_GETSELECTIONFADE 0x1014
#Defina SPI_SETSELECTIONFADE 0x1015
#Defina SPI_GETTOOLTIPANIMATION 0x1016
#Defina SPI_SETTOOLTIPANIMATION 0x1017
#Defina SPI_GETTOOLTIPFADE 0x1018
#Defina SPI_SETTOOLTIPFADE 0x1019
#Defina SPI_GETCURSORSHADOW 0x101A
#Defina SPI_SETCURSORSHADOW 0x101B
#Defina SPI_GETMOUSESONAR 0x101C
#Defina SPI_SETMOUSESONAR 0x101D
#Defina SPI_GETMOUSECLICKLOCK 0x101E
#Defina SPI_SETMOUSECLICKLOCK 0x101F
#Defina SPI_GETMOUSEVANISH 0x1020
#Defina SPI_SETMOUSEVANISH 0x1021
#Defina SPI_GETFLATMENU 0x1022
#Defina SPI_SETFLATMENU 0x1023
#Defina SPI_GETDROPSHADOW 0x1024
#Defina SPI_SETDROPSHADOW 0x1025
#Defina SPI_GETBLOCKSENDINPUTRESETS 0x1026
#Defina SPI_SETBLOCKSENDINPUTRESETS 0x1027
#Defina SPI_GETUIEFFECTS 0x103E
#Defina SPI_SETUIEFFECTS 0x103F
#Defina SPI_GETFOREGROUNDLOCKTIMEOUT 0x2000
#Defina SPI_SETFOREGROUNDLOCKTIMEOUT 0x2001
#Defina SPI_GETACTIVEWNDTRKTIMEOUT 0x2002
#Defina SPI_SETACTIVEWNDTRKTIMEOUT 0x2003
#Defina SPI_GETFOREGROUNDFLASHCOUNT 0x2004
#Defina SPI_SETFOREGROUNDFLASHCOUNT 0x2005
#Defina SPI_GETCARETWIDTH 0x2006
#Defina SPI_SETCARETWIDTH 0x2007
#Defina SPI_GETMOUSECLICKLOCKTIME 0x2008
#Defina SPI_SETMOUSECLICKLOCKTIME 0x2009
#Defina SPI_GETFONTSMOOTHINGTYPE 0x200A
#Defina SPI_SETFONTSMOOTHINGTYPE 0x200B

#Defina FE_FONTSMOOTHINGSTANDARD 0x0001
#Defina FE_FONTSMOOTHINGCLEARTYPE 0x0002
#Defina FE_FONTSMOOTHINGDOCKING 0x8000

#Defina SPI_GETFONTSMOOTHINGCONTRAST 0x200C
#Defina SPI_SETFONTSMOOTHINGCONTRAST 0x200D
#Defina SPI_GETFOCUSBORDERWIDTH 0x200E
#Defina SPI_SETFOCUSBORDERWIDTH 0x200F
#Defina SPI_GETFOCUSBORDERHEIGHT 0x2010
#Defina SPI_SETFOCUSBORDERHEIGHT 0x2011
#Defina SPI_GETFONTSMOOTHINGORIENTATION 0x2012
#Defina SPI_SETFONTSMOOTHINGORIENTATION 0x2013

#Defina FE_FONTSMOOTHINGORIENTATIONBGR 0x0000
#Defina FE_FONTSMOOTHINGORIENTATIONRGB 0x0001

#Defina SPIF_UPDATEINIFILE 0x0001
#Defina SPIF_SENDWININICHANGE 0x0002
#Defina SPIF_SENDCHANGE SPIF_SENDWININICHANGE

#Defina METRICS_USEDEFAULT -1
#SeDefinido _WINGDI_
#SenãoDefinido NOGDI
  Tipo Estrutura tagNONCLIENTMETRICSA {
    UINT cbSize;
    Inteiro iBorderWidth;
    Inteiro iScrollWidth;
    Inteiro iScrollHeight;
    Inteiro iCaptionWidth;
    Inteiro iCaptionHeight;
    LOGFONTA lfCaptionFont;
    Inteiro iSmCaptionWidth;
    Inteiro iSmCaptionHeight;
    LOGFONTA lfSmCaptionFont;
    Inteiro iMenuWidth;
    Inteiro iMenuHeight;
    LOGFONTA lfMenuFont;
    LOGFONTA lfStatusFont;
    LOGFONTA lfMessageFont;
  } NONCLIENTMETRICSA,*PNONCLIENTMETRICSA,*LPNONCLIENTMETRICSA;

  Tipo Estrutura tagNONCLIENTMETRICSW {
    UINT cbSize;
    Inteiro iBorderWidth;
    Inteiro iScrollWidth;
    Inteiro iScrollHeight;
    Inteiro iCaptionWidth;
    Inteiro iCaptionHeight;
    LOGFONTW lfCaptionFont;
    Inteiro iSmCaptionWidth;
    Inteiro iSmCaptionHeight;
    LOGFONTW lfSmCaptionFont;
    Inteiro iMenuWidth;
    Inteiro iMenuHeight;
    LOGFONTW lfMenuFont;
    LOGFONTW lfStatusFont;
    LOGFONTW lfMessageFont;
  } NONCLIENTMETRICSW,*PNONCLIENTMETRICSW,*LPNONCLIENTMETRICSW;

#SeDefinido UNICODE
  Tipo NONCLIENTMETRICSW NONCLIENTMETRICS;
  Tipo PNONCLIENTMETRICSW PNONCLIENTMETRICS;
  Tipo LPNONCLIENTMETRICSW LPNONCLIENTMETRICS;
#Senão
  Tipo NONCLIENTMETRICSA NONCLIENTMETRICS;
  Tipo PNONCLIENTMETRICSA PNONCLIENTMETRICS;
  Tipo LPNONCLIENTMETRICSA LPNONCLIENTMETRICS;
#FimSe
#FimSe
#FimSe

#Defina ARW_BOTTOMLEFT 0x0000L
#Defina ARW_BOTTOMRIGHT 0x0001L
#Defina ARW_TOPLEFT 0x0002L
#Defina ARW_TOPRIGHT 0x0003L
#Defina ARW_STARTMASK 0x0003L
#Defina ARW_STARTRIGHT 0x0001L
#Defina ARW_STARTTOP 0x0002L

#Defina ARW_LEFT 0x0000L
#Defina ARW_RIGHT 0x0000L
#Defina ARW_UP 0x0004L
#Defina ARW_DOWN 0x0004L
#Defina ARW_HIDE 0x0008L

  Tipo Estrutura tagMINIMIZEDMETRICS {
    UINT cbSize;
    Inteiro iWidth;
    Inteiro iHorzGap;
    Inteiro iVertGap;
    Inteiro iArrange;
  } MINIMIZEDMETRICS,*PMINIMIZEDMETRICS,*LPMINIMIZEDMETRICS;

#SeDefinido _WINGDI_
#SenãoDefinido NOGDI
  Tipo Estrutura tagICONMETRICSA {
    UINT cbSize;
    Inteiro iHorzSpacing;
    Inteiro iVertSpacing;
    Inteiro iTitleWrap;
    LOGFONTA lfFont;
  } ICONMETRICSA,*PICONMETRICSA,*LPICONMETRICSA;

  Tipo Estrutura tagICONMETRICSW {
    UINT cbSize;
    Inteiro iHorzSpacing;
    Inteiro iVertSpacing;
    Inteiro iTitleWrap;
    LOGFONTW lfFont;
  } ICONMETRICSW,*PICONMETRICSW,*LPICONMETRICSW;

#SeDefinido UNICODE
  Tipo ICONMETRICSW ICONMETRICS;
  Tipo PICONMETRICSW PICONMETRICS;
  Tipo LPICONMETRICSW LPICONMETRICS;
#Senão
  Tipo ICONMETRICSA ICONMETRICS;
  Tipo PICONMETRICSA PICONMETRICS;
  Tipo LPICONMETRICSA LPICONMETRICS;
#FimSe
#FimSe
#FimSe

  Tipo Estrutura tagANIMATIONINFO {
    UINT cbSize;
    Inteiro iMinAnimate;
  } ANIMATIONINFO,*LPANIMATIONINFO;

  Tipo Estrutura tagSERIALKEYSA {
    UINT cbSize;
    DWORD dwFlags;
    LPSTR lpszActivePort;
    LPSTR lpszPort;
    UINT iBaudRate;
    UINT iPortState;
    UINT iActive;
  } SERIALKEYSA,*LPSERIALKEYSA;

  Tipo Estrutura tagSERIALKEYSW {
    UINT cbSize;
    DWORD dwFlags;
    LPWSTR lpszActivePort;
    LPWSTR lpszPort;
    UINT iBaudRate;
    UINT iPortState;
    UINT iActive;
  } SERIALKEYSW,*LPSERIALKEYSW;

#SeDefinido UNICODE
  Tipo SERIALKEYSW SERIALKEYS;
  Tipo LPSERIALKEYSW LPSERIALKEYS;
#Senão
  Tipo SERIALKEYSA SERIALKEYS;
  Tipo LPSERIALKEYSA LPSERIALKEYS;
#FimSe

#Defina SERKF_SERIALKEYSON 0x00000001
#Defina SERKF_AVAILABLE 0x00000002
#Defina SERKF_INDICATOR 0x00000004

  Tipo Estrutura tagHIGHCONTRASTA {
    UINT cbSize;
    DWORD dwFlags;
    LPSTR lpszDefaultScheme;
  } HIGHCONTRASTA,*LPHIGHCONTRASTA;

  Tipo Estrutura tagHIGHCONTRASTW {
    UINT cbSize;
    DWORD dwFlags;
    LPWSTR lpszDefaultScheme;
  } HIGHCONTRASTW,*LPHIGHCONTRASTW;

#SeDefinido UNICODE
  Tipo HIGHCONTRASTW HIGHCONTRAST;
  Tipo LPHIGHCONTRASTW LPHIGHCONTRAST;
#Senão
  Tipo HIGHCONTRASTA HIGHCONTRAST;
  Tipo LPHIGHCONTRASTA LPHIGHCONTRAST;
#FimSe

#Defina HCF_HIGHCONTRASTON 0x00000001
#Defina HCF_AVAILABLE 0x00000002
#Defina HCF_HOTKEYACTIVE 0x00000004
#Defina HCF_CONFIRMHOTKEY 0x00000008
#Defina HCF_HOTKEYSOUND 0x00000010
#Defina HCF_INDICATOR 0x00000020
#Defina HCF_HOTKEYAVAILABLE 0x00000040
#Defina HCF_LOGONDESKTOP 0x00000100
#Defina HCF_DEFAULTDESKTOP 0x00000200

#Defina CDS_UPDATEREGISTRY 0x00000001
#Defina CDS_TEST 0x00000002
#Defina CDS_FULLSCREEN 0x00000004
#Defina CDS_GLOBAL 0x00000008
#Defina CDS_SET_PRIMARY 0x00000010
#Defina CDS_VIDEOPARAMETERS 0x00000020
#Defina CDS_RESET 0x40000000
#Defina CDS_NORESET 0x10000000

//gr #Inclua <tvout.h>

#Defina DISP_CHANGE_SUCCESSFUL 0
#Defina DISP_CHANGE_RESTART 1
#Defina DISP_CHANGE_FAILED -1
#Defina DISP_CHANGE_BADMODE -2
#Defina DISP_CHANGE_NOTUPDATED -3
#Defina DISP_CHANGE_BADFLAGS -4
#Defina DISP_CHANGE_BADPARAM -5
#Defina DISP_CHANGE_BADDUALVIEW -6

#SeDefinido _WINGDI_
#SenãoDefinido NOGDI

#SeDefinido UNICODE
#Defina ChangeDisplaySettings ChangeDisplaySettingsW
#Defina ChangeDisplaySettingsEx ChangeDisplaySettingsExW
#Defina EnumDisplaySettings EnumDisplaySettingsW
#Defina EnumDisplaySettingsEx EnumDisplaySettingsExW
#Defina EnumDisplayDevices EnumDisplayDevicesW
#Senão
#Defina ChangeDisplaySettings ChangeDisplaySettingsA
#Defina ChangeDisplaySettingsEx ChangeDisplaySettingsExA
#Defina EnumDisplaySettings EnumDisplaySettingsA
#Defina EnumDisplaySettingsEx EnumDisplaySettingsExA
#Defina EnumDisplayDevices EnumDisplayDevicesA
#FimSe

  WINUSERAPI LONG WINAPI ChangeDisplaySettingsA(LPDEVMODEA lpDevMode,DWORD dwFlags);
  WINUSERAPI LONG WINAPI ChangeDisplaySettingsW(LPDEVMODEW lpDevMode,DWORD dwFlags);
  WINUSERAPI LONG WINAPI ChangeDisplaySettingsExA(LPCSTR lpszDeviceName,LPDEVMODEA lpDevMode,HWND hwnd,DWORD dwflags,LPVOID lParam);
  WINUSERAPI LONG WINAPI ChangeDisplaySettingsExW(LPCWSTR lpszDeviceName,LPDEVMODEW lpDevMode,HWND hwnd,DWORD dwflags,LPVOID lParam);

#Defina ENUM_CURRENT_SETTINGS ((DWORD)-1)
#Defina ENUM_REGISTRY_SETTINGS ((DWORD)-2)

  WINUSERAPI WINBOOL WINAPI EnumDisplaySettingsA(LPCSTR lpszDeviceName,DWORD iModeNum,LPDEVMODEA lpDevMode);
  WINUSERAPI WINBOOL WINAPI EnumDisplaySettingsW(LPCWSTR lpszDeviceName,DWORD iModeNum,LPDEVMODEW lpDevMode);
  WINUSERAPI WINBOOL WINAPI EnumDisplaySettingsExA(LPCSTR lpszDeviceName,DWORD iModeNum,LPDEVMODEA lpDevMode,DWORD dwFlags);
  WINUSERAPI WINBOOL WINAPI EnumDisplaySettingsExW(LPCWSTR lpszDeviceName,DWORD iModeNum,LPDEVMODEW lpDevMode,DWORD dwFlags);

#Defina EDS_RAWMODE 0x00000002

  WINUSERAPI WINBOOL WINAPI EnumDisplayDevicesA(LPCSTR lpDevice,DWORD iDevNum,PDISPLAY_DEVICEA lpDisplayDevice,DWORD dwFlags);
  WINUSERAPI WINBOOL WINAPI EnumDisplayDevicesW(LPCWSTR lpDevice,DWORD iDevNum,PDISPLAY_DEVICEW lpDisplayDevice,DWORD dwFlags);
#FimSe
#FimSe

#SeDefinido UNICODE
#Defina SystemParametersInfo SystemParametersInfoW
#Senão
#Defina SystemParametersInfo SystemParametersInfoA
#FimSe

  WINUSERAPI WINBOOL WINAPI SystemParametersInfoA(UINT uiAction,UINT uiParam,PVOID pvParam,UINT fWinIni);
  WINUSERAPI WINBOOL WINAPI SystemParametersInfoW(UINT uiAction,UINT uiParam,PVOID pvParam,UINT fWinIni);
#FimSe

  Tipo Estrutura tagFILTERKEYS {
    UINT cbSize;
    DWORD dwFlags;
    DWORD iWaitMSec;
    DWORD iDelayMSec;
    DWORD iRepeatMSec;
    DWORD iBounceMSec;
  } FILTERKEYS,*LPFILTERKEYS;

#Defina FKF_FILTERKEYSON 0x00000001
#Defina FKF_AVAILABLE 0x00000002
#Defina FKF_HOTKEYACTIVE 0x00000004
#Defina FKF_CONFIRMHOTKEY 0x00000008
#Defina FKF_HOTKEYSOUND 0x00000010
#Defina FKF_INDICATOR 0x00000020
#Defina FKF_CLICKON 0x00000040

  Tipo Estrutura tagSTICKYKEYS {
    UINT cbSize;
    DWORD dwFlags;
  } STICKYKEYS,*LPSTICKYKEYS;

#Defina SKF_STICKYKEYSON 0x00000001
#Defina SKF_AVAILABLE 0x00000002
#Defina SKF_HOTKEYACTIVE 0x00000004
#Defina SKF_CONFIRMHOTKEY 0x00000008
#Defina SKF_HOTKEYSOUND 0x00000010
#Defina SKF_INDICATOR 0x00000020
#Defina SKF_AUDIBLEFEEDBACK 0x00000040
#Defina SKF_TRISTATE 0x00000080
#Defina SKF_TWOKEYSOFF 0x00000100
#Defina SKF_LALTLATCHED 0x10000000
#Defina SKF_LCTLLATCHED 0x04000000
#Defina SKF_LSHIFTLATCHED 0x01000000
#Defina SKF_RALTLATCHED 0x20000000
#Defina SKF_RCTLLATCHED 0x08000000
#Defina SKF_RSHIFTLATCHED 0x02000000
#Defina SKF_LWINLATCHED 0x40000000
#Defina SKF_RWINLATCHED 0x80000000
#Defina SKF_LALTLOCKED 0x00100000
#Defina SKF_LCTLLOCKED 0x00040000
#Defina SKF_LSHIFTLOCKED 0x00010000
#Defina SKF_RALTLOCKED 0x00200000
#Defina SKF_RCTLLOCKED 0x00080000
#Defina SKF_RSHIFTLOCKED 0x00020000
#Defina SKF_LWINLOCKED 0x00400000
#Defina SKF_RWINLOCKED 0x00800000

  Tipo Estrutura tagMOUSEKEYS {
    UINT cbSize;
    DWORD dwFlags;
    DWORD iMaxSpeed;
    DWORD iTimeToMaxSpeed;
    DWORD iCtrlSpeed;
    DWORD dwReserved1;
    DWORD dwReserved2;
  } MOUSEKEYS,*LPMOUSEKEYS;

#Defina MKF_MOUSEKEYSON 0x00000001
#Defina MKF_AVAILABLE 0x00000002
#Defina MKF_HOTKEYACTIVE 0x00000004
#Defina MKF_CONFIRMHOTKEY 0x00000008
#Defina MKF_HOTKEYSOUND 0x00000010
#Defina MKF_INDICATOR 0x00000020
#Defina MKF_MODIFIERS 0x00000040
#Defina MKF_REPLACENUMBERS 0x00000080
#Defina MKF_LEFTBUTTONSEL 0x10000000
#Defina MKF_RIGHTBUTTONSEL 0x20000000
#Defina MKF_LEFTBUTTONDOWN 0x01000000
#Defina MKF_RIGHTBUTTONDOWN 0x02000000
#Defina MKF_MOUSEMODE 0x80000000

  Tipo Estrutura tagACCESSTIMEOUT {
    UINT cbSize;
    DWORD dwFlags;
    DWORD iTimeOutMSec;
  } ACCESSTIMEOUT,*LPACCESSTIMEOUT;

#Defina ATF_TIMEOUTON 0x00000001
#Defina ATF_ONOFFFEEDBACK 0x00000002

#Defina SSGF_NONE 0
#Defina SSGF_DISPLAY 3

#Defina SSTF_NONE 0
#Defina SSTF_CHARS 1
#Defina SSTF_BORDER 2
#Defina SSTF_DISPLAY 3

#Defina SSWF_NONE 0
#Defina SSWF_TITLE 1
#Defina SSWF_WINDOW 2
#Defina SSWF_DISPLAY 3
#Defina SSWF_CUSTOM 4

  Tipo Estrutura tagSOUNDSENTRYA {
    UINT cbSize;
    DWORD dwFlags;
    DWORD iFSTextEffect;
    DWORD iFSTextEffectMSec;
    DWORD iFSTextEffectColorBits;
    DWORD iFSGrafEffect;
    DWORD iFSGrafEffectMSec;
    DWORD iFSGrafEffectColor;
    DWORD iWindowsEffect;
    DWORD iWindowsEffectMSec;
    LPSTR lpszWindowsEffectDLL;
    DWORD iWindowsEffectOrdinal;
  } SOUNDSENTRYA,*LPSOUNDSENTRYA;

  Tipo Estrutura tagSOUNDSENTRYW {
    UINT cbSize;
    DWORD dwFlags;
    DWORD iFSTextEffect;
    DWORD iFSTextEffectMSec;
    DWORD iFSTextEffectColorBits;
    DWORD iFSGrafEffect;
    DWORD iFSGrafEffectMSec;
    DWORD iFSGrafEffectColor;
    DWORD iWindowsEffect;
    DWORD iWindowsEffectMSec;
    LPWSTR lpszWindowsEffectDLL;
    DWORD iWindowsEffectOrdinal;
  } SOUNDSENTRYW,*LPSOUNDSENTRYW;

#SeDefinido UNICODE
  Tipo SOUNDSENTRYW SOUNDSENTRY;
  Tipo LPSOUNDSENTRYW LPSOUNDSENTRY;
#Senão
  Tipo SOUNDSENTRYA SOUNDSENTRY;
  Tipo LPSOUNDSENTRYA LPSOUNDSENTRY;
#FimSe

#Defina SSF_SOUNDSENTRYON 0x00000001
#Defina SSF_AVAILABLE 0x00000002
#Defina SSF_INDICATOR 0x00000004

  Tipo Estrutura tagTOGGLEKEYS {
    UINT cbSize;
    DWORD dwFlags;
  } TOGGLEKEYS,*LPTOGGLEKEYS;

#Defina TKF_TOGGLEKEYSON 0x00000001
#Defina TKF_AVAILABLE 0x00000002
#Defina TKF_HOTKEYACTIVE 0x00000004
#Defina TKF_CONFIRMHOTKEY 0x00000008
#Defina TKF_HOTKEYSOUND 0x00000010
#Defina TKF_INDICATOR 0x00000020

  WINUSERAPI VOID WINAPI SetDebugErrorLevel(DWORD dwLevel);

#Defina SLE_ERROR 0x00000001
#Defina SLE_MINORERROR 0x00000002
#Defina SLE_WARNING 0x00000003

  WINUSERAPI VOID WINAPI SetLastErrorEx(DWORD dwErrCode,DWORD dwType);
  WINUSERAPI Inteiro WINAPI InternalGetWindowText(HWND hWnd,LPWSTR pString,Inteiro cchMaxCount);

#SeDefinido WINNT
  WINUSERAPI WINBOOL WINAPI EndTask(HWND hWnd,WINBOOL fShutDown,WINBOOL fForce);
#FimSe

#Defina MONITOR_DEFAULTTONULL 0x00000000
#Defina MONITOR_DEFAULTTOPRIMARY 0x00000001
#Defina MONITOR_DEFAULTTONEAREST 0x00000002

  WINUSERAPI HMONITOR WINAPI MonitorFromPoint(POINT pt,DWORD dwFlags);
  WINUSERAPI HMONITOR WINAPI MonitorFromRect(LPCRECT lprc,DWORD dwFlags);
  WINUSERAPI HMONITOR WINAPI MonitorFromWindow(HWND hwnd,DWORD dwFlags);

#Defina MONITORINFOF_PRIMARY 0x00000001

#SenãoDefinido CCHDEVICENAME
#Defina CCHDEVICENAME 32
#FimSe

  Tipo Estrutura tagMONITORINFO {
    DWORD cbSize;
    RECT rcMonitor;
    RECT rcWork;
    DWORD dwFlags;
  } MONITORINFO,*LPMONITORINFO;

#SeDefinido __cplusplus
  Tipo Estrutura tagMONITORINFOEXA : public tagMONITORINFO {
    CHAR szDevice[CCHDEVICENAME];
  } MONITORINFOEXA,*LPMONITORINFOEXA;

  Tipo Estrutura tagMONITORINFOEXW : public tagMONITORINFO {
    WCHAR szDevice[CCHDEVICENAME];
  } MONITORINFOEXW,*LPMONITORINFOEXW;

#SeDefinido UNICODE
  Tipo MONITORINFOEXW MONITORINFOEX;
  Tipo LPMONITORINFOEXW LPMONITORINFOEX;
#Senão
  Tipo MONITORINFOEXA MONITORINFOEX;
  Tipo LPMONITORINFOEXA LPMONITORINFOEX;
#FimSe
#Senão
  Tipo Estrutura tagMONITORINFOEXA {
    MONITORINFO mi;
    CHAR szDevice[CCHDEVICENAME];
  } MONITORINFOEXA,*LPMONITORINFOEXA;

  Tipo Estrutura tagMONITORINFOEXW {
    MONITORINFO mi;
    WCHAR szDevice[CCHDEVICENAME];
  } MONITORINFOEXW,*LPMONITORINFOEXW;
#SeDefinido UNICODE
  Tipo MONITORINFOEXW MONITORINFOEX;
  Tipo LPMONITORINFOEXW LPMONITORINFOEX;
#Senão
  Tipo MONITORINFOEXA MONITORINFOEX;
  Tipo LPMONITORINFOEXA LPMONITORINFOEX;
#FimSe
#FimSe

#SeDefinido UNICODE 
#Defina GetMonitorInfo GetMonitorInfoW
#Senão
#Defina GetMonitorInfo GetMonitorInfoA
#FimSe

  WINUSERAPI WINBOOL WINAPI GetMonitorInfoA(HMONITOR hMonitor,LPMONITORINFO lpmi);
  WINUSERAPI WINBOOL WINAPI GetMonitorInfoW(HMONITOR hMonitor,LPMONITORINFO lpmi);

  Tipo WINBOOL (CALLBACK *MONITORENUMPROC)(HMONITOR,HDC,LPRECT,LPARAM);

  WINUSERAPI WINBOOL WINAPI EnumDisplayMonitors(HDC hdc,LPCRECT lprcClip,MONITORENUMPROC lpfnEnum,LPARAM dwData);

#SenãoDefinido NOWINABLE
  WINUSERAPI VOID WINAPI NotifyWinEvent(DWORD event,HWND hwnd,LONG idObject,LONG idChild);

  Tipo VOID (CALLBACK *WINEVENTPROC)(HWINEVENTHOOK hWinEventHook,DWORD event,HWND hwnd,LONG idObject,LONG idChild,DWORD idEventThread,DWORD dwmsEventTime);

  WINUSERAPI HWINEVENTHOOK WINAPI SetWinEventHook(DWORD eventMin,DWORD eventMax,HMODULE hmodWinEventProc,WINEVENTPROC pfnWinEventProc,DWORD idProcess,DWORD idThread,DWORD dwFlags);
  WINUSERAPI WINBOOL WINAPI IsWinEventHookInstalled(DWORD event);

#Defina WINEVENT_OUTOFCONTEXT 0x0000
#Defina WINEVENT_SKIPOWNTHREAD 0x0001
#Defina WINEVENT_SKIPOWNPROCESS 0x0002
#Defina WINEVENT_INCONTEXT 0x0004

  WINUSERAPI WINBOOL WINAPI UnhookWinEvent(HWINEVENTHOOK hWinEventHook);

#Defina CHILDID_SELF 0
#Defina INDEXID_OBJECT 0
#Defina INDEXID_CONTAINER 0

#Defina OBJID_WINDOW ((LONG)0x00000000)
#Defina OBJID_SYSMENU ((LONG)0xFFFFFFFF)
#Defina OBJID_TITLEBAR ((LONG)0xFFFFFFFE)
#Defina OBJID_MENU ((LONG)0xFFFFFFFD)
#Defina OBJID_CLIENT ((LONG)0xFFFFFFFC)
#Defina OBJID_VSCROLL ((LONG)0xFFFFFFFB)
#Defina OBJID_HSCROLL ((LONG)0xFFFFFFFA)
#Defina OBJID_SIZEGRIP ((LONG)0xFFFFFFF9)
#Defina OBJID_CARET ((LONG)0xFFFFFFF8)
#Defina OBJID_CURSOR ((LONG)0xFFFFFFF7)
#Defina OBJID_ALERT ((LONG)0xFFFFFFF6)
#Defina OBJID_SOUND ((LONG)0xFFFFFFF5)
#Defina OBJID_QUERYCLASSNAMEIDX ((LONG)0xFFFFFFF4)
#Defina OBJID_NATIVEOM ((LONG)0xFFFFFFF0)

#Defina EVENT_MIN 0x00000001
#Defina EVENT_MAX 0x7FFFFFFF

#Defina EVENT_SYSTEM_SOUND 0x0001
#Defina EVENT_SYSTEM_ALERT 0x0002
#Defina EVENT_SYSTEM_FOREGROUND 0x0003
#Defina EVENT_SYSTEM_MENUSTART 0x0004
#Defina EVENT_SYSTEM_MENUEND 0x0005
#Defina EVENT_SYSTEM_MENUPOPUPSTART 0x0006
#Defina EVENT_SYSTEM_MENUPOPUPEND 0x0007
#Defina EVENT_SYSTEM_CAPTURESTART 0x0008
#Defina EVENT_SYSTEM_CAPTUREEND 0x0009
#Defina EVENT_SYSTEM_MOVESIZESTART 0x000A
#Defina EVENT_SYSTEM_MOVESIZEEND 0x000B
#Defina EVENT_SYSTEM_CONTEXTHELPSTART 0x000C
#Defina EVENT_SYSTEM_CONTEXTHELPEND 0x000D
#Defina EVENT_SYSTEM_DRAGDROPSTART 0x000E
#Defina EVENT_SYSTEM_DRAGDROPEND 0x000F
#Defina EVENT_SYSTEM_DIALOGSTART 0x0010
#Defina EVENT_SYSTEM_DIALOGEND 0x0011
#Defina EVENT_SYSTEM_SCROLLINGSTART 0x0012
#Defina EVENT_SYSTEM_SCROLLINGEND 0x0013
#Defina EVENT_SYSTEM_SWITCHSTART 0x0014
#Defina EVENT_SYSTEM_SWITCHEND 0x0015
#Defina EVENT_SYSTEM_MINIMIZESTART 0x0016
#Defina EVENT_SYSTEM_MINIMIZEEND 0x0017

#Defina EVENT_CONSOLE_CARET 0x4001
#Defina EVENT_CONSOLE_UPDATE_REGION 0x4002
#Defina EVENT_CONSOLE_UPDATE_SIMPLE 0x4003
#Defina EVENT_CONSOLE_UPDATE_SCROLL 0x4004
#Defina EVENT_CONSOLE_LAYOUT 0x4005
#Defina EVENT_CONSOLE_START_APPLICATION 0x4006
#Defina EVENT_CONSOLE_END_APPLICATION 0x4007

#Defina CONSOLE_APPLICATION_16BIT 0x0001

#Defina CONSOLE_CARET_SELECTION 0x0001
#Defina CONSOLE_CARET_VISIBLE 0x0002

#Defina EVENT_OBJECT_CREATE 0x8000
#Defina EVENT_OBJECT_DESTROY 0x8001
#Defina EVENT_OBJECT_SHOW 0x8002
#Defina EVENT_OBJECT_HIDE 0x8003
#Defina EVENT_OBJECT_REORDER 0x8004

#Defina EVENT_OBJECT_FOCUS 0x8005
#Defina EVENT_OBJECT_SELECTION 0x8006
#Defina EVENT_OBJECT_SELECTIONADD 0x8007
#Defina EVENT_OBJECT_SELECTIONREMOVE 0x8008
#Defina EVENT_OBJECT_SELECTIONWITHIN 0x8009

#Defina EVENT_OBJECT_STATECHANGE 0x800A

#Defina EVENT_OBJECT_LOCATIONCHANGE 0x800B

#Defina EVENT_OBJECT_NAMECHANGE 0x800C
#Defina EVENT_OBJECT_DESCRIPTIONCHANGE 0x800D
#Defina EVENT_OBJECT_VALUECHANGE 0x800E
#Defina EVENT_OBJECT_PARENTCHANGE 0x800F
#Defina EVENT_OBJECT_HELPCHANGE 0x8010
#Defina EVENT_OBJECT_DEFACTIONCHANGE 0x8011
#Defina EVENT_OBJECT_ACCELERATORCHANGE 0x8012

#Defina SOUND_SYSTEM_STARTUP 1
#Defina SOUND_SYSTEM_SHUTDOWN 2
#Defina SOUND_SYSTEM_BEEP 3
#Defina SOUND_SYSTEM_ERROR 4
#Defina SOUND_SYSTEM_QUESTION 5
#Defina SOUND_SYSTEM_WARNING 6
#Defina SOUND_SYSTEM_INFORMATION 7
#Defina SOUND_SYSTEM_MAXIMIZE 8
#Defina SOUND_SYSTEM_MINIMIZE 9
#Defina SOUND_SYSTEM_RESTOREUP 10
#Defina SOUND_SYSTEM_RESTOREDOWN 11
#Defina SOUND_SYSTEM_APPSTART 12
#Defina SOUND_SYSTEM_FAULT 13
#Defina SOUND_SYSTEM_APPEND 14
#Defina SOUND_SYSTEM_MENUCOMMAND 15
#Defina SOUND_SYSTEM_MENUPOPUP 16
#Defina CSOUND_SYSTEM 16

#Defina ALERT_SYSTEM_INFORMATIONAL 1
#Defina ALERT_SYSTEM_WARNING 2
#Defina ALERT_SYSTEM_ERROR 3
#Defina ALERT_SYSTEM_QUERY 4
#Defina ALERT_SYSTEM_CRITICAL 5
#Defina CALERT_SYSTEM 6

  Tipo Estrutura tagGUITHREADINFO {
    DWORD cbSize;
    DWORD flags;
    HWND hwndActive;
    HWND hwndFocus;
    HWND hwndCapture;
    HWND hwndMenuOwner;
    HWND hwndMoveSize;
    HWND hwndCaret;
    RECT rcCaret;
  } GUITHREADINFO,*PGUITHREADINFO,*LPGUITHREADINFO;

#Defina GUI_CARETBLINKING 0x00000001
#Defina GUI_INMOVESIZE 0x00000002
#Defina GUI_INMENUMODE 0x00000004
#Defina GUI_SYSTEMMENUMODE 0x00000008
#Defina GUI_POPUPMENUMODE 0x00000010
#Defina GUI_16BITTASK 0x00000020

#SeDefinido UNICODE
#Defina GetWindowModuleFileName GetWindowModuleFileNameW
#Senão
#Defina GetWindowModuleFileName GetWindowModuleFileNameA
#FimSe

  WINUSERAPI WINBOOL WINAPI GetGUIThreadInfo(DWORD idThread,PGUITHREADINFO pgui);
  WINUSERAPI UINT WINAPI GetWindowModuleFileNameA(HWND hwnd,LPSTR pszFileName,UINT cchFileNameMax);
  WINUSERAPI UINT WINAPI GetWindowModuleFileNameW(HWND hwnd,LPWSTR pszFileName,UINT cchFileNameMax);

#SenãoDefinido NO_STATE_FLAGS
#Defina STATE_SYSTEM_UNAVAILABLE 0x00000001
#Defina STATE_SYSTEM_SELECTED 0x00000002
#Defina STATE_SYSTEM_FOCUSED 0x00000004
#Defina STATE_SYSTEM_PRESSED 0x00000008
#Defina STATE_SYSTEM_CHECKED 0x00000010
#Defina STATE_SYSTEM_MIXED 0x00000020
#Defina STATE_SYSTEM_INDETERMINATE STATE_SYSTEM_MIXED
#Defina STATE_SYSTEM_READONLY 0x00000040
#Defina STATE_SYSTEM_HOTTRACKED 0x00000080
#Defina STATE_SYSTEM_DEFAULT 0x00000100
#Defina STATE_SYSTEM_EXPANDED 0x00000200
#Defina STATE_SYSTEM_COLLAPSED 0x00000400
#Defina STATE_SYSTEM_BUSY 0x00000800
#Defina STATE_SYSTEM_FLOATING 0x00001000
#Defina STATE_SYSTEM_MARQUEED 0x00002000
#Defina STATE_SYSTEM_ANIMATED 0x00004000
#Defina STATE_SYSTEM_INVISIBLE 0x00008000
#Defina STATE_SYSTEM_OFFSCREEN 0x00010000
#Defina STATE_SYSTEM_SIZEABLE 0x00020000
#Defina STATE_SYSTEM_MOVEABLE 0x00040000
#Defina STATE_SYSTEM_SELFVOICING 0x00080000
#Defina STATE_SYSTEM_FOCUSABLE 0x00100000
#Defina STATE_SYSTEM_SELECTABLE 0x00200000
#Defina STATE_SYSTEM_LINKED 0x00400000
#Defina STATE_SYSTEM_TRAVERSED 0x00800000
#Defina STATE_SYSTEM_MULTISELECTABLE 0x01000000
#Defina STATE_SYSTEM_EXTSELECTABLE 0x02000000
#Defina STATE_SYSTEM_ALERT_LOW 0x04000000
#Defina STATE_SYSTEM_ALERT_MEDIUM 0x08000000
#Defina STATE_SYSTEM_ALERT_HIGH 0x10000000
#Defina STATE_SYSTEM_PROTECTED 0x20000000
#Defina STATE_SYSTEM_VALID 0x3FFFFFFF
#FimSe

#Defina CCHILDREN_TITLEBAR 5
#Defina CCHILDREN_SCROLLBAR 5

  Tipo Estrutura tagCURSORINFO {
    DWORD cbSize;
    DWORD flags;
    HCURSOR hCursor;
    POINT ptScreenPos;
  } CURSORINFO,*PCURSORINFO,*LPCURSORINFO;

#Defina CURSOR_SHOWING 0x00000001

  WINUSERAPI WINBOOL WINAPI GetCursorInfo(PCURSORINFO pci);

  Tipo Estrutura tagWINDOWINFO {
    DWORD cbSize;
    RECT rcWindow;
    RECT rcClient;
    DWORD dwStyle;
    DWORD dwExStyle;
    DWORD dwWindowStatus;
    UINT cxWindowBorders;
    UINT cyWindowBorders;
    ATOM atomWindowType;
    WORD wCreatorVersion;
  } WINDOWINFO,*PWINDOWINFO,*LPWINDOWINFO;

#Defina WS_ACTIVECAPTION 0x0001

  WINUSERAPI WINBOOL WINAPI GetWindowInfo(HWND hwnd,PWINDOWINFO pwi);

  Tipo Estrutura tagTITLEBARINFO {
    DWORD cbSize;
    RECT rcTitleBar;
    DWORD rgstate[CCHILDREN_TITLEBAR + 1];
  } TITLEBARINFO,*PTITLEBARINFO,*LPTITLEBARINFO;

  WINUSERAPI WINBOOL WINAPI GetTitleBarInfo(HWND hwnd,PTITLEBARINFO pti);

  Tipo Estrutura tagMENUBARINFO {
    DWORD cbSize;
    RECT rcBar;
    HMENU hMenu;
    HWND hwndMenu;
    WINBOOL fBarFocused:1;
    WINBOOL fFocused:1;
  } MENUBARINFO,*PMENUBARINFO,*LPMENUBARINFO;

  WINUSERAPI WINBOOL WINAPI GetMenuBarInfo(HWND hwnd,LONG idObject,LONG idItem,PMENUBARINFO pmbi);

  Tipo Estrutura tagSCROLLBARINFO {
    DWORD cbSize;
    RECT rcScrollBar;
    Inteiro dxyLineButton;
    Inteiro xyThumbTop;
    Inteiro xyThumbBottom;
    Inteiro reserved;
    DWORD rgstate[CCHILDREN_SCROLLBAR + 1];
  } SCROLLBARINFO,*PSCROLLBARINFO,*LPSCROLLBARINFO;

  WINUSERAPI WINBOOL WINAPI GetScrollBarInfo(HWND hwnd,LONG idObject,PSCROLLBARINFO psbi);

  Tipo Estrutura tagCOMBOBOXINFO {
    DWORD cbSize;
    RECT rcItem;
    RECT rcButton;
    DWORD stateButton;
    HWND hwndCombo;
    HWND hwndItem;
    HWND hwndList;
  } COMBOBOXINFO,*PCOMBOBOXINFO,*LPCOMBOBOXINFO;

  WINUSERAPI WINBOOL WINAPI GetComboBoxInfo(HWND hwndCombo,PCOMBOBOXINFO pcbi);

#Defina GA_PARENT 1
#Defina GA_ROOT 2
#Defina GA_ROOTOWNER 3

  WINUSERAPI HWND WINAPI GetAncestor(HWND hwnd,UINT gaFlags);
  WINUSERAPI HWND WINAPI RealChildWindowFromPoint(HWND hwndParent,POINT ptParentClientCoords);
  WINUSERAPI UINT WINAPI RealGetWindowClassA(HWND hwnd,LPSTR ptszClassName,UINT cchClassNameMax);
  WINUSERAPI UINT WINAPI RealGetWindowClassW(HWND hwnd,LPWSTR ptszClassName,UINT cchClassNameMax);
#SeDefinido UNICODE
#Defina RealGetWindowClass RealGetWindowClassW
#Senão
#Defina RealGetWindowClass RealGetWindowClassA
#FimSe

  Tipo Estrutura tagALTTABINFO {
    DWORD cbSize;
    Inteiro cItems;
    Inteiro cColumns;
    Inteiro cRows;
    Inteiro iColFocus;
    Inteiro iRowFocus;
    Inteiro cxItem;
    Inteiro cyItem;
    POINT ptStart;
  } ALTTABINFO,*PALTTABINFO,*LPALTTABINFO;

#SeDefinido UNICODE
#Defina GetAltTabInfo GetAltTabInfoW
#Senão
#Defina GetAltTabInfo GetAltTabInfoA
#FimSe

  WINUSERAPI WINBOOL WINAPI GetAltTabInfoA(HWND hwnd,Inteiro iItem,PALTTABINFO pati,LPSTR pszItemText,UINT cchItemText);
  WINUSERAPI WINBOOL WINAPI GetAltTabInfoW(HWND hwnd,Inteiro iItem,PALTTABINFO pati,LPWSTR pszItemText,UINT cchItemText);
  WINUSERAPI DWORD WINAPI GetListBoxInfo(HWND hwnd);
#FimSe

  WINUSERAPI WINBOOL WINAPI LockWorkStation(VOID);
  WINUSERAPI WINBOOL WINAPI UserHandleGrantAccess(HANDLE hUserHandle,HANDLE hJob,WINBOOL bGrant);

  DECLARE_HANDLE(HRAWINPUT);

#Defina GET_RAWINPUT_CODE_WPARAM(wParam) ((wParam) & 0xff)

#Defina RIM_INPUT 0
#Defina RIM_INPUTSINK 1

  Tipo Estrutura tagRAWINPUTHEADER {
    DWORD dwType;
    DWORD dwSize;
    HANDLE hDevice;
    WPARAM wParam;
  } RAWINPUTHEADER,*PRAWINPUTHEADER,*LPRAWINPUTHEADER;

#Defina RIM_TYPEMOUSE 0
#Defina RIM_TYPEKEYBOARD 1
#Defina RIM_TYPEHID 2

  Tipo Estrutura tagRAWMOUSE {
    USHORT usFlags;
    União {
      ULONG ulButtons;
      Estrutura {
	USHORT usButtonFlags;
	USHORT usButtonData;
      };
    };
    ULONG ulRawButtons;
    LONG lLastX;
    LONG lLastY;
    ULONG ulExtraInformation;
  } RAWMOUSE,*PRAWMOUSE,*LPRAWMOUSE;

#Defina RI_MOUSE_LEFT_BUTTON_DOWN 0x0001
#Defina RI_MOUSE_LEFT_BUTTON_UP 0x0002
#Defina RI_MOUSE_RIGHT_BUTTON_DOWN 0x0004
#Defina RI_MOUSE_RIGHT_BUTTON_UP 0x0008
#Defina RI_MOUSE_MIDDLE_BUTTON_DOWN 0x0010
#Defina RI_MOUSE_MIDDLE_BUTTON_UP 0x0020

#Defina RI_MOUSE_BUTTON_1_DOWN RI_MOUSE_LEFT_BUTTON_DOWN
#Defina RI_MOUSE_BUTTON_1_UP RI_MOUSE_LEFT_BUTTON_UP
#Defina RI_MOUSE_BUTTON_2_DOWN RI_MOUSE_RIGHT_BUTTON_DOWN
#Defina RI_MOUSE_BUTTON_2_UP RI_MOUSE_RIGHT_BUTTON_UP
#Defina RI_MOUSE_BUTTON_3_DOWN RI_MOUSE_MIDDLE_BUTTON_DOWN
#Defina RI_MOUSE_BUTTON_3_UP RI_MOUSE_MIDDLE_BUTTON_UP

#Defina RI_MOUSE_BUTTON_4_DOWN 0x0040
#Defina RI_MOUSE_BUTTON_4_UP 0x0080
#Defina RI_MOUSE_BUTTON_5_DOWN 0x0100
#Defina RI_MOUSE_BUTTON_5_UP 0x0200

#Defina RI_MOUSE_WHEEL 0x0400

#Defina MOUSE_MOVE_RELATIVE 0
#Defina MOUSE_MOVE_ABSOLUTE 1
#Defina MOUSE_VIRTUAL_DESKTOP 0x02
#Defina MOUSE_ATTRIBUTES_CHANGED 0x04

  Tipo Estrutura tagRAWKEYBOARD {
    USHORT MakeCode;
    USHORT Flags;
    USHORT Reserved;
    USHORT VKey;
    UINT Message;
    ULONG ExtraInformation;
  } RAWKEYBOARD,*PRAWKEYBOARD,*LPRAWKEYBOARD;

#Defina KEYBOARD_OVERRUN_MAKE_CODE 0xFF

#Defina RI_KEY_MAKE 0
#Defina RI_KEY_BREAK 1
#Defina RI_KEY_E0 2
#Defina RI_KEY_E1 4
#Defina RI_KEY_TERMSRV_SET_LED 8
#Defina RI_KEY_TERMSRV_SHADOW 0x10

  Tipo Estrutura tagRAWHID {
    DWORD dwSizeHid;
    DWORD dwCount;
    BYTE bRawData[1];
  } RAWHID,*PRAWHID,*LPRAWHID;

  Tipo Estrutura tagRAWINPUT {
    RAWINPUTHEADER header;
    União {
      RAWMOUSE mouse;
      RAWKEYBOARD keyboard;
      RAWHID hid;
    } data;
  } RAWINPUT,*PRAWINPUT,*LPRAWINPUT;

#SeDefinido _WIN64
#Defina RAWINPUT_ALIGN(x) (((x) + TamanhoDe(QWORD) - 1) & ~(TamanhoDe(QWORD) - 1))
#Senão
#Defina RAWINPUT_ALIGN(x) (((x) + TamanhoDe(DWORD) - 1) & ~(TamanhoDe(DWORD) - 1))
#FimSe

#Defina NEXTRAWINPUTBLOCK(ptr) ((PRAWINPUT)RAWINPUT_ALIGN((ULONG_PTR)((PBYTE)(ptr) + (ptr)->header.dwSize)))

#Defina RID_INPUT 0x10000003
#Defina RID_HEADER 0x10000005

  WINUSERAPI UINT WINAPI GetRawInputData(HRAWINPUT hRawInput,UINT uiCommand,LPVOID pData,PUINT pcbSize,UINT cbSizeHeader);

#Defina RIDI_PREPARSEDDATA 0x20000005
#Defina RIDI_DEVICENAME 0x20000007
#Defina RIDI_DEVICEINFO 0x2000000b

  Tipo Estrutura tagRID_DEVICE_INFO_MOUSE {
    DWORD dwId;
    DWORD dwNumberOfButtons;
    DWORD dwSampleRate;
  } RID_DEVICE_INFO_MOUSE,*PRID_DEVICE_INFO_MOUSE;

  Tipo Estrutura tagRID_DEVICE_INFO_KEYBOARD {
    DWORD dwType;
    DWORD dwSubType;
    DWORD dwKeyboardMode;
    DWORD dwNumberOfFunctionKeys;
    DWORD dwNumberOfIndicators;
    DWORD dwNumberOfKeysTotal;
  } RID_DEVICE_INFO_KEYBOARD,*PRID_DEVICE_INFO_KEYBOARD;

  Tipo Estrutura tagRID_DEVICE_INFO_HID {
    DWORD dwVendorId;
    DWORD dwProductId;
    DWORD dwVersionNumber;
    USHORT usUsagePage;
    USHORT usUsage;
  } RID_DEVICE_INFO_HID,*PRID_DEVICE_INFO_HID;

  Tipo Estrutura tagRID_DEVICE_INFO {
    DWORD cbSize;
    DWORD dwType;
    União {
      RID_DEVICE_INFO_MOUSE mouse;
      RID_DEVICE_INFO_KEYBOARD keyboard;
      RID_DEVICE_INFO_HID hid;
    };
  } RID_DEVICE_INFO,*PRID_DEVICE_INFO,*LPRID_DEVICE_INFO;

#SeDefinido UNICODE
#Defina GetRawInputDeviceInfo GetRawInputDeviceInfoW
#Senão
#Defina GetRawInputDeviceInfo GetRawInputDeviceInfoA
#FimSe

  WINUSERAPI UINT WINAPI GetRawInputDeviceInfoA(HANDLE hDevice,UINT uiCommand,LPVOID pData,PUINT pcbSize);
  WINUSERAPI UINT WINAPI GetRawInputDeviceInfoW(HANDLE hDevice,UINT uiCommand,LPVOID pData,PUINT pcbSize);
  WINUSERAPI UINT WINAPI GetRawInputBuffer(PRAWINPUT pData,PUINT pcbSize,UINT cbSizeHeader);

  Tipo Estrutura tagRAWINPUTDEVICE {
    USHORT usUsagePage;
    USHORT usUsage;
    DWORD dwFlags;
    HWND hwndTarget;
  } RAWINPUTDEVICE,*PRAWINPUTDEVICE,*LPRAWINPUTDEVICE;

  Tipo CONST RAWINPUTDEVICE *PCRAWINPUTDEVICE;

#Defina RIDEV_REMOVE 0x00000001
#Defina RIDEV_EXCLUDE 0x00000010
#Defina RIDEV_PAGEONLY 0x00000020
#Defina RIDEV_NOLEGACY 0x00000030
#Defina RIDEV_INPUTSINK 0x00000100
#Defina RIDEV_CAPTUREMOUSE 0x00000200
#Defina RIDEV_NOHOTKEYS 0x00000200
#Defina RIDEV_APPKEYS 0x00000400
#Defina RIDEV_EXMODEMASK 0x000000F0
#Defina RIDEV_EXMODE(mode) ((mode) & RIDEV_EXMODEMASK)

  WINUSERAPI WINBOOL WINAPI RegisterRawInputDevices(PCRAWINPUTDEVICE pRawInputDevices,UINT uiNumDevices,UINT cbSize);
  WINUSERAPI UINT WINAPI GetRegisteredRawInputDevices(PRAWINPUTDEVICE pRawInputDevices,PUINT puiNumDevices,UINT cbSize);

  Tipo Estrutura tagRAWINPUTDEVICELIST {
    HANDLE hDevice;
    DWORD dwType;
  } RAWINPUTDEVICELIST,*PRAWINPUTDEVICELIST;

  WINUSERAPI UINT WINAPI GetRawInputDeviceList(PRAWINPUTDEVICELIST pRawInputDeviceList,PUINT puiNumDevices,UINT cbSize);
  WINUSERAPI LRESULT WINAPI DefRawInputProc(PRAWINPUT *paRawInput,INT nInput,UINT cbSizeHeader);

#FimSe /* NOUSER */

#SeDefinido __cplusplus
}
#FimSe
#FimSe
